{"version":3,"sources":["../../frag.start","../lib/UUID.js/dist/uuid.core.js","../lib/almond/almond.js","../../frag.end","../lib/kamino.js/lib/kamino.js","../lib/MessageChannel.js/lib/message_channel.js","lib/utils.js","common/rsvp.js","common/oasis/shims.js","common/oasis/util.js","common/oasis/xhr.js","common/oasis/message_channel.js","common/oasis/logger.js","common/oasis/connect.js","common/oasis/version.js","common/oasis/config.js","common/oasis/sandbox.js","common/oasis/sandbox_init.js","common/oasis/events.js","common/oasis/service.js","common/oasis/base_adapter.js","common/oasis/iframe_adapter.js","common/oasis/webworker_adapter.js","common/oasis/inline_adapter.js","common/oasis.js","VersionInfo.js","GlympseAdapterDefines.js","adapter/ViewerMonitor.js","lib/rafUtils.js","lib/ajax.js","lib/image.js","adapter/models/Account.js","adapter/models/MemberInvite.js","adapter/models/MemberPermissions.js","adapter/models/MemberTicket.js","adapter/models/Member.js","adapter/models/Card.js","adapter/CardsController.js","adapter/CoreController.js","adapter/models/GlympseInvite.js","adapter/GlympseLoader.js","adapter/Client.js","adapter/Host.js","GlympseAdapter.js","../../../../../../../../../module-insertRequire.js"],"names":["root","factory","define","amd","glympse","GlympseAdapter","this","UUID","requirejs","require","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","jQuery","generate","a","_gri","b","_ha","NaN","Math","random","c","toString","d","window","isProperty","forEach","getClass","Kamino","VERSION","KaminoException","number","message","isExtended","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","exception","charIndexBuggy","floor","property","constructor","members","__proto__","original","result","parent","object","Properties","size","valueOf","isFunction","isConstructor","Escapes","\\","\"","\b","\f","\n","\r","\t","toPaddedString","width","quote","symbol","charCodeAt","isElement","o","HTMLElement","nodeType","nodeName","serialize","properties","whitespace","indentation","stack","originalClassName","className","results","element","any","regExpSource","regExpModifiers","Function","toJSON","toUTCString","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isNaN","source","ignoreCase","global","multiline","stringify","filter","Index","Source","fromCharCode","String","Unescapes","/","t","r","abort","SyntaxError","parseString","begin","position","lex","sign","dateString","RegExp","Infinity","get","update","walk","parse","clone","functionToCheck","isInWorker","Worker","Window","self","usePoly","a_slice","MessageChannel","isWindowToWindowMessage","currentTarget","log","verbose","unshift","console","messagePorts","MessagePort","uuid","_entangledPortUuid","destinationUrl","_listeners","_messageQueue","_messageQueueEnabled","_currentTarget","start","event","shift","dispatchEvent","close","_getEntangledPort","postMessage","messageClone","target","encodeEvent","_enqueueEvent","_messageEvent","addEventListener","type","listener","removeEventListener","Array","listeners","_getPort","portClone","messageEvent","copyEvents","loadPort","port","_createPort","origin","channel","port1","port2","_channel","msgArgs","MessagePortConstructor","data","ports","messageChannel","encodedMessage","strippedPorts","_strippedPort","msg","msgPorts","messageQueue","portRef","decodeEvent","fakeEvent","propagationHandler","propagateEvent","_addMessagePortEventHandler","attachEvent","_overrideMessageEventListener","originalAddEventListener","addEventListenerName","targetRemoveEventListener","removeEventListenerName","messageEventType","messageHandlerWrapper","originalHandler","entangledPort","reset","otherWindow","targetOrigin","OriginalWorker","worker","_addEventListener","transferList","returnVal","propId","returnDataStreamVal","v","defCfg","localStorage","utils","dbg","minLevel","info","level","JSON","domain","location","hostname","getCookie","val","getItem","cookies","document","cookie","idx","x","substr","decodeURIComponent","setCookie","daysExpire","setItem","setTime","getTime","toGMTString","getCfgVal","propertyName","idCfg","setCfgVal","newValue","capFirst","str","toUpperCase","toUpperCamel","words","out","len","mapProps","targ","props","dataStreamProp","simplifyInvite","invite","toLowerCase","normalizeInvite","ilen","ilen2","cleanInvites","invites","lib$rsvp$utils$$objectOrFunction","lib$rsvp$utils$$isFunction","lib$rsvp$utils$$isMaybeThenable","lib$rsvp$utils$$F","lib$rsvp$events$$indexOf","callbacks","l","lib$rsvp$events$$callbacksFor","_promiseCallbacks","lib$rsvp$config$$configure","lib$rsvp$config$$config","lib$rsvp$instrument$$scheduleFlush","entry","lib$rsvp$instrument$$queue","payload","guid","key","childGuid","childId","error","lib$rsvp$instrument$$instrument","eventName","promise","child","_guidKey","_id","detail","_result","label","_label","timeStamp","lib$rsvp$utils$$now","lib$rsvp$$internal$$withOwnPromise","TypeError","lib$rsvp$$internal$$noop","lib$rsvp$$internal$$getThen","then","lib$rsvp$$internal$$GET_THEN_ERROR","lib$rsvp$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$rsvp$$internal$$handleForeignThenable","thenable","async","sealed","lib$rsvp$$internal$$resolve","lib$rsvp$$internal$$fulfill","reason","lib$rsvp$$internal$$reject","lib$rsvp$$internal$$handleOwnThenable","_state","lib$rsvp$$internal$$FULFILLED","lib$rsvp$$internal$$REJECTED","_onError","lib$rsvp$$internal$$subscribe","lib$rsvp$$internal$$handleMaybeThenable","maybeThenable","lib$rsvp$$internal$$publishRejection","lib$rsvp$$internal$$publish","lib$rsvp$$internal$$PENDING","_subscribers","instrument","lib$rsvp$instrument$$default","onFulfillment","onRejection","subscribers","settled","lib$rsvp$$internal$$invokeCallback","lib$rsvp$$internal$$ErrorObject","lib$rsvp$$internal$$tryCatch","lib$rsvp$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$rsvp$$internal$$initializePromise","resolver","resolved","lib$rsvp$enumerator$$makeSettledResult","state","lib$rsvp$enumerator$$Enumerator","Constructor","input","abortOnReject","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$rsvp$promise$all$$all","entries","lib$rsvp$enumerator$$default","lib$rsvp$promise$race$$race","lib$rsvp$utils$$isArray","resolve","lib$rsvp$promise$resolve$$resolve","lib$rsvp$promise$reject$$reject","lib$rsvp$promise$$needsResolver","lib$rsvp$promise$$needsNew","lib$rsvp$promise$$Promise","lib$rsvp$promise$$counter","lib$rsvp$all$settled$$AllSettled","_superConstructor","lib$rsvp$all$settled$$allSettled","lib$rsvp$promise$$default","lib$rsvp$all$$all","array","all","lib$rsvp$asap$$asap","arg","lib$rsvp$asap$$queue","lib$rsvp$asap$$len","lib$rsvp$asap$$scheduleFlush","lib$rsvp$asap$$useNextTick","nextTick","process","version","versions","node","match","isArray","setImmediate","lib$rsvp$asap$$flush","lib$rsvp$asap$$useVertxTimer","lib$rsvp$asap$$vertxNext","lib$rsvp$asap$$useMutationObserver","iterations","observer","lib$rsvp$asap$$BrowserMutationObserver","createTextNode","observe","characterData","lib$rsvp$asap$$useMessageChannel","onmessage","lib$rsvp$asap$$useSetTimeout","lib$rsvp$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$rsvp$defer$$defer","deferred","reject","lib$rsvp$filter$$filter","promises","filterFn","values","filtered","newLength","lib$rsvp$promise$hash$$PromiseHash","lib$rsvp$hash$settled$$HashSettled","lib$rsvp$hash$settled$$hashSettled","lib$rsvp$hash$$hash","lib$rsvp$promise$hash$$default","lib$rsvp$map$$map","mapFn","lib$rsvp$node$$Result","lib$rsvp$node$$getThen","lib$rsvp$node$$ERROR","lib$rsvp$node$$tryApply","s","lib$rsvp$node$$makeObject","_","argumentNames","lib$rsvp$node$$arrayResult","lib$rsvp$node$$wrapThenable","onFulFillment","lib$rsvp$node$$denodeify","nodeFunc","options","fn","promiseInput","lib$rsvp$node$$needsPromiseInput","lib$rsvp$node$$GET_THEN_ERROR","err","lib$rsvp$node$$handlePromiseInput","lib$rsvp$node$$handleValueInput","lib$rsvp$race$$race","race","lib$rsvp$reject$$reject","lib$rsvp$resolve$$resolve","lib$rsvp$rethrow$$rethrow","lib$rsvp$$async","lib$rsvp$$on","lib$rsvp$$off","lib$rsvp$utils$$_isArray","now","lib$rsvp$utils$$o_create","create","lib$rsvp$events$$default","mixin","on","allCallbacks","off","trigger","_eachEntry","_settledAt","_willSettleAt","_makeResult","enumerator","lib$rsvp$promise$all$$default","lib$rsvp$promise$race$$default","lib$rsvp$promise$resolve$$default","lib$rsvp$promise$reject$$default","lib$rsvp$promise$$guidKey","cast","catch","finally","lib$rsvp$all$settled$$default","lib$rsvp$all$$default","lib$rsvp$asap$$default","lib$rsvp$asap$$browserWindow","lib$rsvp$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$rsvp$asap$$isNode","lib$rsvp$asap$$isWorker","Uint8ClampedArray","importScripts","lib$rsvp$defer$$default","lib$rsvp$filter$$default","lib$rsvp$hash$settled$$default","lib$rsvp$hash$$default","lib$rsvp$map$$default","lib$rsvp$node$$default","lib$rsvp$race$$default","lib$rsvp$reject$$default","lib$rsvp$resolve$$default","lib$rsvp$rethrow$$default","lib$rsvp$$callbacks","lib$rsvp$$eventName","lib$rsvp$umd$$RSVP","Promise","allSettled","hash","hashSettled","denodeify","rethrow","defer","EventTarget","configure","__exports__","o_create","K","receiver","detachEvent","isNativeFunc","func","a_forEach","fun","thisp","a_reduce","reduce","opt_initialValue","isValueSet","a_map","thisArg","T","A","k","O","kValue","mappedValue","a_indexOf","searchElement","abs","max","a_filter","objects","res","__dependency1__","assert","assertion","string","noop","mustImplement","extend","OasisObject","initialize","delegate","delegateeProperty","delegatedMethod","delegatee","uniq","seen","item","_seen","reverseMerge","RSVP","acceptsHeader","dataType","accepts","xhrSetRequestHeader","xhr","setRequestHeader","xhrGetLoadStatus","status","xdrGetLoadStatus","oasis","url","Oasis","NONE","XHR","open","timeout","onload","getLoadStatus","responseText","onprogress","ontimeout","onerror","send","*","text","html","xml","json","XMLHttpRequest","XDomainRequest","OasisPort","getRequestId","oasisId","requestId","OasisMessageChannel","request","clearObservers","errorObserver","onRequest","binding","getResponse","PostMessageMessageChannel","PostMessagePort","destroy","_callbacks","wrappedCallback","configuration","eventCallback","foundCallback","Logger","enabled","enable","disable","logger","__dependency2__","__dependency3__","registerHandler","capability","setupCapability","receivedPorts","rejectCapability","connect","errorCallback","connectConsumers","consumers","connectCallbacks","connectPromise","connectCapabilities","capabilities","eventPorts","handler","portFor","Consumer","consumer","defered","OasisConfiguration","allowSameOrigin","reconnect","OasisSandbox","connections","wiretaps","pkg","packages","adapter","adapters","iframe","_capabilitiesToConnect","_filterCapabilities","envPortDefereds","sandboxPortDefereds","channels","firstLoad","promisePorts","initializeSandbox","waitForLoad","_waitForLoadDeferred","wiretap","portPromise","createAndTransferCapabilities","createChannels","connectPorts","sandbox","services","service","proxyPort","createChannel","environmentPort","sandboxPort","direction","originalSend","destroyChannels","allSandboxPortPromises","accumulator","startSandbox","terminate","isTerminated","terminateSandbox","filterCapabilities","_loadDeferred","autoInitializeSandbox","navigator","userAgent","connectSandbox","webworker","Events","listenerArrays","clear","Service","xform","events","requests","init","superConstructor","ServiceProto","__dependency4__","BaseAdapter","_unsupportedCapabilities","unsupportedCapabilities","addUnsupportedCapability","unsupported","initializeOasisSandbox","isOasisInitialization","oasisLoaded","didConnect","createInitializationMessage","oasisLoadedMessage","sandboxInitializedMessage","verifySandbox","sandboxUrl","link","createElement","href","host","protocol","verifyCurrentSandboxOrigin","fail","linkOriginal","linkCurrent","IframeAdapter","sandboxAttributes","popups","seamless","height","errorHandler","sandboxException","contentWindow","src","initializationHandler","el","oasisLoadHandler","head","documentElement","getElementsByTagName","appendChild","terminated","loadHandler","parentNode","removeChild","rawPorts","WebworkerAdapter","InlineAdapter","sandboxedOasis","body","oasisPort","fetchResource","code","wrapResource","pseudoEvent","applySandboxJS","sandboxFn","loadSandboxJS","didCreate","Version","Sandbox","inline","createSandbox","register","buildDate","Defines","PORT","MAP","REQUESTS","addInvites","addGroups","addMarkers","addTwitterTopics","addTwitterUsers","refreshView","removeInvites","setApiServices","setPadding","setUserInfo","updateSetting","REQUESTS_LOCAL","getInvites","getMap","getMapContainer","generateRoute","ignoreDestinations","CARDS","requestCards","joinRequest","joinRequestCancel","getActiveJoinRequests","removeMember","activity","getCards","REQUEST_TYPES","LINK","CLIPBOARD","SMS","EMAIL","ACCOUNT","CORE","accountCreate","accountDelete","generateAuthToken","getUserInfo","setUserName","setUserAvatar","hasAccount","createRequest","MSG","AccountCreateStatus","AccountDeleteStatus","AccountLoginStatus","UserNameUpdateStatus","UserAvatarUpdateStatus","UserInfoStatus","CreateRequestStatus","AdapterInit","AdapterReady","CardInit","CardReady","CardsInitEnd","CardsInitStart","CardUpdated","CardAdded","CardRemoved","CardsRequestStatus","CardsJoinRequestStatus","CardsJoinRequestCancelStatus","CardsActiveJoinRequestsStatus","CardRemoveMemberStatus","CardsLocationRequestStatus","DataUpdate","InviteAdded","InviteClicked","InviteError","InviteInit","InviteReady","InviteRemoved","Progress","StateUpdate","ViewerInit","ViewerReady","STATE","Avatar","Destination","Eta","InviteEnd","InviteCompleted","InviteStart","Message","Name","Owner","Phase","Arrived","Expired","NoInvites","App","broadcastTypes","DATA","ETA","INVITE_STATUS","GlympseAdapterDefines","MapController","controller","viewerInit","viewerElement","glyEvents","INIT","notify","m","viewerReady","READY","viewerApp","app","cmdQueue","that","cmd","infoUpdate","viewerData","idInvite","lib","ddata","owner","$","unknowns","found","jlen","propMap","notifyExpired","viewerEta","idProp","cEtaVal","cEtaTime","viewerInviteAdded","viewerInviteRemoved","viewerInviteClicked","timerEnd","clearTimeout","stateExpired","endTime","propExpired","expired","run","viewer","PROPERTIES","INVITE_ADDED","INVITE_REMOVED","INVITE_CLICKED","shutdown","getCurrentProperties","getCurrentValue","idProperty","GetInviteProperties","GetInviteProperty","rafSetInterval","delay","handle","raf","initted","syncRaf","syncRAF","w","requestAnimationFrame","cancelAnimationFrame","setInterval","rafClearInterval","clearInterval","parseResponse","response","time","meta","errorDetail","error_detail","processResponse","account","attempts","generateToken","authResult","retry","warn","invalidToken","attempt","MAX_ATTEMPTS","round","lastResult","DEFAULT_OPTIONS","ALL","POST","contentType","api","makeRequest","jqOptions","auth","retryOnError","useBearer","beforeSend","getToken","context","Deferred","ajax","always","post","delete","batch","batchEndpoint","batchRequests","batchResponse","responses","items","getImageType","arrayBuffer","dv","DataView","nume1","getUint8","nume2","hex","imageProcessing","imageScale","imgData","gettingImageInfoCallback","image","scaleX","scaleY","resultImageWidth","resultImageHeight","startX","startY","persistRatio","maintainAspectRatio","scaleSize","maxSize","minSize","canvas","getContext","fillStyle","convertAlpha","fillRect","sidebandFill","drawImage","img","dataURI","toDataURL","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","remove","imageInfo","blob","Blob","urlCreator","URL","webkitURL","imageUrl","createObjectURL","Image","loadDataArrayByUrl","responseType","Account","saveSettings","currentEnvKeys","apiKey","currentKeySettings","settings","idEnvironment","cAccountInfo","getSettings","deleteSettings","getNewToken","gettingTokenProcess","urlLogin","token","access_token","cAcctTokenName","cSvcUserName","userId","checkToken","apiUrl","svr","cUserName","createAccount","opts","cApiKey","urlCreate","resp","pw","password","cSvcPassword","cPassword","svcGlympse","cEnvSandbox","cEnvProduction","isAnon","getId","anonymousUserName","anonymousPassword","u","anonymous","setName","newName","setAvatar","urlOrAvatarDataArray","loadImageCallback","dataArray","imageScaleCallback","processData","avatarCfg","avatar","imageScaleConfig","param","MemberInvite","getData","setData","MemberPermissions","MemberTicket","Member","permissions","ticket","getInvite","getPermissions","getTicket","getMetaData","metadata","Card","idCard","addMember","memberData","member","membersIndex","getMemberById","memberIndex","removeMemberById","removedMember","checkMemberInviteCode","inviteCode","getMemberInviteCode","inviteCodesIndex","addInviteCode","getInviteCode","removeMemberInviteCode","removeInviteCode","inviteCodes","removedInviteCode","inviteIndex","addJoinInvite","inviteData","joinInvitesIndex","joinInvites","removeJoinInviteById","inviteId","removedInvite","lastUpdated","loaded","getMembers","isLoaded","getIdCard","mem","mems","card","action","addedInviteCode","getName","setDataFromStream","streamArray","processMemberResult","newMember","processInviteResult","newInvite","updateResult","cardId","newMembers","newJoinCardInvites","cleanActions","cleanStream","actionType","ref","member_id","last_modified","user_id","invite_id","dirty","method","setLastUpdatingTime","getLastUpdatingTime","CardsController","accountInitComplete","sig","initialized","cardInvites","loadCards","cardsMode","getInviteById","pollingInterval","pollInterval","accountDeleteComplete","loadCard","fullRequest","getCard","updateCard","loadingCard","isNew","cardInvite","loadingCards","cardsReady","cardsIndex","processGetCard","processUpdateCard","allCardIds","cards","cardUrl","from","to","getParams","from_ts","to_ts","cacheCardUpdatedEvts","flushCardUpdatedEvtCache","cachedCardUpdatedEvts","invite_code","invitees","memberList","list","requestConfig","address","memberId","getUserId","getCardActivity","fromTS","toTS","pollCards","cardsInvitesToLoad","rl","CoreController","getAccount","GlympseInvite","loadInvite","inviteUrl","inviteParams","cMaxAttempts","cModuleId","next","no_count","getIdInvite","getError","getReference","reference","setAccount","GlympseLoader","inviteToLoad","Client","oasisLocal","elementViewer","loadInvites","cfgAdapter","pg","twt","g","invitesCard","cardsController","cfgViewer","loadMap","cfgNew","newMapElement","sendEvent","glympses","invitesGlympse","cfgMonitor","viewerMonitor","glympser","splitMulti","generateTargAction","generateRequestAction","updateProgress","curr","min","progressCurrent","progressTotal","total","notifyApp","evtMsg","hideUpdates","hideEvents","sendOasisMessage","oasisInitialize","newPort","connectQueue","connectedOasis","q","extInit","getInviteProperties","getInviteProperty","cfgInvite","glympseLoader","coreController","cfgApp","invitesReferences","mapCardTicketInvites","cfgClient","ViewerMonitor","svcs","intInterfaces","core","aid","idApi","listApis","customInterfaces","interfaces","ext","extInterfaces","initSettings","isCard","loadViewer","targetCards","mStateUpdate","ticketInvite","inviteCards","inviteError","inv","authToken","Host","callbackInitialized","interfaceTypes","intType","generateCustomInterface","callbackConnected","requestGetInfo","infoType","Connected","idPort","cfgSandbox","getInfo","loadGlympser","loader","loaderUrl","loaderPath","loaderEnvironment","loaderVersion","cache","done","client","hostElement","glympserLoader","mapHtmlElement","cfgHost","VersionInfo"],"mappings":"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","file":"glympse-adapter-2.1.1.min.js.map","sourcesContent":["// default:\n// ========\n//(function() {\n//\n(function (root, factory)\n{\n    if (typeof define === 'function' && define.amd)\n\t{\n        //Allow using this built library as an AMD module\n        //in another project. That other project will only\n        //see this AMD call, not the internal modules in\n        //the closure below.\n        define([], factory);\n    }\n\n\t//Browser globals case. Just assign the\n\t//result to a property on the global.\n\t// ---> Set up in GlympseAdapter.js\n\troot.glympse || (root.glympse = {});\n\troot.glympse.GlympseAdapter = factory();\n\n}(this, function () {\n    //almond, and your modules will be inlined here\n","/*\n Version: core-1.0\n The MIT License: Copyright (c) 2012 LiosK.\n*/\nfunction UUID(){}UUID.generate=function(){var a=UUID._gri,b=UUID._ha;return b(a(32),8)+\"-\"+b(a(16),4)+\"-\"+b(16384|a(12),4)+\"-\"+b(32768|a(14),4)+\"-\"+b(a(48),12)};UUID._gri=function(a){return 0>a?NaN:30>=a?0|Math.random()*(1<<a):53>=a?(0|1073741824*Math.random())+1073741824*(0|Math.random()*(1<<a-30)):NaN};UUID._ha=function(a,b){for(var c=a.toString(16),d=b-c.length,e=\"0\";0<d;d>>>=1,e+=e)d&1&&(c=e+c);return c};\n\ndefine(\"UUID\", function(){});\n\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","// default:\n// ========\n//})();\n//\n    //The modules for your project will be inlined above\n    //this snippet. Ask almond to synchronously require the\n    //module value for 'main' here and return it as the\n    //value to use for the public API for the built file.\n    return requirejs('GlympseAdapter');\n}));\n","/*! Kamino v0.0.1 | http://github.com/Cyril-sf/kamino.js | Copyright 2012, Kit Cambridge | http://kit.mit-license.org */\n(function(window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  Kamino = {};\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = Kamino;\n    }\n    exports.Kamino = Kamino;\n  } else {\n    window['Kamino'] = Kamino;\n  }\n\n  Kamino.VERSION = '0.1.0';\n\n  KaminoException = function() {\n    this.name = \"KaminoException\";\n    this.number = 25;\n    this.message = \"Uncaught Error: DATA_CLONE_ERR: Kamino Exception 25\";\n  };\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() == 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // IE <= 7 doesn't support accessing string characters using square\n  // bracket notation. IE 8 only supports this for primitives.\n  var charIndexBuggy = \"A\"[0] != \"A\";\n\n  // Define additional utility methods if the `Date` methods are buggy.\n  if (!isExtended) {\n    var floor = Math.floor;\n    // A mapping between the months of the year and the number of days between\n    // January 1st and the first of the respective month.\n    var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    // Internal: Calculates the number of days between the Unix epoch and the\n    // first day of the given month.\n    var getDay = function (year, month) {\n      return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n    };\n  }\n\n  // Internal: Determines if a property is a direct property of the given\n  // object. Delegates to the native `Object#hasOwnProperty` method.\n  if (!(isProperty = {}.hasOwnProperty)) {\n    isProperty = function (property) {\n      var members = {}, constructor;\n      if ((members.__proto__ = null, members.__proto__ = {\n        // The *proto* property cannot be set multiple times in recent\n        // versions of Firefox and SeaMonkey.\n        \"toString\": 1\n      }, members).toString != getClass) {\n        // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n        // supports the mutable *proto* property.\n        isProperty = function (property) {\n          // Capture and break the object's prototype chain (see section 8.6.2\n          // of the ES 5.1 spec). The parenthesized expression prevents an\n          // unsafe transformation by the Closure Compiler.\n          var original = this.__proto__, result = property in (this.__proto__ = null, this);\n          // Restore the original prototype chain.\n          this.__proto__ = original;\n          return result;\n        };\n      } else {\n        // Capture a reference to the top-level `Object` constructor.\n        constructor = members.constructor;\n        // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n        // other environments.\n        isProperty = function (property) {\n          var parent = (this.constructor || constructor).prototype;\n          return property in this && !(property in parent && this[property] === parent[property]);\n        };\n      }\n      members = null;\n      return isProperty.call(this, property);\n    };\n  }\n\n  // Internal: Normalizes the `for...in` iteration algorithm across\n  // environments. Each enumerated key is yielded to a `callback` function.\n  forEach = function (object, callback) {\n    var size = 0, Properties, members, property, forEach;\n\n    // Tests for bugs in the current environment's `for...in` algorithm. The\n    // `valueOf` property inherits the non-enumerable flag from\n    // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n    (Properties = function () {\n      this.valueOf = 0;\n    }).prototype.valueOf = 0;\n\n    // Iterate over a new instance of the `Properties` class.\n    members = new Properties();\n    for (property in members) {\n      // Ignore all properties inherited from `Object.prototype`.\n      if (isProperty.call(members, property)) {\n        size++;\n      }\n    }\n    Properties = members = null;\n\n    // Normalize the iteration algorithm.\n    if (!size) {\n      // A list of non-enumerable properties inherited from `Object.prototype`.\n      members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n      // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n      // properties.\n      forEach = function (object, callback) {\n        var isFunction = getClass.call(object) == \"[object Function]\", property, length;\n        for (property in object) {\n          // Gecko <= 1.0 enumerates the `prototype` property of functions under\n          // certain conditions; IE does not.\n          if (!(isFunction && property == \"prototype\") && isProperty.call(object, property)) {\n            callback(property);\n          }\n        }\n        // Manually invoke the callback for each non-enumerable property.\n        for (length = members.length; property = members[--length]; isProperty.call(object, property) && callback(property));\n      };\n    } else if (size == 2) {\n      // Safari <= 2.0.4 enumerates shadowed properties twice.\n      forEach = function (object, callback) {\n        // Create a set of iterated properties.\n        var members = {}, isFunction = getClass.call(object) == \"[object Function]\", property;\n        for (property in object) {\n          // Store each property name to prevent double enumeration. The\n          // `prototype` property of functions is not enumerated due to cross-\n          // environment inconsistencies.\n          if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n            callback(property);\n          }\n        }\n      };\n    } else {\n      // No bugs detected; use the standard `for...in` algorithm.\n      forEach = function (object, callback) {\n        var isFunction = getClass.call(object) == \"[object Function]\", property, isConstructor;\n        for (property in object) {\n          if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n            callback(property);\n          }\n        }\n        // Manually invoke the callback for the `constructor` property due to\n        // cross-environment inconsistencies.\n        if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n          callback(property);\n        }\n      };\n    }\n    return forEach(object, callback);\n  };\n\n  // Public: Serializes a JavaScript `value` as a string. The optional\n  // `filter` argument may specify either a function that alters how object and\n  // array members are serialized, or an array of strings and numbers that\n  // indicates which properties should be serialized. The optional `width`\n  // argument may be either a string or number that specifies the indentation\n  // level of the output.\n\n  // Internal: A map of control characters and their escaped equivalents.\n  var Escapes = {\n    \"\\\\\": \"\\\\\\\\\",\n    '\"': '\\\\\"',\n    \"\\b\": \"\\\\b\",\n    \"\\f\": \"\\\\f\",\n    \"\\n\": \"\\\\n\",\n    \"\\r\": \"\\\\r\",\n    \"\\t\": \"\\\\t\"\n  };\n\n  // Internal: Converts `value` into a zero-padded string such that its\n  // length is at least equal to `width`. The `width` must be <= 6.\n  var toPaddedString = function (width, value) {\n    // The `|| 0` expression is necessary to work around a bug in\n    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n    return (\"000000\" + (value || 0)).slice(-width);\n  };\n\n  // Internal: Double-quotes a string `value`, replacing all ASCII control\n  // characters (characters with code unit values between 0 and 31) with\n  // their escaped equivalents. This is an implementation of the\n  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n  var quote = function (value) {\n    var result = '\"', index = 0, symbol;\n    for (; symbol = value.charAt(index); index++) {\n      // Escape the reverse solidus, double quote, backspace, form feed, line\n      // feed, carriage return, and tab characters.\n      result += '\\\\\"\\b\\f\\n\\r\\t'.indexOf(symbol) > -1 ? Escapes[symbol] :\n        // If the character is a control character, append its Unicode escape\n        // sequence; otherwise, append the character as-is.\n        (Escapes[symbol] = symbol < \" \" ? \"\\\\u00\" + toPaddedString(2, symbol.charCodeAt(0).toString(16)) : symbol);\n    }\n    return result + '\"';\n  };\n\n  // Internal: detects if an object is a DOM element.\n  // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n  var isElement = function(o) {\n    return (\n      typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n      o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName===\"string\"\n    );\n  };\n\n  // Internal: Recursively serializes an object. Implements the\n  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n  var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n    var value = object[property], originalClassName, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, any, result,\n        regExpSource, regExpModifiers = \"\";\n    if( value instanceof Error || value instanceof Function) {\n      throw new KaminoException();\n    }\n    if( isElement( value ) ) {\n      throw new KaminoException();\n    }\n    if (typeof value == \"object\" && value) {\n      originalClassName = getClass.call(value);\n      if (originalClassName == \"[object Date]\" && !isProperty.call(value, \"toJSON\")) {\n        if (value > -1 / 0 && value < 1 / 0) {\n          value = value.toUTCString().replace(\"GMT\", \"UTC\");\n        } else {\n          value = null;\n        }\n      } else if (typeof value.toJSON == \"function\" && ((originalClassName != \"[object Number]\" && originalClassName != \"[object String]\" && originalClassName != \"[object Array]\") || isProperty.call(value, \"toJSON\"))) {\n        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n        // ignores all `toJSON` methods on these objects unless they are\n        // defined directly on an instance.\n        value = value.toJSON(property);\n      }\n    }\n    if (callback) {\n      // If a replacement function was provided, call it to obtain the value\n      // for serialization.\n      value = callback.call(object, property, value);\n    }\n    if (value === null) {\n      return \"null\";\n    }\n    if (value === undefined) {\n      return undefined;\n    }\n    className = getClass.call(value);\n    if (className == \"[object Boolean]\") {\n      // Booleans are represented literally.\n      return \"\" + value;\n    } else if (className == \"[object Number]\") {\n      // Kamino numbers must be finite. `Infinity` and `NaN` are serialized as\n      // `\"null\"`.\n      if( value === Number.POSITIVE_INFINITY ) {\n        return \"Infinity\";\n      } else if( value === Number.NEGATIVE_INFINITY ) {\n        return \"NInfinity\";\n      } else if( isNaN( value ) ) {\n        return \"NaN\";\n      }\n      return \"\" + value;\n    } else if (className == \"[object RegExp]\") {\n      // Strings are double-quoted and escaped.\n      regExpSource = value.source;\n      regExpModifiers += value.ignoreCase ? \"i\" : \"\";\n      regExpModifiers += value.global ? \"g\" : \"\";\n      regExpModifiers += value.multiline ? \"m\" : \"\";\n\n      regExpSource = quote(charIndexBuggy ? regExpSource.split(\"\") : regExpSource);\n      regExpModifiers = quote(charIndexBuggy ? regExpModifiers.split(\"\") : regExpModifiers);\n\n      // Adds the RegExp prefix.\n      value = '^' + regExpSource + regExpModifiers;\n\n      return value;\n    } else if (className == \"[object String]\") {\n      // Strings are double-quoted and escaped.\n      value = quote(charIndexBuggy ? value.split(\"\") : value);\n\n      if( originalClassName == \"[object Date]\") {\n        // Adds the Date prefix.\n        value = '%' + value;\n      }\n\n      return value;\n    }\n    // Recursively serialize objects and arrays.\n    if (typeof value == \"object\") {\n      // Check for cyclic structures. This is a linear search; performance\n      // is inversely proportional to the number of unique nested objects.\n      for (length = stack.length; length--;) {\n        if (stack[length] === value) {\n          return \"&\" + length;\n        }\n      }\n      // Add the object to the stack of traversed objects.\n      stack.push(value);\n      results = [];\n      // Save the current indentation level and indent one additional level.\n      prefix = indentation;\n      indentation += whitespace;\n      if (className == \"[object Array]\") {\n        // Recursively serialize array elements.\n        for (index = 0, length = value.length; index < length; any || (any = true), index++) {\n          element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n          results.push(element === undef ? \"null\" : element);\n        }\n        result = any ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n      } else {\n        // Recursively serialize object members. Members are selected from\n        // either a user-specified list of property names, or the object\n        // itself.\n        forEach(properties || value, function (property) {\n          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n          if (element !== undef) {\n            // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n            // is not the empty string, let `member` {quote(property) + \":\"}\n            // be the concatenation of `member` and the `space` character.\"\n            // The \"`space` character\" refers to the literal space\n            // character, not the `space` {width} argument provided to\n            // `JSON.stringify`.\n            results.push(quote(charIndexBuggy ? property.split(\"\") : property) + \":\" + (whitespace ? \" \" : \"\") + element);\n          }\n          any || (any = true);\n        });\n        result = any ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n      }\n      return result;\n    }\n  };\n\n  // Public: `Kamino.stringify`. See ES 5.1 section 15.12.3.\n  Kamino.stringify = function (source, filter, width) {\n    var whitespace, callback, properties;\n    if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n      if (getClass.call(filter) == \"[object Function]\") {\n        callback = filter;\n      } else if (getClass.call(filter) == \"[object Array]\") {\n        // Convert the property names array into a makeshift set.\n        properties = {};\n        for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((getClass.call(value) == \"[object String]\" || getClass.call(value) == \"[object Number]\") && (properties[value] = 1)));\n      }\n    }\n    if (width) {\n      if (getClass.call(width) == \"[object Number]\") {\n        // Convert the `width` to an integer and create a string containing\n        // `width` number of space characters.\n        if ((width -= width % 1) > 0) {\n          for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n        }\n      } else if (getClass.call(width) == \"[object String]\") {\n        whitespace = width.length <= 10 ? width : width.slice(0, 10);\n      }\n    }\n    // Opera <= 7.54u2 discards the values associated with empty string keys\n    // (`\"\"`) only if they are used directly within an object member list\n    // (e.g., `!(\"\" in { \"\": 1})`).\n    return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n  };\n\n  // Public: Parses a source string.\n  var fromCharCode = String.fromCharCode;\n\n  // Internal: A map of escaped control characters and their unescaped\n  // equivalents.\n  var Unescapes = {\n    \"\\\\\": \"\\\\\",\n    '\"': '\"',\n    \"/\": \"/\",\n    \"b\": \"\\b\",\n    \"t\": \"\\t\",\n    \"n\": \"\\n\",\n    \"f\": \"\\f\",\n    \"r\": \"\\r\"\n  };\n\n  // Internal: Stores the parser state.\n  var Index, Source, stack;\n\n  // Internal: Resets the parser state and throws a `SyntaxError`.\n  var abort = function() {\n    Index = Source = null;\n    throw SyntaxError();\n  };\n\n  var parseString = function(prefix) {\n    prefix = prefix || \"\";\n    var source = Source, length = source.length, value, symbol, begin, position;\n    // Advance to the next character and parse a Kamino string at the\n    // current position. String tokens are prefixed with the sentinel\n    // `@` character to distinguish them from punctuators.\n    for (value = prefix, Index++; Index < length;) {\n      symbol = source[Index];\n      if (symbol < \" \") {\n        // Unescaped ASCII control characters are not permitted.\n        abort();\n      } else if (symbol == \"\\\\\") {\n        // Parse escaped Kamino control characters, `\"`, `\\`, `/`, and\n        // Unicode escape sequences.\n        symbol = source[++Index];\n        if ('\\\\\"/btnfr'.indexOf(symbol) > -1) {\n          // Revive escaped control characters.\n          value += Unescapes[symbol];\n          Index++;\n        } else if (symbol == \"u\") {\n          // Advance to the first character of the escape sequence.\n          begin = ++Index;\n          // Validate the Unicode escape sequence.\n          for (position = Index + 4; Index < position; Index++) {\n            symbol = source[Index];\n            // A valid sequence comprises four hexdigits that form a\n            // single hexadecimal value.\n            if (!(symbol >= \"0\" && symbol <= \"9\" || symbol >= \"a\" && symbol <= \"f\" || symbol >= \"A\" && symbol <= \"F\")) {\n              // Invalid Unicode escape sequence.\n              abort();\n            }\n          }\n          // Revive the escaped character.\n          value += fromCharCode(\"0x\" + source.slice(begin, Index));\n        } else {\n          // Invalid escape sequence.\n          abort();\n        }\n      } else {\n        if (symbol == '\"') {\n          // An unescaped double-quote character marks the end of the\n          // string.\n          break;\n        }\n        // Append the original character as-is.\n        value += symbol;\n        Index++;\n      }\n    }\n    if (source[Index] == '\"') {\n      Index++;\n      // Return the revived string.\n      return value;\n    }\n    // Unterminated string.\n    abort();\n  };\n\n  // Internal: Returns the next token, or `\"$\"` if the parser has reached\n  // the end of the source string. A token may be a string, number, `null`\n  // literal, `NaN` literal or Boolean literal.\n  var lex = function () {\n    var source = Source, length = source.length, symbol, value, begin, position, sign,\n        dateString, regExpSource, regExpModifiers;\n    while (Index < length) {\n      symbol = source[Index];\n      if (\"\\t\\r\\n \".indexOf(symbol) > -1) {\n        // Skip whitespace tokens, including tabs, carriage returns, line\n        // feeds, and space characters.\n        Index++;\n      } else if (\"{}[]:,\".indexOf(symbol) > -1) {\n        // Parse a punctuator token at the current position.\n        Index++;\n        return symbol;\n      } else if (symbol == '\"') {\n        // Parse strings.\n        return parseString(\"@\");\n      } else if (symbol == '%') {\n        // Parse dates.\n        Index++;\n        symbol = source[Index];\n        if(symbol == '\"') {\n          dateString = parseString();\n          return new Date( dateString );\n        }\n        abort();\n      } else if (symbol == '^') {\n        // Parse regular expressions.\n        Index++;\n        symbol = source[Index];\n        if(symbol == '\"') {\n          regExpSource = parseString();\n\n          symbol = source[Index];\n          if(symbol == '\"') {\n            regExpModifiers = parseString();\n\n            return new RegExp( regExpSource, regExpModifiers );\n          }\n        }\n        abort();\n      } else if (symbol == '&') {\n        // Parse object references.\n        Index++;\n        symbol = source[Index];\n        if (symbol >= \"0\" && symbol <= \"9\") {\n          Index++;\n          return stack[symbol];\n        }\n        abort();\n      } else {\n        // Parse numbers and literals.\n        begin = Index;\n        // Advance the scanner's position past the sign, if one is\n        // specified.\n        if (symbol == \"-\") {\n          sign = true;\n          symbol = source[++Index];\n        }\n        // Parse an integer or floating-point value.\n        if (symbol >= \"0\" && symbol <= \"9\") {\n          // Leading zeroes are interpreted as octal literals.\n          if (symbol == \"0\" && (symbol = source[Index + 1], symbol >= \"0\" && symbol <= \"9\")) {\n            // Illegal octal literal.\n            abort();\n          }\n          sign = false;\n          // Parse the integer component.\n          for (; Index < length && (symbol = source[Index], symbol >= \"0\" && symbol <= \"9\"); Index++);\n          // Floats cannot contain a leading decimal point; however, this\n          // case is already accounted for by the parser.\n          if (source[Index] == \".\") {\n            position = ++Index;\n            // Parse the decimal component.\n            for (; position < length && (symbol = source[position], symbol >= \"0\" && symbol <= \"9\"); position++);\n            if (position == Index) {\n              // Illegal trailing decimal.\n              abort();\n            }\n            Index = position;\n          }\n          // Parse exponents.\n          symbol = source[Index];\n          if (symbol == \"e\" || symbol == \"E\") {\n            // Skip past the sign following the exponent, if one is\n            // specified.\n            symbol = source[++Index];\n            if (symbol == \"+\" || symbol == \"-\") {\n              Index++;\n            }\n            // Parse the exponential component.\n            for (position = Index; position < length && (symbol = source[position], symbol >= \"0\" && symbol <= \"9\"); position++);\n            if (position == Index) {\n              // Illegal empty exponent.\n              abort();\n            }\n            Index = position;\n          }\n          // Coerce the parsed value to a JavaScript number.\n          return +source.slice(begin, Index);\n        }\n        // A negative sign may only precede numbers.\n        if (sign) {\n          abort();\n        }\n        // `true`, `false`, `Infinity`, `-Infinity`, `NaN` and `null` literals.\n        if (source.slice(Index, Index + 4) == \"true\") {\n          Index += 4;\n          return true;\n        } else if (source.slice(Index, Index + 5) == \"false\") {\n          Index += 5;\n          return false;\n        } else if (source.slice(Index, Index + 8) == \"Infinity\") {\n          Index += 8;\n          return Infinity;\n        } else if (source.slice(Index, Index + 9) == \"NInfinity\") {\n          Index += 9;\n          return -Infinity;\n        } else if (source.slice(Index, Index + 3) == \"NaN\") {\n          Index += 3;\n          return NaN;\n        } else if (source.slice(Index, Index + 4) == \"null\") {\n          Index += 4;\n          return null;\n        }\n        // Unrecognized token.\n        abort();\n      }\n    }\n    // Return the sentinel `$` character if the parser has reached the end\n    // of the source string.\n    return \"$\";\n  };\n\n  // Internal: Parses a Kamino `value` token.\n  var get = function (value) {\n    var results, any, key;\n    if (value == \"$\") {\n      // Unexpected end of input.\n      abort();\n    }\n    if (typeof value == \"string\") {\n      if (value[0] == \"@\") {\n        // Remove the sentinel `@` character.\n        return value.slice(1);\n      }\n      // Parse object and array literals.\n      if (value == \"[\") {\n        // Parses a Kamino array, returning a new JavaScript array.\n        results = [];\n        stack[stack.length] = results;\n        for (;; any || (any = true)) {\n          value = lex();\n          // A closing square bracket marks the end of the array literal.\n          if (value == \"]\") {\n            break;\n          }\n          // If the array literal contains elements, the current token\n          // should be a comma separating the previous element from the\n          // next.\n          if (any) {\n            if (value == \",\") {\n              value = lex();\n              if (value == \"]\") {\n                // Unexpected trailing `,` in array literal.\n                abort();\n              }\n            } else {\n              // A `,` must separate each array element.\n              abort();\n            }\n          }\n          // Elisions and leading commas are not permitted.\n          if (value == \",\") {\n            abort();\n          }\n          results.push(get(typeof value == \"string\" && charIndexBuggy ? value.split(\"\") : value));\n        }\n        return results;\n      } else if (value == \"{\") {\n        // Parses a Kamino object, returning a new JavaScript object.\n        results = {};\n        stack[stack.length] = results;\n        for (;; any || (any = true)) {\n          value = lex();\n          // A closing curly brace marks the end of the object literal.\n          if (value == \"}\") {\n            break;\n          }\n          // If the object literal contains members, the current token\n          // should be a comma separator.\n          if (any) {\n            if (value == \",\") {\n              value = lex();\n              if (value == \"}\") {\n                // Unexpected trailing `,` in object literal.\n                abort();\n              }\n            } else {\n              // A `,` must separate each object member.\n              abort();\n            }\n          }\n          // Leading commas are not permitted, object property names must be\n          // double-quoted strings, and a `:` must separate each property\n          // name and value.\n          if (value == \",\" || typeof value != \"string\" || value[0] != \"@\" || lex() != \":\") {\n            abort();\n          }\n          var result = lex();\n          results[value.slice(1)] = get(typeof result == \"string\" && charIndexBuggy ? result.split(\"\") : result);\n        }\n        return results;\n      }\n      // Unexpected token encountered.\n      abort();\n    }\n    return value;\n  };\n\n  // Internal: Updates a traversed object member.\n  var update = function(source, property, callback) {\n    var element = walk(source, property, callback);\n    if (element === undef) {\n      delete source[property];\n    } else {\n      source[property] = element;\n    }\n  };\n\n  // Internal: Recursively traverses a parsed Kamino object, invoking the\n  // `callback` function for each value. This is an implementation of the\n  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n  var walk = function (source, property, callback) {\n    var value = source[property], length;\n    if (typeof value == \"object\" && value) {\n      if (getClass.call(value) == \"[object Array]\") {\n        for (length = value.length; length--;) {\n          update(value, length, callback);\n        }\n      } else {\n        // `forEach` can't be used to traverse an array in Opera <= 8.54,\n        // as `Object#hasOwnProperty` returns `false` for array indices\n        // (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n        forEach(value, function (property) {\n          update(value, property, callback);\n        });\n      }\n    }\n    return callback.call(source, property, value);\n  };\n\n  // Public: `Kamino.parse`. See ES 5.1 section 15.12.2.\n  Kamino.parse = function (source, callback) {\n    var result, value;\n    Index = 0;\n    Source = \"\" + source;\n    stack = [];\n    if (charIndexBuggy) {\n      Source = source.split(\"\");\n    }\n    result = get(lex());\n    // If a Kamino string contains multiple tokens, it is invalid.\n    if (lex() != \"$\") {\n      abort();\n    }\n    // Reset the parser state.\n    Index = Source = null;\n    return callback && getClass.call(callback) == \"[object Function]\" ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n  };\n\n  Kamino.clone = function(source) {\n    return Kamino.parse( Kamino.stringify(source) );\n  };\n})(this);\n\ndefine(\"kamino\", function(){});\n\n","(function(root) {\n  var self = root,\n      Window = self.Window,\n      usePoly = false,\n      a_slice = [].slice;\n\n  function isFunction(functionToCheck) {\n    return functionToCheck && Object.prototype.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  function isInWorker() {\n    return  typeof Worker === 'undefined' && typeof Window === 'undefined';\n  }\n\n  if( usePoly || !self.MessageChannel ) {\n\n    var isWindowToWindowMessage = function( currentTarget ) {\n          return typeof window !== \"undefined\" && self instanceof Window && ( !isFunction(self.Worker) || !(currentTarget instanceof Worker) );\n        },\n        log = function( message ) {\n          if (MessageChannel.verbose) {\n            var args = a_slice.apply(arguments);\n            args.unshift(\"MCNP: \");\n            console.log.apply(console, args);\n          }\n        },\n        messagePorts = {};\n\n    var MessagePort = self.MessagePort = function( uuid ) {\n      this._entangledPortUuid = null;\n      this.destinationUrl = null;\n      this._listeners = {};\n      this._messageQueue = [];\n      this._messageQueueEnabled = false;\n      this._currentTarget = null;\n\n      this.uuid = uuid || UUID.generate();\n      messagePorts[this.uuid] = this;\n      this.log(\"created\");\n    };\n\n    MessagePort.prototype = {\n      start: function() {\n        var event,\n            self = this;\n\n        // TODO: we have no guarantee that\n        // we will not receive and process events in the correct order\n        setTimeout( function() {\n          self.log('draining ' + self._messageQueue.length + ' queued messages');\n          while( self._messageQueueEnabled && (event = self._messageQueue.shift()) ) {\n            self.dispatchEvent( event );\n          }\n        });\n        this._messageQueueEnabled = true;\n        this.log('started');\n      },\n\n      close: function() {\n        this._messageQueueEnabled = false;\n        if( this._entangledPortUuid ) {\n          this._getEntangledPort()._entangledPortUuid = null;\n          this._entangledPortUuid = null;\n\n          // /!\\ Probably need to send that (?)\n        }\n      },\n\n      postMessage: function( message ) {\n        // Numbers refer to step from the W3C specs. It shows how simplified things are\n        // 1- Let target port be the port with which source port is entangled, if any\n        var target = this._getEntangledPort(),\n            currentTarget = this._currentTarget,\n            messageClone;\n\n\n        // 8- If there is no target port (i.e. if source port is not entangled), then abort these steps.\n        if(!target) {\n          this.log(\"not entangled, discarding message\", message);\n          return;\n        }\n\n        // 12- Add the event to the port message queue of target port.\n        // As the port is cloned when sent to the other user agent,\n        // posting a message can mean different things:\n        // * The port is still local, then we need to queue the event\n        // * the port has been sent, then we need to send that event\n        if( currentTarget ) {\n          // 5- Let message clone be the result of obtaining a structured clone of the message argument\n          messageClone = MessageChannel.encodeEvent( message, [target], true );\n\n          if( isWindowToWindowMessage( currentTarget ) ) {\n            this.log(\"posting message from window to window\", message, this.destinationUrl);\n            currentTarget.postMessage(messageClone, this.destinationUrl);\n          } else {\n            this.log(\"posting message from or to worker\", message);\n            currentTarget.postMessage(messageClone);\n          }\n        } else {\n          this.log(\"not connected, queueing message\", message);\n          target._enqueueEvent(MessageChannel._messageEvent(message, [target], true));\n        }\n      },\n\n      addEventListener: function( type, listener ) {\n        if (typeof this._listeners[type] === \"undefined\"){\n          this._listeners[type] = [];\n        }\n\n        this._listeners[type].push( listener );\n      },\n\n      removeEventListener: function( type, listener) {\n        if (this._listeners[type] instanceof Array){\n          var listeners = this._listeners[type];\n          for (var i=0; i < listeners.length; i++){\n            if (listeners[i] === listener){\n              listeners.splice(i, 1);\n              break;\n            }\n          }\n        }\n      },\n\n      dispatchEvent: function( event ) {\n        var listeners = this._listeners.message;\n        if( listeners ) {\n          for (var i=0; i < listeners.length; i++){\n            listeners[i].call(this, event);\n          }\n        }\n      },\n\n      _enqueueEvent: function( event ) {\n        if(this._messageQueueEnabled) {\n          this.dispatchEvent( event );\n        } else {\n          this._messageQueue.push( event );\n        }\n      },\n\n      _getPort: function( portClone, messageEvent, copyEvents ) {\n        var loadPort = function(uuid) {\n          var port = messagePorts[uuid] || MessageChannel._createPort(uuid);\n          return port;\n        };\n\n        var port = loadPort(portClone.uuid);\n        port._entangledPortUuid = portClone._entangledPortUuid;\n        port._getEntangledPort()._entangledPortUuid = port.uuid;\n        port._currentTarget =  messageEvent.source || messageEvent.currentTarget || self;\n        if( messageEvent.origin === \"null\" ) {\n          port.destinationUrl = \"*\";\n        } else {\n          port.destinationUrl = messageEvent.origin;\n        }\n\n        if( copyEvents ) {\n          for( var i=0 ; i < portClone._messageQueue.length ; i++ ) {\n            port._messageQueue.push( portClone._messageQueue[i] );\n          }\n        }\n\n        return port;\n      },\n\n      _getEntangledPort: function() {\n        if( this._entangledPortUuid ) {\n          return messagePorts[ this._entangledPortUuid ] || MessageChannel._createPort(this._entangledPortUuid);\n        } else {\n          return null;\n        }\n      },\n\n      log: function () {\n        if (MessageChannel.verbose) {\n          var args = a_slice.apply(arguments);\n          args.unshift(\"Port\", this.uuid);\n          log.apply(null, args);\n        }\n      }\n    };\n\n    var MessageChannel = self.MessageChannel = function () {\n      var port1 = MessageChannel._createPort(),\n          port2 = MessageChannel._createPort(),\n          channel;\n\n      port1._entangledPortUuid = port2.uuid;\n      port2._entangledPortUuid = port1.uuid;\n\n      channel = {\n        port1: port1,\n        port2: port2\n      };\n\n      MessageChannel.log(channel, \"created\");\n\n      return channel;\n    };\n\n    MessageChannel.log = function (_channel) {\n      if (MessageChannel.verbose) {\n        var args = [\"Chnl\"],\n            msgArgs = a_slice.call(arguments, 1);\n\n        if (_channel.port1 && _channel.port2) {\n          args.push(_channel.port1.uuid, _channel.port2.uuid);\n        } else {\n          _channel.forEach( function(channel) {\n            args.push(channel._entangledPortUuid);\n          });\n        }\n\n        args.push.apply(args, msgArgs);\n        log.apply(null, args);\n      }\n    };\n\n    MessageChannel._createPort = function() {\n      var args = arguments,\n          MessagePortConstructor = function() {\n            return MessagePort.apply(this, args);\n          };\n\n      MessagePortConstructor.prototype = MessagePort.prototype;\n\n      return new MessagePortConstructor();\n    };\n\n    /**\n        Encode the event to be sent.\n\n        messageEvent.data contains a fake Event encoded with Kamino.js\n\n        It contains:\n        * data: the content that the MessagePort should send\n        * ports: The targeted MessagePorts.\n        * messageChannel: this allows to decide if the MessageEvent was meant for the window or the port\n\n        @param {Object} data\n        @param {Array} ports\n        @param {Boolean} messageChannel\n        @returns {String} a string representation of the data to be sent\n    */\n    MessageChannel.encodeEvent = function( data, ports, messageChannel ) {\n      var strippedPorts = new Array(ports.length),\n          encodedMessage, messageEvent;\n\n      for (var i = 0; i < ports.length; ++i) {\n        strippedPorts[i] = MessageChannel._strippedPort(ports[i]);\n      }\n\n      messageEvent = { event: MessageChannel._messageEvent(data, strippedPorts, messageChannel) };\n      encodedMessage = Kamino.stringify(messageEvent);\n\n      return encodedMessage;\n    };\n\n    MessageChannel._messageEvent = function(data, ports, messageChannel) {\n      return  { data: data, ports: ports, messageChannel: messageChannel};\n    };\n\n    MessageChannel._strippedPort = function (port) {\n      if (!port) { return; }\n\n      var messageQueue = [];\n      for (var msg, msgPorts, ports, i = 0; i < port._messageQueue.length; ++i) {\n        msg = port._messageQueue[i];\n        msgPorts = msg.ports || [];\n        ports = [];\n\n        for (var portRef, j = 0; j < msgPorts.length; ++j) {\n          portRef = msgPorts[j];\n          ports.push({\n            uuid: portRef.uuid,\n            _entangledPortUuid: portRef._entangledPortUuid\n          });\n        }\n        messageQueue.push({\n          data: msg.data,\n          messageChannel: msg.messageChannel,\n          ports: ports\n        });\n      }\n\n      return {\n        uuid: port.uuid,\n        _entangledPortUuid: port._entangledPortUuid,\n        _messageQueue: messageQueue\n      };\n    };\n\n    /**\n        Extract the event from the message.\n\n        messageEvent.data contains a fake Event encoded with Kamino.js\n\n        It contains:\n        * data: the content that the MessagePort should use\n        * ports: The targeted MessagePorts.\n        * messageChannel: this allows to decide if the MessageEvent was meant for the window or the port\n\n        @param {MessageEvent} messageEvent\n        @param {Boolean} copyEvents: copy or not the events from the cloned port to the local one\n        @returns {Object} an object that fakes an event with limited attributes ( data, ports )\n    */\n    MessageChannel.decodeEvent = function( messageEvent, copyEvents ) {\n      var fakeEvent = {\n            data: null,\n            ports: []\n          },\n          data = Kamino.parse( messageEvent.data ),\n          event = data.event,\n          ports = event.ports;\n\n      if( event ) {\n        if( ports ) {\n          for(var i=0; i< ports.length ; i++) {\n            fakeEvent.ports.push( MessagePort.prototype._getPort( ports[i], messageEvent, copyEvents ) );\n          }\n        }\n        fakeEvent.data = event.data;\n        fakeEvent.source = messageEvent.source;\n        fakeEvent.messageChannel = event.messageChannel;\n      }\n\n      return fakeEvent;\n    };\n\n    /**\n        Extract the event from the message if possible.\n\n        A user agent can received events that are not encoded using Kamino.\n\n        @param {MessageEvent} messageEvent\n        @param {Boolean} copyEvents: copy or not the events from the cloned port to the local one\n        @returns {Object} an object that fakes an event or the triggered event\n    */\n    var decodeEvent = function( event, copyEvents ) {\n      var messageEvent;\n\n      try {\n        messageEvent = MessageChannel.decodeEvent( event, copyEvents );\n      } catch( e ) {\n        if( e instanceof SyntaxError ) {\n          messageEvent = event;\n        } else {\n          throw e;\n        }\n      }\n\n      return messageEvent;\n    };\n\n    var propagationHandler = function( event ) {\n      var messageEvent = decodeEvent( event, true );\n\n      if( messageEvent.messageChannel ) {\n        MessageChannel.propagateEvent( messageEvent );\n      }\n    };\n\n    // Add the default message event handler\n    // This is useful so that a user agent can pass ports\n    // without declaring any event handler.\n    //\n    // This handler takes care of copying the events queue passed with a port.\n    // We only need to perform this when passing a port between user agents,\n    // otherwise the event is passed through `postMessage` and not through the queue\n    // and is handled by the port's message listener.\n    //\n    // Ex:\n    //    iFrame1 - iFrame2 - iFrame3\n    //    iFrame2 creates a MessageChannel and passes a port to each iframe\n    //    we need a default handler to receive MessagePorts' events\n    //    and to propagate them\n    var _addMessagePortEventHandler = function( target ) {\n      if( target.addEventListener ) {\n        target.addEventListener( 'message', propagationHandler, false );\n      } else if( target.attachEvent ) {\n        target.attachEvent( 'onmessage', propagationHandler );\n      }\n    };\n\n    var _overrideMessageEventListener = function( target ) {\n      var originalAddEventListener, addEventListenerName,\n          targetRemoveEventListener, removeEventListenerName,\n          messageEventType,\n          messageHandlers = [];\n\n      if( target.addEventListener ) {\n        addEventListenerName = 'addEventListener';\n        removeEventListenerName = 'removeEventListener';\n        messageEventType = 'message';\n      } else if( target.attachEvent ) {\n        addEventListenerName = 'attachEvent';\n        removeEventListenerName = 'detachEvent';\n        messageEventType = 'onmessage';\n      }\n      originalAddEventListener = target[addEventListenerName];\n      targetRemoveEventListener = target[removeEventListenerName];\n\n      target[addEventListenerName] = function() {\n        var args = Array.prototype.slice.call( arguments ),\n            originalHandler = args[1],\n            self = this,\n            messageHandlerWrapper;\n\n        if( args[0] === messageEventType ) {\n          messageHandlerWrapper = function( event ) {\n            var messageEvent = decodeEvent( event );\n\n            if( ! messageEvent.messageChannel ) {\n              originalHandler.call( self, messageEvent );\n            }\n          };\n          originalHandler.messageHandlerWrapper = messageHandlerWrapper;\n\n          args[1] = messageHandlerWrapper;\n        }\n\n        originalAddEventListener.apply( this, args );\n      };\n\n      target[removeEventListenerName] = function() {\n        var args = Array.prototype.slice.call( arguments ),\n            originalHandler = args[1];\n\n        if( args[0] === messageEventType ) {\n          args[1] = originalHandler.messageHandlerWrapper;\n          delete originalHandler.messageHandlerWrapper;\n        }\n\n        if( args[1] ) {\n          targetRemoveEventListener.apply( this, args );\n        }\n      };\n    };\n\n\n    /**\n        Send the event to the targeted ports\n\n        It uses the `messageChannel` attribute to decide\n        if the event is meant for the window or MessagePorts\n\n        @param {Object} fakeEvent\n    */\n    MessageChannel.propagateEvent = function( fakeEvent ) {\n      var ports, port, entangledPort;\n\n      if( fakeEvent.messageChannel ) {\n        ports = fakeEvent.ports;\n\n        for( var i=0 ; i<ports.length ; i++) {\n          port = ports[i];\n          entangledPort = port._getEntangledPort();\n\n          if( port._currentTarget && entangledPort._currentTarget ) {\n            entangledPort.postMessage( fakeEvent.data );\n          } else {\n            port._enqueueEvent( fakeEvent );\n          }\n        }\n      }\n    };\n\n    MessageChannel.reset = function() {\n      messagePorts = {};\n    };\n\n    //\n    _addMessagePortEventHandler( self );\n\n    /**\n        Send the MessagePorts to the other window\n\n        `window.postMessage` doesn't accept fake ports so we have to encode them\n        and pass them in the message.\n\n        @param {Object} otherWindow: A reference to another window.\n        @param {Object} message: Data to be sent to the other window.\n        @param {String} targetOrigin: Specifies what the origin of otherWindow must be for the event to be dispatched.\n        @param {Array} ports: MessagePorts that need to be sent to otherWindow.\n    */\n    if( Window ) {\n      Window.postMessage = function( otherWindow, message, targetOrigin, ports ) {\n        var data, entangledPort;\n\n        // Internet Explorer requires the `ports` parameter\n        ports = ports || [];\n\n        data = MessageChannel.encodeEvent( message, ports, false );\n\n        if( ports ) {\n          // We need to know if a port has been sent to another user agent\n          // to decide when to queue and when to send messages\n          // See `MessageChannel.propagateEvent`\n          for( var i=0 ; i<ports.length ; i++) {\n            entangledPort = ports[i]._getEntangledPort();\n            if( !entangledPort._currentTarget ) {\n              entangledPort._currentTarget = otherWindow;\n              entangledPort.destinationUrl = targetOrigin;\n            }\n          }\n        }\n\n        MessageChannel.log(ports, \"handshake window\", otherWindow);\n        otherWindow.postMessage(data, targetOrigin);\n      };\n\n      // Juggling to find where to override `addEventListener`\n      // Firefox 30.0a1 (2014-02-17) adds `addEventListener` on the global object\n      // Internet Explorer doesn't allow to override `window.attachEvent`\n      var target;\n      if( window.addEventListener ) {\n        target = window;\n      } else if( window.attachEvent ) {\n        target = Window.prototype;\n      } else {\n        throw \"We couldn't find a method to attach an event handler.\";\n      }\n\n      _overrideMessageEventListener( target );\n    } else {\n      //Worker\n      _overrideMessageEventListener( self );\n    }\n\n    if( self.Worker ) {\n      var OriginalWorker = Worker,\n          originalAddEventListener;\n\n      if( OriginalWorker.prototype.addEventListener ) {\n        originalAddEventListener = OriginalWorker.prototype.addEventListener;\n      } else if( OriginalWorker.prototype.attachEvent ) {\n        originalAddEventListener = OriginalWorker.prototype.attachEvent;\n      }\n\n      self.Worker = function() {\n        var worker = new OriginalWorker(arguments[0]),\n            _addEventListener = originalAddEventListener;\n\n        _addEventListener.call(worker, 'message', propagationHandler);\n\n        return worker;\n      };\n      Worker.prototype = OriginalWorker.prototype;\n\n      _overrideMessageEventListener( Worker.prototype );\n\n    } else if (isInWorker()) {\n      self.Worker = { };\n    }\n\n    if (self.Worker) {\n      self.Worker.postMessage = function( worker, message, transferList )  {\n        var data = MessageChannel.encodeEvent( message, transferList, false ),\n            entangledPort;\n\n        for( var i=0 ; i<transferList.length ; i++) {\n          entangledPort = transferList[i]._getEntangledPort();\n          entangledPort._currentTarget = worker;\n        }\n\n        MessageChannel.log(transferList, \"handshake worker\", worker);\n        worker.postMessage( data );\n      };\n    }\n  } else {\n    if( Window ) {\n      Window.postMessage = function( source, message, targetOrigin, ports ) {\n        // Internet Explorer requires the `ports` parameter\n        ports = ports || [];\n        source.postMessage( message, targetOrigin, ports );\n      };\n    } else {\n      // Web worker\n      self.Worker = {\n        postMessage: function( worker, message, transferList ) {\n          worker.postMessage( message, transferList );\n        }\n      };\n    }\n\n    if( self.Worker ) {\n      self.Worker.postMessage = function( worker, message, transferList )  {\n        worker.postMessage( message, transferList);\n      };\n    }\n  }\n})(this);\n\ndefine(\"MessageChannel\", function(){});\n\n","///////////////////////////////////////////////////////////////////////////////\n// General utilities\n///////////////////////////////////////////////////////////////////////////////\n\ndefine('glympse-adapter/lib/utils',['require','exports','module'],function(require, exports, module)\n{\n\tvar defCfg = '__gacfg';\n\n\tfunction returnVal(data, propId)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn (data && data[propId]);\n\t\t};\n\t}\n\n\tfunction returnDataStreamVal(data, propId)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar p = (data && data[propId]);\n\t\t\treturn (p && (p.v || p));\n\t\t};\n\t}\n\n\tvar localStorage = window.localStorage;\n\n\t// Simple lib export\n\tvar utils =\n\t{\n\t\tdbg: function(id, minLevel)\n\t\t{\n\t\t\treturn function(info, data, level)\n\t\t\t{\n\t\t\t\t// Never allow logging if minLevel < 0\n\t\t\t\t// Allow all logging if minLevel is !truthy\n\t\t\t\t// Otherwise, must match min level on a log request\n\t\t\t\tif (!minLevel || (minLevel >= 0 && level >= minLevel))\n\t\t\t\t{\n\t\t\t\t\tconsole.log('[' + id + '] ' + info\n\t\t\t\t\t\t\t + (((data !== undefined) && (': ' + JSON.stringify(data, null, '  '))) || ''));\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t, domain: window.location.hostname\n\t\t, getCookie: function(id)\n\t\t{\n\t\t\tif (localStorage)\n\t\t\t{\n\t\t\t\tvar val = localStorage.getItem(id);\n\n\t\t\t\t// Some implementations have the localStorage interface available, but not\n\t\t\t\t// writable (i.e. iOS Safari), so need to fall through to cookie lookup just in case.\n\t\t\t\tif (val !== null)\n\t\t\t\t{\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar cookies = document.cookie.split(';');\n\n\t\t\tfor (var i = cookies.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tvar c = cookies[i];\n\t\t\t\tvar idx = c.indexOf('=');\n\t\t\t\tvar x = c.substr(0, idx);\n\n\t\t\t\tif (x.replace(/^\\s+|\\s+$/g, '') === id)\n\t\t\t\t{\n\t\t\t\t\treturn window.decodeURIComponent(c.substr(idx + 1));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t, setCookie: function(id, val, daysExpire)\n\t\t{\n\t\t\tif (localStorage)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t// Some implementations exception when localStorage is defined, but\n\t\t\t\t\t// not available (i.e. iOS Safari)\n\t\t\t\t\tlocalStorage.setItem(id, val);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\tconsole.log('localStorage error', e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar d = new Date();\n\t\t\td.setTime(d.getTime() + (daysExpire || 365) * 24 * 3600 * 1000);\n\t\t\tdocument.cookie = id + '=' + val + '; expires=' + d.toGMTString() + '; domain=' + utils.domain + '; path=/';\n\t\t}\n\n\t\t, getCfgVal: function(propertyName, idCfg)\n\t\t{\n\t\t\tvar config = utils.getCookie(idCfg || defCfg);\n\t\t\treturn (config) ? (JSON.parse(config))[propertyName] : null;\n\t\t}\n\n\t\t, setCfgVal: function(propertyName, newValue, idCfg, daysExpire)\n\t\t{\n\t\t\tvar id = idCfg || defCfg;\n\t\t\tvar config = utils.getCookie(id);\n\n\t\t\tconfig = (config) ? JSON.parse(config) : {};\n\t\t\tconfig[propertyName] = newValue;\n\n\t\t\tutils.setCookie(id, JSON.stringify(config), daysExpire);\n\t\t}\n\n\t\t, capFirst: function(str)\n\t\t{\n\t\t\treturn (str && (str.charAt(0).toUpperCase() + str.slice(1)));\n\t\t}\n\n\t\t, toUpperCamel: function(str)\n\t\t{\n\t\t\tvar words = ((str && str.split('_')) || '');\n\t\t\tvar out = '';\n\n\t\t\tfor (var i = 0, len = words.length; i < len; i++)\n\t\t\t{\n\t\t\t\tout += utils.capFirst(words[i]);\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}\n\n\t\t, mapProps: function(targ, props, data, dataStreamProp)\n\t\t{\n\t\t\tfor (var i = 0, len = props.length; i < len; i++)\n\t\t\t{\n\t\t\t\tvar prop = props[i];\n\t\t\t\ttarg['get' + utils.toUpperCamel(prop)] = (dataStreamProp) ? returnDataStreamVal(data, prop)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  : returnVal(data, prop);\n\t\t\t}\n\t\t}\n\n\t\t, simplifyInvite: function(invite)\n\t\t{\n\t\t\treturn (invite && invite.toLowerCase().split('-').join('')) || '';\n\t\t}\n\n\t\t, normalizeInvite: function(invite)\n\t\t{\n\t\t\tif (invite)\n\t\t\t{\n\t\t\t\tinvite = invite.toUpperCase();\n\t\t\t\tvar ilen = invite.length;\n\t\t\t\tvar ilen2 = ilen / 2;\n\n\t\t\t\tif (ilen === 6 || ilen === 8)\n\t\t\t\t{\n\t\t\t\t\tinvite = invite.substr(0, ilen2) + '-' + invite.substr(ilen2, ilen2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn invite;\n\t\t}\n\n\t\t, cleanInvites: function(invites)\n\t\t{\n\t\t\tinvites = invites || [];\n\t\t\tfor (var i = 0, len = invites.length; i < len; i++)\n\t\t\t{\n\t\t\t\tinvites[i] = utils.simplifyInvite(invites[i]);\n\t\t\t}\n\n\t\t\treturn invites;\n\t\t}\n\n\t};\n\n\n\tmodule.exports = utils;\n});\n\n","/*eslint-disable */\n/* jscs:disable */\n/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.0.17\n */\n\n(function() {\n    \"use strict\";\n    function lib$rsvp$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$rsvp$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$rsvp$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$rsvp$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$rsvp$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$rsvp$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$rsvp$utils$$isArray = lib$rsvp$utils$$_isArray;\n\n    var lib$rsvp$utils$$now = Date.now || function() { return new Date().getTime(); };\n\n    function lib$rsvp$utils$$F() { }\n\n    var lib$rsvp$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      lib$rsvp$utils$$F.prototype = o;\n      return new lib$rsvp$utils$$F();\n    });\n    function lib$rsvp$events$$indexOf(callbacks, callback) {\n      for (var i=0, l=callbacks.length; i<l; i++) {\n        if (callbacks[i] === callback) { return i; }\n      }\n\n      return -1;\n    }\n\n    function lib$rsvp$events$$callbacksFor(object) {\n      var callbacks = object._promiseCallbacks;\n\n      if (!callbacks) {\n        callbacks = object._promiseCallbacks = {};\n      }\n\n      return callbacks;\n    }\n\n    var lib$rsvp$events$$default = {\n\n      /**\n        `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n        Example:\n\n        ```javascript\n        var object = {};\n\n        RSVP.EventTarget.mixin(object);\n\n        object.on('finished', function(event) {\n          // handle event\n        });\n\n        object.trigger('finished', { detail: value });\n        ```\n\n        `EventTarget.mixin` also works with prototypes:\n\n        ```javascript\n        var Person = function() {};\n        RSVP.EventTarget.mixin(Person.prototype);\n\n        var yehuda = new Person();\n        var tom = new Person();\n\n        yehuda.on('poke', function(event) {\n          console.log('Yehuda says OW');\n        });\n\n        tom.on('poke', function(event) {\n          console.log('Tom says OW');\n        });\n\n        yehuda.trigger('poke');\n        tom.trigger('poke');\n        ```\n\n        @method mixin\n        @for RSVP.EventTarget\n        @private\n        @param {Object} object object to extend with EventTarget methods\n      */\n      'mixin': function(object) {\n        object['on']      = this['on'];\n        object['off']     = this['off'];\n        object['trigger'] = this['trigger'];\n        object._promiseCallbacks = undefined;\n        return object;\n      },\n\n      /**\n        Registers a callback to be executed when `eventName` is triggered\n\n        ```javascript\n        object.on('event', function(eventInfo){\n          // handle the event\n        });\n\n        object.trigger('event');\n        ```\n\n        @method on\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to listen for\n        @param {Function} callback function to be called when the event is triggered.\n      */\n      'on': function(eventName, callback) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks;\n\n        callbacks = allCallbacks[eventName];\n\n        if (!callbacks) {\n          callbacks = allCallbacks[eventName] = [];\n        }\n\n        if (lib$rsvp$events$$indexOf(callbacks, callback) === -1) {\n          callbacks.push(callback);\n        }\n      },\n\n      /**\n        You can use `off` to stop firing a particular callback for an event:\n\n        ```javascript\n        function doStuff() { // do stuff! }\n        object.on('stuff', doStuff);\n\n        object.trigger('stuff'); // doStuff will be called\n\n        // Unregister ONLY the doStuff callback\n        object.off('stuff', doStuff);\n        object.trigger('stuff'); // doStuff will NOT be called\n        ```\n\n        If you don't pass a `callback` argument to `off`, ALL callbacks for the\n        event will not be executed when the event fires. For example:\n\n        ```javascript\n        var callback1 = function(){};\n        var callback2 = function(){};\n\n        object.on('stuff', callback1);\n        object.on('stuff', callback2);\n\n        object.trigger('stuff'); // callback1 and callback2 will be executed.\n\n        object.off('stuff');\n        object.trigger('stuff'); // callback1 and callback2 will not be executed!\n        ```\n\n        @method off\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName event to stop listening to\n        @param {Function} callback optional argument. If given, only the function\n        given will be removed from the event's callback queue. If no `callback`\n        argument is given, all callbacks will be removed from the event's callback\n        queue.\n      */\n      'off': function(eventName, callback) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, index;\n\n        if (!callback) {\n          allCallbacks[eventName] = [];\n          return;\n        }\n\n        callbacks = allCallbacks[eventName];\n\n        index = lib$rsvp$events$$indexOf(callbacks, callback);\n\n        if (index !== -1) { callbacks.splice(index, 1); }\n      },\n\n      /**\n        Use `trigger` to fire custom events. For example:\n\n        ```javascript\n        object.on('foo', function(){\n          console.log('foo event happened!');\n        });\n        object.trigger('foo');\n        // 'foo event happened!' logged to the console\n        ```\n\n        You can also pass a value as a second argument to `trigger` that will be\n        passed as an argument to all event listeners for the event:\n\n        ```javascript\n        object.on('foo', function(value){\n          console.log(value.name);\n        });\n\n        object.trigger('foo', { name: 'bar' });\n        // 'bar' logged to the console\n        ```\n\n        @method trigger\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to be triggered\n        @param {Any} options optional value to be passed to any event handlers for\n        the given `eventName`\n      */\n      'trigger': function(eventName, options) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, callback;\n\n        if (callbacks = allCallbacks[eventName]) {\n          // Don't cache the callbacks.length since it may grow\n          for (var i=0; i<callbacks.length; i++) {\n            callback = callbacks[i];\n\n            callback(options);\n          }\n        }\n      }\n    };\n\n    var lib$rsvp$config$$config = {\n      instrument: false\n    };\n\n    lib$rsvp$events$$default['mixin'](lib$rsvp$config$$config);\n\n    function lib$rsvp$config$$configure(name, value) {\n      if (name === 'onerror') {\n        // handle for legacy users that expect the actual\n        // error to be passed to their function added via\n        // `RSVP.configure('onerror', someFunctionHere);`\n        lib$rsvp$config$$config['on']('error', value);\n        return;\n      }\n\n      if (arguments.length === 2) {\n        lib$rsvp$config$$config[name] = value;\n      } else {\n        return lib$rsvp$config$$config[name];\n      }\n    }\n\n    var lib$rsvp$instrument$$queue = [];\n\n    function lib$rsvp$instrument$$scheduleFlush() {\n      setTimeout(function() {\n        var entry;\n        for (var i = 0; i < lib$rsvp$instrument$$queue.length; i++) {\n          entry = lib$rsvp$instrument$$queue[i];\n\n          var payload = entry.payload;\n\n          payload.guid = payload.key + payload.id;\n          payload.childGuid = payload.key + payload.childId;\n          if (payload.error) {\n            payload.stack = payload.error.stack;\n          }\n\n          lib$rsvp$config$$config['trigger'](entry.name, entry.payload);\n        }\n        lib$rsvp$instrument$$queue.length = 0;\n      }, 50);\n    }\n\n    function lib$rsvp$instrument$$instrument(eventName, promise, child) {\n      if (1 === lib$rsvp$instrument$$queue.push({\n          name: eventName,\n          payload: {\n            key: promise._guidKey,\n            id:  promise._id,\n            eventName: eventName,\n            detail: promise._result,\n            childId: child && child._id,\n            label: promise._label,\n            timeStamp: lib$rsvp$utils$$now(),\n            error: lib$rsvp$config$$config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n          }})) {\n            lib$rsvp$instrument$$scheduleFlush();\n          }\n      }\n    var lib$rsvp$instrument$$default = lib$rsvp$instrument$$instrument;\n\n    function  lib$rsvp$$internal$$withOwnPromise() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$rsvp$$internal$$noop() {}\n\n    var lib$rsvp$$internal$$PENDING   = void 0;\n    var lib$rsvp$$internal$$FULFILLED = 1;\n    var lib$rsvp$$internal$$REJECTED  = 2;\n\n    var lib$rsvp$$internal$$GET_THEN_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$rsvp$$internal$$GET_THEN_ERROR.error = error;\n        return lib$rsvp$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$rsvp$$internal$$handleForeignThenable(promise, thenable, then) {\n      lib$rsvp$config$$config.async(function(promise) {\n        var sealed = false;\n        var error = lib$rsvp$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$rsvp$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$rsvp$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$rsvp$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$rsvp$$internal$$REJECTED) {\n        thenable._onError = null;\n        lib$rsvp$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$rsvp$$internal$$subscribe(thenable, undefined, function(value) {\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$rsvp$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$rsvp$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$rsvp$$internal$$getThen(maybeThenable);\n\n        if (then === lib$rsvp$$internal$$GET_THEN_ERROR) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$rsvp$utils$$isFunction(then)) {\n          lib$rsvp$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$rsvp$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (lib$rsvp$utils$$objectOrFunction(value)) {\n        lib$rsvp$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$publishRejection(promise) {\n      if (promise._onError) {\n        promise._onError(promise._result);\n      }\n\n      lib$rsvp$$internal$$publish(promise);\n    }\n\n    function lib$rsvp$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$rsvp$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n        if (lib$rsvp$config$$config.instrument) {\n          lib$rsvp$instrument$$default('fulfilled', promise);\n        }\n      } else {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, promise);\n      }\n    }\n\n    function lib$rsvp$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n      promise._state = lib$rsvp$$internal$$REJECTED;\n      promise._result = reason;\n      lib$rsvp$config$$config.async(lib$rsvp$$internal$$publishRejection, promise);\n    }\n\n    function lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onError = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$rsvp$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$rsvp$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, parent);\n      }\n    }\n\n    function lib$rsvp$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (lib$rsvp$config$$config.instrument) {\n        lib$rsvp$instrument$$default(settled === lib$rsvp$$internal$$FULFILLED ? 'fulfilled' : 'rejected', promise);\n      }\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$rsvp$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$rsvp$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$rsvp$$internal$$TRY_CATCH_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$rsvp$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$rsvp$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$rsvp$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$rsvp$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$rsvp$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$withOwnPromise());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$rsvp$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$rsvp$$internal$$reject(promise, error);\n      } else if (settled === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (settled === lib$rsvp$$internal$$REJECTED) {\n        lib$rsvp$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$initializePromise(promise, resolver) {\n      var resolved = false;\n      try {\n        resolver(function resolvePromise(value){\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$rsvp$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$rsvp$enumerator$$makeSettledResult(state, position, value) {\n      if (state === lib$rsvp$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function lib$rsvp$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          lib$rsvp$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$rsvp$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$rsvp$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    var lib$rsvp$enumerator$$default = lib$rsvp$enumerator$$Enumerator;\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$rsvp$utils$$isArray(input);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if (lib$rsvp$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$rsvp$$internal$$PENDING) {\n          entry._onError = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult(lib$rsvp$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$rsvp$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === lib$rsvp$$internal$$REJECTED) {\n          lib$rsvp$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$rsvp$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$rsvp$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$rsvp$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$rsvp$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$rsvp$promise$all$$all(entries, label) {\n      return new lib$rsvp$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    }\n    var lib$rsvp$promise$all$$default = lib$rsvp$promise$all$$all;\n    function lib$rsvp$promise$race$$race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n\n      if (!lib$rsvp$utils$$isArray(entries)) {\n        lib$rsvp$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$rsvp$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        lib$rsvp$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$rsvp$promise$race$$default = lib$rsvp$promise$race$$race;\n    function lib$rsvp$promise$resolve$$resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$rsvp$promise$resolve$$default = lib$rsvp$promise$resolve$$resolve;\n    function lib$rsvp$promise$reject$$reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$rsvp$promise$reject$$default = lib$rsvp$promise$reject$$reject;\n\n    var lib$rsvp$promise$$guidKey = 'rsvp_' + lib$rsvp$utils$$now() + '-';\n    var lib$rsvp$promise$$counter = 0;\n\n    function lib$rsvp$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$rsvp$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class RSVP.Promise\n      @param {function} resolver\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @constructor\n    */\n    function lib$rsvp$promise$$Promise(resolver, label) {\n      this._id = lib$rsvp$promise$$counter++;\n      this._label = label;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$rsvp$config$$config.instrument) {\n        lib$rsvp$instrument$$default('created', this);\n      }\n\n      if (lib$rsvp$$internal$$noop !== resolver) {\n        if (!lib$rsvp$utils$$isFunction(resolver)) {\n          lib$rsvp$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$rsvp$promise$$Promise)) {\n          lib$rsvp$promise$$needsNew();\n        }\n\n        lib$rsvp$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    var lib$rsvp$promise$$default = lib$rsvp$promise$$Promise;\n\n    // deprecated\n    lib$rsvp$promise$$Promise.cast = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.all = lib$rsvp$promise$all$$default;\n    lib$rsvp$promise$$Promise.race = lib$rsvp$promise$race$$default;\n    lib$rsvp$promise$$Promise.resolve = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.reject = lib$rsvp$promise$reject$$default;\n\n    lib$rsvp$promise$$Promise.prototype = {\n      constructor: lib$rsvp$promise$$Promise,\n\n      _guidKey: lib$rsvp$promise$$guidKey,\n\n      _onError: function (reason) {\n        lib$rsvp$config$$config.async(function(promise) {\n          setTimeout(function() {\n            if (promise._onError) {\n              lib$rsvp$config$$config['trigger']('error', reason);\n            }\n          }, 0);\n        }, this);\n      },\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection, label) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$rsvp$$internal$$FULFILLED && !onFulfillment || state === lib$rsvp$$internal$$REJECTED && !onRejection) {\n          if (lib$rsvp$config$$config.instrument) {\n            lib$rsvp$instrument$$default('chained', this, this);\n          }\n          return this;\n        }\n\n        parent._onError = null;\n\n        var child = new this.constructor(lib$rsvp$$internal$$noop, label);\n        var result = parent._result;\n\n        if (lib$rsvp$config$$config.instrument) {\n          lib$rsvp$instrument$$default('chained', parent, child);\n        }\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$rsvp$config$$config.async(function(){\n            lib$rsvp$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection, label) {\n        return this.then(null, onRejection, label);\n      },\n\n    /**\n      `finally` will be invoked regardless of the promise's fate just as native\n      try/catch/finally behaves\n\n      Synchronous example:\n\n      ```js\n      findAuthor() {\n        if (Math.random() > 0.5) {\n          throw new Error();\n        }\n        return new Author();\n      }\n\n      try {\n        return findAuthor(); // succeed or fail\n      } catch(error) {\n        return findOtherAuther();\n      } finally {\n        // always runs\n        // doesn't affect the return value\n      }\n      ```\n\n      Asynchronous example:\n\n      ```js\n      findAuthor().catch(function(reason){\n        return findOtherAuther();\n      }).finally(function(){\n        // author was either found, or not\n      });\n      ```\n\n      @method finally\n      @param {Function} callback\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'finally': function(callback, label) {\n        var constructor = this.constructor;\n\n        return this.then(function(value) {\n          return constructor.resolve(callback()).then(function(){\n            return value;\n          });\n        }, function(reason) {\n          return constructor.resolve(callback()).then(function(){\n            throw reason;\n          });\n        }, label);\n      }\n    };\n\n    function lib$rsvp$all$settled$$AllSettled(Constructor, entries, label) {\n      this._superConstructor(Constructor, entries, false /* don't abort on reject */, label);\n    }\n\n    lib$rsvp$all$settled$$AllSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$all$settled$$AllSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$all$settled$$AllSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n    lib$rsvp$all$settled$$AllSettled.prototype._validationError = function() {\n      return new Error('allSettled must be called with an array');\n    };\n\n    function lib$rsvp$all$settled$$allSettled(entries, label) {\n      return new lib$rsvp$all$settled$$AllSettled(lib$rsvp$promise$$default, entries, label).promise;\n    }\n    var lib$rsvp$all$settled$$default = lib$rsvp$all$settled$$allSettled;\n    function lib$rsvp$all$$all(array, label) {\n      return lib$rsvp$promise$$default.all(array, label);\n    }\n    var lib$rsvp$all$$default = lib$rsvp$all$$all;\n    var lib$rsvp$asap$$len = 0;\n    var lib$rsvp$asap$$toString = {}.toString;\n    var lib$rsvp$asap$$vertxNext;\n    function lib$rsvp$asap$$asap(callback, arg) {\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len] = callback;\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len + 1] = arg;\n      lib$rsvp$asap$$len += 2;\n      if (lib$rsvp$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        lib$rsvp$asap$$scheduleFlush();\n      }\n    }\n\n    var lib$rsvp$asap$$default = lib$rsvp$asap$$asap;\n\n    var lib$rsvp$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$rsvp$asap$$browserGlobal = lib$rsvp$asap$$browserWindow || {};\n    var lib$rsvp$asap$$BrowserMutationObserver = lib$rsvp$asap$$browserGlobal.MutationObserver || lib$rsvp$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$rsvp$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$rsvp$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$rsvp$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$rsvp$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$rsvp$asap$$useVertxTimer() {\n      return function() {\n        lib$rsvp$asap$$vertxNext(lib$rsvp$asap$$flush);\n      };\n    }\n\n    function lib$rsvp$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$rsvp$asap$$BrowserMutationObserver(lib$rsvp$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$rsvp$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$rsvp$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$rsvp$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$rsvp$asap$$flush, 1);\n      };\n    }\n\n    var lib$rsvp$asap$$queue = new Array(1000);\n    function lib$rsvp$asap$$flush() {\n      for (var i = 0; i < lib$rsvp$asap$$len; i+=2) {\n        var callback = lib$rsvp$asap$$queue[i];\n        var arg = lib$rsvp$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$rsvp$asap$$queue[i] = undefined;\n        lib$rsvp$asap$$queue[i+1] = undefined;\n      }\n\n      lib$rsvp$asap$$len = 0;\n    }\n\n    function lib$rsvp$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$rsvp$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$rsvp$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$rsvp$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$rsvp$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$rsvp$asap$$isNode) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useNextTick();\n    } else if (lib$rsvp$asap$$BrowserMutationObserver) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMutationObserver();\n    } else if (lib$rsvp$asap$$isWorker) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMessageChannel();\n    } else if (lib$rsvp$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$attemptVertex();\n    } else {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useSetTimeout();\n    }\n    function lib$rsvp$defer$$defer(label) {\n      var deferred = { };\n\n      deferred['promise'] = new lib$rsvp$promise$$default(function(resolve, reject) {\n        deferred['resolve'] = resolve;\n        deferred['reject'] = reject;\n      }, label);\n\n      return deferred;\n    }\n    var lib$rsvp$defer$$default = lib$rsvp$defer$$defer;\n    function lib$rsvp$filter$$filter(promises, filterFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(filterFn)) {\n          throw new TypeError(\"You must pass a function as filter's second argument.\");\n        }\n\n        var length = values.length;\n        var filtered = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          filtered[i] = filterFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(filtered, label).then(function(filtered) {\n          var results = new Array(length);\n          var newLength = 0;\n\n          for (var i = 0; i < length; i++) {\n            if (filtered[i]) {\n              results[newLength] = values[i];\n              newLength++;\n            }\n          }\n\n          results.length = newLength;\n\n          return results;\n        });\n      });\n    }\n    var lib$rsvp$filter$$default = lib$rsvp$filter$$filter;\n\n    function lib$rsvp$promise$hash$$PromiseHash(Constructor, object, label) {\n      this._superConstructor(Constructor, object, true, label);\n    }\n\n    var lib$rsvp$promise$hash$$default = lib$rsvp$promise$hash$$PromiseHash;\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$promise$hash$$PromiseHash.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$promise$hash$$PromiseHash.prototype._init = function() {\n      this._result = {};\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validateInput = function(input) {\n      return input && typeof input === 'object';\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validationError = function() {\n      return new Error('Promise.hash must be called with an object');\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._enumerate = function() {\n      var promise = this.promise;\n      var input   = this._input;\n      var results = [];\n\n      for (var key in input) {\n        if (promise._state === lib$rsvp$$internal$$PENDING && input.hasOwnProperty(key)) {\n          results.push({\n            position: key,\n            entry: input[key]\n          });\n        }\n      }\n\n      var length = results.length;\n      this._remaining = length;\n      var result;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        result = results[i];\n        this._eachEntry(result.entry, result.position);\n      }\n    };\n\n    function lib$rsvp$hash$settled$$HashSettled(Constructor, object, label) {\n      this._superConstructor(Constructor, object, false, label);\n    }\n\n    lib$rsvp$hash$settled$$HashSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$promise$hash$$default.prototype);\n    lib$rsvp$hash$settled$$HashSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$hash$settled$$HashSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n\n    lib$rsvp$hash$settled$$HashSettled.prototype._validationError = function() {\n      return new Error('hashSettled must be called with an object');\n    };\n\n    function lib$rsvp$hash$settled$$hashSettled(object, label) {\n      return new lib$rsvp$hash$settled$$HashSettled(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$settled$$default = lib$rsvp$hash$settled$$hashSettled;\n    function lib$rsvp$hash$$hash(object, label) {\n      return new lib$rsvp$promise$hash$$default(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$$default = lib$rsvp$hash$$hash;\n    function lib$rsvp$map$$map(promises, mapFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(mapFn)) {\n          throw new TypeError(\"You must pass a function as map's second argument.\");\n        }\n\n        var length = values.length;\n        var results = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          results[i] = mapFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(results, label);\n      });\n    }\n    var lib$rsvp$map$$default = lib$rsvp$map$$map;\n\n    function lib$rsvp$node$$Result() {\n      this.value = undefined;\n    }\n\n    var lib$rsvp$node$$ERROR = new lib$rsvp$node$$Result();\n    var lib$rsvp$node$$GET_THEN_ERROR = new lib$rsvp$node$$Result();\n\n    function lib$rsvp$node$$getThen(obj) {\n      try {\n       return obj.then;\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value= error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n\n    function lib$rsvp$node$$tryApply(f, s, a) {\n      try {\n        f.apply(s, a);\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value = error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n    function lib$rsvp$node$$makeObject(_, argumentNames) {\n      var obj = {};\n      var name;\n      var i;\n      var length = _.length;\n      var args = new Array(length);\n\n      for (var x = 0; x < length; x++) {\n        args[x] = _[x];\n      }\n\n      for (i = 0; i < argumentNames.length; i++) {\n        name = argumentNames[i];\n        obj[name] = args[i + 1];\n      }\n\n      return obj;\n    }\n\n    function lib$rsvp$node$$arrayResult(_) {\n      var length = _.length;\n      var args = new Array(length - 1);\n\n      for (var i = 1; i < length; i++) {\n        args[i - 1] = _[i];\n      }\n\n      return args;\n    }\n\n    function lib$rsvp$node$$wrapThenable(then, promise) {\n      return {\n        then: function(onFulFillment, onRejection) {\n          return then.call(promise, onFulFillment, onRejection);\n        }\n      };\n    }\n\n    function lib$rsvp$node$$denodeify(nodeFunc, options) {\n      var fn = function() {\n        var self = this;\n        var l = arguments.length;\n        var args = new Array(l + 1);\n        var arg;\n        var promiseInput = false;\n\n        for (var i = 0; i < l; ++i) {\n          arg = arguments[i];\n\n          if (!promiseInput) {\n            // TODO: clean this up\n            promiseInput = lib$rsvp$node$$needsPromiseInput(arg);\n            if (promiseInput === lib$rsvp$node$$GET_THEN_ERROR) {\n              var p = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n              lib$rsvp$$internal$$reject(p, lib$rsvp$node$$GET_THEN_ERROR.value);\n              return p;\n            } else if (promiseInput && promiseInput !== true) {\n              arg = lib$rsvp$node$$wrapThenable(promiseInput, arg);\n            }\n          }\n          args[i] = arg;\n        }\n\n        var promise = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n\n        args[l] = function(err, val) {\n          if (err)\n            lib$rsvp$$internal$$reject(promise, err);\n          else if (options === undefined)\n            lib$rsvp$$internal$$resolve(promise, val);\n          else if (options === true)\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$arrayResult(arguments));\n          else if (lib$rsvp$utils$$isArray(options))\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$makeObject(arguments, options));\n          else\n            lib$rsvp$$internal$$resolve(promise, val);\n        };\n\n        if (promiseInput) {\n          return lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self);\n        } else {\n          return lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self);\n        }\n      };\n\n      fn.__proto__ = nodeFunc;\n\n      return fn;\n    }\n\n    var lib$rsvp$node$$default = lib$rsvp$node$$denodeify;\n\n    function lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self) {\n      var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n      if (result === lib$rsvp$node$$ERROR) {\n        lib$rsvp$$internal$$reject(promise, result.value);\n      }\n      return promise;\n    }\n\n    function lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self){\n      return lib$rsvp$promise$$default.all(args).then(function(args){\n        var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n        if (result === lib$rsvp$node$$ERROR) {\n          lib$rsvp$$internal$$reject(promise, result.value);\n        }\n        return promise;\n      });\n    }\n\n    function lib$rsvp$node$$needsPromiseInput(arg) {\n      if (arg && typeof arg === 'object') {\n        if (arg.constructor === lib$rsvp$promise$$default) {\n          return true;\n        } else {\n          return lib$rsvp$node$$getThen(arg);\n        }\n      } else {\n        return false;\n      }\n    }\n    function lib$rsvp$race$$race(array, label) {\n      return lib$rsvp$promise$$default.race(array, label);\n    }\n    var lib$rsvp$race$$default = lib$rsvp$race$$race;\n    function lib$rsvp$reject$$reject(reason, label) {\n      return lib$rsvp$promise$$default.reject(reason, label);\n    }\n    var lib$rsvp$reject$$default = lib$rsvp$reject$$reject;\n    function lib$rsvp$resolve$$resolve(value, label) {\n      return lib$rsvp$promise$$default.resolve(value, label);\n    }\n    var lib$rsvp$resolve$$default = lib$rsvp$resolve$$resolve;\n    function lib$rsvp$rethrow$$rethrow(reason) {\n      setTimeout(function() {\n        throw reason;\n      });\n      throw reason;\n    }\n    var lib$rsvp$rethrow$$default = lib$rsvp$rethrow$$rethrow;\n\n    // default async is asap;\n    lib$rsvp$config$$config.async = lib$rsvp$asap$$default;\n    var lib$rsvp$$cast = lib$rsvp$resolve$$default;\n    function lib$rsvp$$async(callback, arg) {\n      lib$rsvp$config$$config.async(callback, arg);\n    }\n\n    function lib$rsvp$$on() {\n      lib$rsvp$config$$config['on'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    function lib$rsvp$$off() {\n      lib$rsvp$config$$config['off'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\n    if (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n      var lib$rsvp$$callbacks = window['__PROMISE_INSTRUMENTATION__'];\n      lib$rsvp$config$$configure('instrument', true);\n      for (var lib$rsvp$$eventName in lib$rsvp$$callbacks) {\n        if (lib$rsvp$$callbacks.hasOwnProperty(lib$rsvp$$eventName)) {\n          lib$rsvp$$on(lib$rsvp$$eventName, lib$rsvp$$callbacks[lib$rsvp$$eventName]);\n        }\n      }\n    }\n\n    var lib$rsvp$umd$$RSVP = {\n      'race': lib$rsvp$race$$default,\n      'Promise': lib$rsvp$promise$$default,\n      'allSettled': lib$rsvp$all$settled$$default,\n      'hash': lib$rsvp$hash$$default,\n      'hashSettled': lib$rsvp$hash$settled$$default,\n      'denodeify': lib$rsvp$node$$default,\n      'on': lib$rsvp$$on,\n      'off': lib$rsvp$$off,\n      'map': lib$rsvp$map$$default,\n      'filter': lib$rsvp$filter$$default,\n      'resolve': lib$rsvp$resolve$$default,\n      'reject': lib$rsvp$reject$$default,\n      'all': lib$rsvp$all$$default,\n      'rethrow': lib$rsvp$rethrow$$default,\n      'defer': lib$rsvp$defer$$default,\n      'EventTarget': lib$rsvp$events$$default,\n      'configure': lib$rsvp$config$$configure,\n      'async': lib$rsvp$$async\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define('rsvp',[],function() { return lib$rsvp$umd$$RSVP; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$rsvp$umd$$RSVP;\n    } else if (typeof this !== 'undefined') {\n      this['RSVP'] = lib$rsvp$umd$$RSVP;\n    }\n}).call(this);\n\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/shims\",\n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var K = function() {};\n\n    function o_create(obj, props) {\n      K.prototype = obj;\n      obj = new K();\n      if (props) {\n        K.prototype = obj;\n        for (var prop in props) {\n          K.prototype[prop] = props[prop].value;\n        }\n        obj = new K();\n      }\n      K.prototype = null;\n\n      return obj;\n    }\n\n    // If it turns out we need a better polyfill we can grab mozilla's at: \n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.removeEventListener?redirectlocale=en-US&redirectslug=DOM%2FEventTarget.removeEventListener#Polyfill_to_support_older_browsers\n    function addEventListener(receiver, eventName, fn) {\n      if (receiver.addEventListener) {\n        return receiver.addEventListener(eventName, fn);\n      } else if (receiver.attachEvent) {\n        return receiver.attachEvent('on' + eventName, fn);\n      }\n    }\n\n    function removeEventListener(receiver, eventName, fn) {\n      if (receiver.removeEventListener) {\n        return receiver.removeEventListener(eventName, fn);\n      } else if (receiver.detachEvent) {\n        return receiver.detachEvent('on' + eventName, fn);\n      }\n    }\n\n    function isNativeFunc(func) {\n      // This should probably work in all browsers likely to have ES5 array methods\n      return func && Function.prototype.toString.call(func).indexOf('[native code]') > -1;\n    }\n\n    var a_forEach = isNativeFunc(Array.prototype.forEach) ? Array.prototype.forEach : function(fun /*, thisp */) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n\n      var t = Object(this);\n      var len = t.length >>> 0;\n      if (typeof fun !== \"function\") {\n        throw new TypeError();\n      }\n\n      var thisp = arguments[1];\n      for (var i = 0; i < len; i++) {\n        if (i in t) {\n          fun.call(thisp, t[i], i, t);\n        }\n      }\n    };\n\n    var a_reduce = isNativeFunc(Array.prototype.reduce) ? Array.prototype.reduce : function(callback, opt_initialValue){\n      if (null === this || 'undefined' === typeof this) {\n        // At the moment all modern browsers, that support strict mode, have\n        // native implementation of Array.prototype.reduce. For instance, IE8\n        // does not support strict mode, so this check is actually useless.\n        throw new TypeError(\n            'Array.prototype.reduce called on null or undefined');\n      }\n      if ('function' !== typeof callback) {\n        throw new TypeError(callback + ' is not a function');\n      }\n      var index = 0, length = this.length >>> 0, value, isValueSet = false;\n      if (1 < arguments.length) {\n        value = opt_initialValue;\n        isValueSet = true;\n      }\n      for ( ; length > index; ++index) {\n        if (!this.hasOwnProperty(index)) continue;\n        if (isValueSet) {\n          value = callback(value, this[index], index, this);\n        } else {\n          value = this[index];\n          isValueSet = true;\n        }\n      }\n      if (!isValueSet) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n      return value;\n    };\n\n    var a_map = isNativeFunc(Array.prototype.map) ? Array.prototype.map : function(callback, thisArg) {\n\n        var T, A, k;\n\n        if (this == null) {\n          throw new TypeError(\" this is null or not defined\");\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n          throw new TypeError(callback + \" is not a function\");\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (thisArg) {\n          T = thisArg;\n        }\n\n        // 6. Let A be a new array created as if by the expression new Array(len) where Array is\n        // the standard built-in constructor with that name and len is the value of len.\n        A = new Array(len);\n\n        // 7. Let k be 0\n        k = 0;\n\n        // 8. Repeat, while k < len\n        while(k < len) {\n\n          var kValue, mappedValue;\n\n          // a. Let Pk be ToString(k).\n          //   This is implicit for LHS operands of the in operator\n          // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n          //   This step can be combined with c\n          // c. If kPresent is true, then\n          if (k in O) {\n\n            // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n            kValue = O[ k ];\n\n            // ii. Let mappedValue be the result of calling the Call internal method of callback\n            // with T as the this value and argument list containing kValue, k, and O.\n            mappedValue = callback.call(T, kValue, k, O);\n\n            // iii. Call the DefineOwnProperty internal method of A with arguments\n            // Pk, Property Descriptor {Value: mappedValue, : true, Enumerable: true, Configurable: true},\n            // and false.\n\n            // In browsers that support Object.defineProperty, use the following:\n            // Object.defineProperty(A, Pk, { value: mappedValue, writable: true, enumerable: true, configurable: true });\n\n            // For best browser support, use the following:\n            A[ k ] = mappedValue;\n          }\n          // d. Increase k by 1.\n          k++;\n        }\n\n        // 9. return A\n        return A;\n      };  \n\n    var a_indexOf = isNativeFunc(Array.prototype.indexOf) ? Array.prototype.indexOf : function (searchElement /*, fromIndex */ ) {\n      /* jshint eqeqeq:false */\n      \"use strict\";\n      if (this == null) {\n        throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 1) {\n        n = Number(arguments[1]);\n        if (n != n) { // shortcut for verifying if it's NaN\n          n = 0;\n        } else if (n != 0 && n != Infinity && n != -Infinity) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n\n    var a_filter = isNativeFunc(Array.prototype.filter) ? Array.prototype.filter : function(fun /*, thisp*/) {\n      'use strict';\n\n      if (!this) {\n        throw new TypeError();\n      }\n\n      var objects = Object(this);\n      var len = objects.length >>> 0;\n      if (typeof fun !== 'function') {\n        throw new TypeError();\n      }\n\n      var res = [];\n      var thisp = arguments[1];\n      for (var i in objects) {\n        if (objects.hasOwnProperty(i)) {\n          if (fun.call(thisp, objects[i], i, objects)) {\n            res.push(objects[i]);\n          }\n        }\n      }\n\n      return res;\n    };\n\n    __exports__.o_create = o_create;\n    __exports__.addEventListener = addEventListener;\n    __exports__.removeEventListener = removeEventListener;\n    __exports__.a_forEach = a_forEach;\n    __exports__.a_reduce = a_reduce;\n    __exports__.a_map = a_map;\n    __exports__.a_indexOf = a_indexOf;\n    __exports__.a_filter = a_filter;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/util\",\n  [\"oasis/shims\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var o_create = __dependency1__.o_create;\n    var a_filter = __dependency1__.a_filter;\n\n    function assert(assertion, string) {\n      if (!assertion) {\n        throw new Error(string);\n      }\n    }\n\n    function noop() { }\n\n    function mustImplement(className, name) {\n      return function() {\n        throw new Error(\"Subclasses of \" + className + \" must implement \" + name);\n      };\n    }\n\n    function extend(parent, object) {\n      function OasisObject() {\n        parent.apply(this, arguments);\n        if (this.initialize) {\n          this.initialize.apply(this, arguments);\n        }\n      }\n\n      OasisObject.prototype = o_create(parent.prototype);\n\n      for (var prop in object) {\n        if (!object.hasOwnProperty(prop)) { continue; }\n        OasisObject.prototype[prop] = object[prop];\n      }\n\n      return OasisObject;\n    }\n\n    function delegate(delegateeProperty, delegatedMethod) {\n      return function () {\n        var delegatee = this[delegateeProperty];\n        return delegatee[delegatedMethod].apply(delegatee, arguments);\n      };\n    }\n\n    function uniq() {\n      var seen = {};\n      return a_filter.call(this, function (item) {\n        var _seen = !seen.hasOwnProperty(item);\n        seen[item] = true;\n        return _seen;\n      });\n    }\n\n    function reverseMerge(a, b) {\n      for (var prop in b) {\n        if (!b.hasOwnProperty(prop)) { continue; }\n\n        if (! (prop in a)) {\n          a[prop] = b[prop];\n        }\n      }\n\n      return a;\n    }\n\n    __exports__.assert = assert;\n    __exports__.noop = noop;\n    __exports__.mustImplement = mustImplement;\n    __exports__.extend = extend;\n    __exports__.delegate = delegate;\n    __exports__.uniq = uniq;\n    __exports__.reverseMerge = reverseMerge;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/xhr\",\n  [\"oasis/util\",\"rsvp\",\"exports\"],\n  function(__dependency1__, RSVP, __exports__) {\n    \"use strict\";\n    var noop = __dependency1__.noop;\n    /*global XDomainRequest */\n\n\n    var a_slice = Array.prototype.slice;\n\n    function acceptsHeader(options) {\n      var dataType = options.dataType;\n\n      if (dataType && accepts[dataType]) {\n        return accepts[dataType];\n      }\n\n      return accepts['*'];\n    }\n\n    function xhrSetRequestHeader(xhr, options) {\n      xhr.setRequestHeader(\"Accepts\", acceptsHeader(options));\n    }\n\n    function xhrGetLoadStatus(xhr) {\n      return xhr.status;\n    }\n\n    function xdrGetLoadStatus() {\n      return 200;\n    }\n\n    var NONE = {};\n\n    function trigger(event, oasis) {\n      if (!oasis) { return; }\n\n      var args = a_slice.call(arguments, 2);\n\n      args.unshift(event);\n      oasis.trigger.apply(oasis, args);\n    }\n\n    var accepts = {\n      \"*\": \"*/*\",\n      text: \"text/plain\",\n      html: \"text/html\",\n      xml: \"application/xml, text/xml\",\n      json: \"application/json, text/javascript\"\n    };\n\n    var XHR, setRequestHeader, getLoadStatus, send;\n\n    try {\n      if ('withCredentials' in new XMLHttpRequest()) {\n        XHR = XMLHttpRequest;\n        setRequestHeader = xhrSetRequestHeader;\n        getLoadStatus = xhrGetLoadStatus;\n      } else if (typeof XDomainRequest !== 'undefined') {\n        XHR = XDomainRequest;\n        setRequestHeader = noop;\n        getLoadStatus = xdrGetLoadStatus;\n      }\n    } catch( exception ) {\n      if (typeof XDomainRequest !== 'undefined') {\n        XHR = XDomainRequest;\n        setRequestHeader = noop;\n        getLoadStatus = xdrGetLoadStatus;\n      }\n    }\n    // else inline adapter with cross-domain cards is not going to work\n\n\n    function xhr(url, options, oasis) {\n      if (!oasis && this instanceof Oasis) { oasis = this; }\n      if (!options) { options = NONE; }\n\n      return new RSVP.Promise(function(resolve, reject){\n        var xhr = new XHR();\n        xhr.open(\"get\", url, true);\n        setRequestHeader(xhr, options);\n\n        if (options.timeout) {\n          xhr.timeout = options.timeout;\n        }\n\n        xhr.onload = function () {\n          trigger('xhr.load', oasis, url, options, xhr);\n\n          var status = getLoadStatus(xhr);\n          if (status >= 200 && status < 300) {\n            resolve(xhr.responseText);\n          } else {\n            reject(xhr);\n          }\n        };\n\n        xhr.onprogress = noop;\n        xhr.ontimeout = function () {\n          trigger('xhr.timeout', oasis, url, options, xhr);\n          reject(xhr);\n        };\n\n        xhr.onerror = function () {\n          trigger('xhr.error', oasis, url, options, xhr);\n          reject(xhr);\n        };\n\n        trigger('xhr.send', oasis, url, options, xhr);\n        xhr.send();\n      });\n    }\n\n    __exports__.xhr = xhr;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/message_channel\",\n  [\"oasis/util\",\"rsvp\",\"exports\"],\n  function(__dependency1__, RSVP, __exports__) {\n    \"use strict\";\n    var extend = __dependency1__.extend;\n    var mustImplement = __dependency1__.mustImplement;\n\n    /**\n      OasisPort is an interface that adapters can use to implement ports.\n      Ports are passed into the `initialize` method of services and consumers,\n      and are available as `this.port` on services and consumers.\n\n      Ports are the low-level API that can be used to communicate with the\n      other side of a connection. In general, you will probably want to use\n      the `events` and `requests` objects inside your service or consumer\n      rather than manually listen for events and requests.\n\n      @constructor\n      @param {OasisPort} oasis\n      @param {OasisPort} port\n    */\n    function OasisPort(oasis, port) {}\n\n\n    function getRequestId(oasis) {\n      return oasis.oasisId + '-' + oasis.requestId++;\n    }\n\n    OasisPort.prototype = {\n      /**\n        This allows you to register an event handler for a particular event\n        name.\n\n        @param {String} eventName the name of the event\n        @param {Function} callback the callback to call when the event occurs\n        @param {any?} binding an optional value of `this` inside of the callback\n      */\n      on: mustImplement('OasisPort', 'on'),\n\n      /**\n        Allows you to register an event handler that is called for all events\n        that are sent to the port.\n      */\n      all: mustImplement('OasisPort', 'all'),\n\n      /**\n        This allows you to unregister an event handler for an event name\n        and callback. You should not pass in the optional binding.\n\n        @param {String} eventName the name of the event\n        @param {Function} callback a reference to the callback that was\n          passed into `.on`.\n      */\n      off: mustImplement('OasisPort', 'off'),\n\n      /**\n        This method sends an event to the other side of the connection.\n\n        @param {String} eventName the name of the event\n        @param {Structured?} data optional data to pass along with the event\n      */\n      send: mustImplement('OasisPort', 'send'),\n\n      /**\n        @private\n\n        Adapters should implement this to start receiving messages from the\n        other side of the connection.\n\n        It is up to the adapter to make sure that no messages are dropped if\n        they are sent before `start` is called.\n      */\n      start: mustImplement('OasisPort', 'start'),\n\n      /**\n        @private\n\n        Adapters should implement this to stop receiving messages from the\n        other side of the connection.\n      */\n      close: mustImplement('OasisPort', 'close'),\n\n      /**\n        This method sends a request to the other side of the connection.\n\n        @param {String} requestName the name of the request\n        @return {Promise} a promise that will be resolved with the value\n          provided by the other side of the connection, or rejected if the other\n          side indicates retrieving the value resulted in an error. The fulfillment\n          value must be structured data.\n      */\n      request: function(eventName) {\n        var oasis = this.oasis;\n        var port = this;\n        var args = [].slice.call(arguments, 1);\n\n        return new RSVP.Promise(function (resolve, reject) {\n          var requestId = getRequestId(oasis);\n\n          var clearObservers = function () {\n            port.off('@response:' + eventName, observer);\n            port.off('@errorResponse:' + eventName, errorObserver);\n          };\n\n          var observer = function(event) {\n            if (event.requestId === requestId) {\n              clearObservers();\n              resolve(event.data);\n            }\n          };\n\n          var errorObserver = function (event) {\n            if (event.requestId === requestId) {\n              clearObservers();\n              reject(event.data);\n            }\n          };\n\n          port.on('@response:' + eventName, observer, port);\n          port.on('@errorResponse:' + eventName, errorObserver, port);\n          port.send('@request:' + eventName, { requestId: requestId, args: args });\n        });\n      },\n\n      /**\n        This method registers a callback to be called when a request is made\n        by the other side of the connection.\n\n        The callback will be called with any arguments passed in the request.  It\n        may either return a value directly, or return a promise if the value must be\n        retrieved asynchronously.\n\n        Examples:\n\n          // This completes the request immediately.\n          service.onRequest('name', function () {\n            return 'David';\n          });\n\n\n          // This completely the request asynchronously.\n          service.onRequest('name', function () {\n            return new Oasis.RSVP.Promise(function (resolve, reject) {\n              setTimeout( function() {\n                resolve('David');\n              }, 200);\n            });\n          });\n\n        @param {String} requestName the name of the request\n        @param {Function} callback the callback to be called when a request\n          is made.\n        @param {any?} binding the value of `this` in the callback\n      */\n      onRequest: function(eventName, callback, binding) {\n        var self = this;\n\n        this.on('@request:' + eventName, function(data) {\n          var requestId = data.requestId,\n              args = data.args,\n              getResponse = new RSVP.Promise(function (resolve, reject) {\n                var value = callback.apply(binding, data.args);\n                if (undefined !== value) {\n                  resolve(value);\n                } else {\n                  reject(\"@request:\" + eventName + \" [\" + data.requestId + \"] did not return a value.  If you want to return a literal `undefined` return `RSVP.resolve(undefined)`\");\n                }\n              });\n\n          getResponse.then(function (value) {\n            self.send('@response:' + eventName, {\n              requestId: requestId,\n              data: value\n            });\n          }, function (error) {\n            var value = error;\n            if (error instanceof Error) {\n              value = {\n                message: error.message,\n                stack: error.stack\n              };\n            }\n            self.send('@errorResponse:' + eventName, {\n              requestId: requestId,\n              data: value\n            });\n          });\n        });\n      }\n    };\n\n\n    function OasisMessageChannel(oasis) {}\n\n    OasisMessageChannel.prototype = {\n      start: mustImplement('OasisMessageChannel', 'start')\n    };\n\n\n    var PostMessageMessageChannel = extend(OasisMessageChannel, {\n      initialize: function(oasis) {\n        this.channel = new MessageChannel();\n        this.port1 = new PostMessagePort(oasis, this.channel.port1);\n        this.port2 = new PostMessagePort(oasis, this.channel.port2);\n      },\n\n      start: function() {\n        this.port1.start();\n        this.port2.start();\n      },\n\n      destroy: function() {\n        this.port1.close();\n        this.port2.close();\n        delete this.port1;\n        delete this.port2;\n        delete this.channel;\n      }\n    });\n\n    var PostMessagePort = extend(OasisPort, {\n      initialize: function(oasis, port) {\n        this.oasis = oasis;\n        this.port = port;\n        this._callbacks = [];\n      },\n\n      on: function(eventName, callback, binding) {\n        var oasis = this.oasis;\n\n        function wrappedCallback(event) {\n          if (event.data.type === eventName) {\n            oasis.configuration.eventCallback(function () {\n              return callback.call(binding, event.data.data);\n            });\n          }\n        }\n\n        this._callbacks.push([callback, wrappedCallback]);\n        this.port.addEventListener('message', wrappedCallback);\n      },\n\n      all: function(callback, binding) {\n        var oasis = this.oasis;\n\n        function wrappedCallback(event) {\n          oasis.configuration.eventCallback(function () {\n            callback.call(binding, event.data.type, event.data.data);\n          });\n        }\n\n        this.port.addEventListener('message', wrappedCallback);\n      },\n\n      off: function(eventName, callback) {\n        var foundCallback;\n\n        for (var i=0, l=this._callbacks.length; i<l; i++) {\n          foundCallback = this._callbacks[i];\n          if (foundCallback[0] === callback) {\n            this.port.removeEventListener('message', foundCallback[1]);\n          }\n        }\n      },\n\n      send: function(eventName, data) {\n        this.port.postMessage({\n          type: eventName,\n          data: data\n        });\n      },\n\n      start: function() {\n        this.port.start();\n      },\n\n      close: function() {\n        var foundCallback;\n\n        for (var i=0, l=this._callbacks.length; i<l; i++) {\n          foundCallback = this._callbacks[i];\n          this.port.removeEventListener('message', foundCallback[1]);\n        }\n        this._callbacks = [];\n\n        this.port.close();\n      }\n    });\n\n    __exports__.OasisPort = OasisPort;\n    __exports__.PostMessageMessageChannel = PostMessageMessageChannel;\n    __exports__.PostMessagePort = PostMessagePort;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/logger\",\n  [],\n  function() {\n    \"use strict\";\n    function Logger() {\n      this.enabled = false;\n    }\n\n    Logger.prototype = {\n      enable: function () {\n        this.enabled = true;\n      },\n\n      disable: function () {\n        this.enabled = false;\n      },\n\n      log: function () {\n        if (logger.enabled) {\n          if (typeof console !== 'undefined' && typeof console.log === 'function') {\n            console.log.apply(console, arguments);\n          } else if (typeof console !== 'undefined' && typeof console.log === 'object') {\n            // Log in IE\n            try {\n              switch (arguments.length) {\n                case 1:\n                  console.log(arguments[0]);\n                  break;\n                case 2:\n                  console.log(arguments[0], arguments[1]);\n                  break;\n                default:\n                  console.log(arguments[0], arguments[1], arguments[2]);\n              }\n            } catch(e) {}\n          }\n        }\n      }\n    };\n\n    var logger = new Logger();\n\n\n    return logger;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/connect\",\n  [\"oasis/util\",\"oasis/shims\",\"oasis/message_channel\",\"rsvp\",\"oasis/logger\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, RSVP, Logger, __exports__) {\n    \"use strict\";\n    var assert = __dependency1__.assert;\n    var a_forEach = __dependency2__.a_forEach;\n    var PostMessagePort = __dependency3__.PostMessagePort;\n\n\n    function registerHandler(oasis, capability, options) {\n      var port = oasis.ports[capability];\n\n      if (port) {\n        Logger.log(oasis.oasisId, \"sandbox: found port, setting up '\" + capability + \"'\");\n        options.setupCapability(port);\n\n        if (options.promise) {\n          options.promise.then(function() {\n            port.start();\n          })['catch'](RSVP.rethrow);\n        } else {\n          port.start();\n        }\n      } else if (!oasis.receivedPorts) {\n        Logger.log(\"No port found, saving handler for '\" + capability + \"'\");\n        oasis.handlers[capability] = options;\n      } else {\n        Logger.log(\"No port was sent for capability '\" + capability + \"'\");\n        options.rejectCapability();\n      }\n    }\n\n    /**\n      This is the main entry point that allows sandboxes to connect back\n      to their containing environment.\n\n      It can be called either with a set of named consumers, with callbacks, or using promises.\n\n      Example\n\n        // Using promises\n        Oasis.connect('foo').then( function (port) {\n          port.send('hello');\n        }, function () {\n          // error\n        });\n\n\n        // using callbacks\n        Oasis.connect('foo', function (port) {\n          port.send('hello');\n        }, errorHandler);\n\n\n        // connecting several consumers at once.\n        var ConsumerA = Oasis.Consumer.extend({\n          initialize: function (port) { this.port = port; },\n\n          error: function () { }\n        });\n\n        var ConsumerB = Oasis.Consumer.extend({\n          initialize: function (port) { this.port = port; },\n\n          error: function () { }\n        });\n\n        Oasis.connect({\n          consumers: {\n            capabilityA: ConsumerA,\n            capabilityB: ConsumerB\n          }\n        });\n\n      @param {String} capability the name of the service to connect to, or an object\n        containing named consumers to connect.\n      @param {Function?} callback the callback to trigger once the other\n        side of the connection is available.\n      @param {Function?} errorCallback the callback to trigger if the capability is\n        not provided by the environment.\n      @return {Promise} a promise that will be resolved once the other\n        side of the connection is available. You can use this instead\n        of the callbacks.\n    */\n    function connect(capability, callback, errorCallback) {\n      if (typeof capability === 'object') {\n        return connectConsumers(this, capability.consumers);\n      } else if (callback) {\n        return connectCallbacks(this, capability, callback, errorCallback);\n      } else {\n        return connectPromise(this, capability);\n      }\n    }\n\n    function connectCapabilities(capabilities, eventPorts) {\n      var oasis = this;\n      a_forEach.call(capabilities, function(capability, i) {\n        var handler = oasis.handlers[capability],\n            port = new PostMessagePort(oasis, eventPorts[i]);\n\n        if (handler) {\n          Logger.log(\"Invoking handler for '\" + capability + \"'\");\n\n          RSVP.resolve(handler.setupCapability(port)).then(function () {\n            port.start();\n          })['catch'](RSVP.rethrow);\n        }\n\n        oasis.ports[capability] = port;\n      });\n\n      // for each handler w/o capability, reject\n      for( var prop in oasis.handlers ) {\n        if( ! oasis.ports[prop] ) {\n          oasis.handlers[prop].rejectCapability();\n        }\n      }\n\n      this.receivedPorts = true;\n    }\n\n    function portFor(capability) {\n      var port = this.ports[capability];\n      assert(port, \"You asked for the port for the '\" + capability + \"' capability, but the environment did not provide one.\");\n      return port;\n    }\n\n\n    function connectConsumers(oasis, consumers) {\n      function setupCapability(Consumer, name) {\n        return function(port) {\n          var consumer = new Consumer(port);\n          oasis.consumers[name] = consumer;\n          consumer.initialize(port, name);\n        };\n      }\n\n      function rejectCapability(prop) {\n        return function () {\n          consumers[prop].prototype.error();\n        };\n      }\n\n      for (var prop in consumers) {\n        registerHandler(oasis, prop, {\n          setupCapability: setupCapability(consumers[prop], prop),\n          rejectCapability: rejectCapability(prop)\n        });\n      }\n    }\n\n    function connectCallbacks(oasis, capability, callback, errorCallback) {\n      Logger.log(\"Connecting to '\" + capability + \"' with callback.\");\n\n      registerHandler(oasis, capability, {\n        setupCapability: function(port) {\n          callback(port);\n        },\n        rejectCapability: function () {\n          if (errorCallback) {\n            errorCallback();\n          }\n        }\n      });\n    }\n\n    function connectPromise(oasis, capability) {\n      Logger.log(\"Connecting to '\" + capability + \"' with promise.\");\n\n      var defered = RSVP.defer();\n      registerHandler(oasis, capability, {\n        promise: defered.promise,\n        setupCapability: function(port) {\n          defered.resolve(port);\n          return defered.promise;\n        },\n        rejectCapability: function () {\n          defered.reject();\n        }\n      });\n      return defered.promise;\n    }\n\n    __exports__.registerHandler = registerHandler;\n    __exports__.connect = connect;\n    __exports__.connectCapabilities = connectCapabilities;\n    __exports__.portFor = portFor;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/* jscs:disable */\ndefine(\"oasis/version\",\n  [],\n  function() {\n    \"use strict\";\n\n    return '0.4.0';\n  });\n/* jscs:enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/config\",\n  [],\n  function() {\n    \"use strict\";\n    /**\n      Stores Oasis configuration.  Options include:\n\n      - `eventCallback` - a function that wraps `message` event handlers.  By\n        default the event hanlder is simply invoked.\n      - `allowSameOrigin` - a card can be hosted on the same domain\n      - `reconnect` - the default reconnect options for iframe sandboxes.  Possible values are:\n        - \"none\" - do not allow sandbox reconnection\n        - \"verify\" - only allow reconnections from the original origin of the sandbox\n        - \"any\" - allow any sandbox reconnections.  Only use this setting if you are\n          using Oasis strictly for isolation of trusted applications or if it's safe\n          to connect your sandbox to arbitrary origins.  This is an advanced setting\n          and should be used with care.\n    */\n    function OasisConfiguration() {\n      this.eventCallback = function (callback) { callback(); };\n      this.allowSameOrigin = false;\n      this.reconnect = 'verify';\n    }\n\n\n    return OasisConfiguration;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/sandbox\",\n  [\"oasis/util\",\"oasis/shims\",\"oasis/message_channel\",\"rsvp\",\"oasis/logger\"],\n  function(__dependency1__, __dependency2__, __dependency3__, RSVP, Logger) {\n    \"use strict\";\n    var assert = __dependency1__.assert;\n    var uniq = __dependency1__.uniq;\n    var reverseMerge = __dependency1__.reverseMerge;\n    var a_forEach = __dependency2__.a_forEach;\n    var a_reduce = __dependency2__.a_reduce;\n    var a_filter = __dependency2__.a_filter;\n    var OasisPort = __dependency3__.OasisPort;\n\n\n    var OasisSandbox = function(oasis, options) {\n      options = reverseMerge(options || {}, {\n        reconnect: oasis.configuration.reconnect\n      });\n\n      var reconnect = options.reconnect;\n      assert( reconnect === \"none\" || reconnect === \"verify\" || reconnect === \"any\",\n              \"`reconnect` must be one of 'none', 'verify' or 'any'.  '\" + reconnect + \"' is invalid.\");\n\n      this.connections = {};\n      this.wiretaps = [];\n\n      this.oasis = oasis;\n\n      // Generic capabilities code\n      var pkg = oasis.packages[options.url];\n\n      var capabilities = options.capabilities;\n      if (!capabilities) {\n        assert(pkg, \"You are trying to create a sandbox from an unregistered URL without providing capabilities. Please use Oasis.register to register your package or pass a list of capabilities to createSandbox.\");\n        capabilities = pkg.capabilities;\n      }\n\n      pkg = pkg || {};\n\n      this.adapter = options.adapter || Oasis.adapters.iframe;\n\n      this._capabilitiesToConnect = this._filterCapabilities(capabilities);\n      this.envPortDefereds = {};\n      this.sandboxPortDefereds = {};\n      this.channels = {};\n      this.capabilities = {};\n      this.options = options;\n      this.firstLoad = true;\n\n      var sandbox = this;\n      this.promisePorts();\n      this.adapter.initializeSandbox(this);\n    };\n\n    OasisSandbox.prototype = {\n      waitForLoad: function () {\n        return this._waitForLoadDeferred().promise;\n      },\n\n      wiretap: function(callback) {\n        this.wiretaps.push(callback);\n      },\n\n      connect: function(capability) {\n        var portPromise = this.envPortDefereds[capability].promise;\n\n        assert(portPromise, \"Connect was called on '\" + capability + \"' but no such capability was registered.\");\n\n        return portPromise;\n      },\n\n      createAndTransferCapabilities: function () {\n        if (!this.firstLoad) { this.promisePorts(); }\n\n        this.createChannels();\n        this.connectPorts();\n\n        // subsequent calls to `createAndTransferCapabilities` requires new port promises\n        this.firstLoad = false;\n      },\n\n      promisePorts: function () {\n        a_forEach.call(this._capabilitiesToConnect, function(capability) {\n          this.envPortDefereds[capability] = RSVP.defer();\n          this.sandboxPortDefereds[capability] = RSVP.defer();\n        }, this);\n      },\n\n      createChannels: function () {\n        var sandbox = this,\n            services = this.options.services || {},\n            channels = this.channels;\n        a_forEach.call(this._capabilitiesToConnect, function (capability) {\n\n          Logger.log(\"container: Will create port for '\" + capability + \"'\");\n          var service = services[capability],\n              channel, port;\n\n          // If an existing port is provided, just\n          // pass it along to the new sandbox.\n\n          // TODO: This should probably be an OasisPort if possible\n          if (service instanceof OasisPort) {\n            port = this.adapter.proxyPort(this, service);\n            this.capabilities[capability] = service;\n          } else {\n            channel = channels[capability] = this.adapter.createChannel(sandbox.oasis);\n\n            var environmentPort = this.adapter.environmentPort(this, channel),\n                sandboxPort = this.adapter.sandboxPort(this, channel);\n\n            Logger.log(\"container: Wiretapping '\" + capability + \"'\");\n\n            environmentPort.all(function(eventName, data) {\n              a_forEach.call(this.wiretaps, function(wiretap) {\n                wiretap(capability, {\n                  type: eventName,\n                  data: data,\n                  direction: 'received'\n                });\n              });\n            }, this);\n\n            a_forEach.call(this.wiretaps, function(wiretap) {\n              var originalSend = environmentPort.send;\n\n              environmentPort.send = function(eventName, data) {\n                wiretap(capability, {\n                  type: eventName,\n                  data: data,\n                  direction: 'sent'\n                });\n\n                originalSend.apply(environmentPort, arguments);\n              };\n            });\n\n            if (service) {\n              Logger.log(\"container: Creating service for '\" + capability + \"'\");\n              /*jshint newcap:false*/\n              // Generic\n              service = new service(environmentPort, this);\n              service.initialize(environmentPort, capability);\n              sandbox.oasis.services.push(service);\n              this.capabilities[capability] = service;\n            }\n\n            // Law of Demeter violation\n            port = sandboxPort;\n\n            this.envPortDefereds[capability].resolve(environmentPort);\n          }\n\n          Logger.log(\"container: Port created for '\" + capability + \"'\");\n          this.sandboxPortDefereds[capability].resolve(port);\n        }, this);\n      },\n\n      destroyChannels: function() {\n        for( var prop in this.channels ) {\n          this.channels[prop].destroy();\n          delete this.channels[prop];\n        }\n        this.channels = [];\n      },\n\n      connectPorts: function () {\n        var sandbox = this;\n\n        var allSandboxPortPromises = a_reduce.call(this._capabilitiesToConnect, function (accumulator, capability) {\n          return accumulator.concat(sandbox.sandboxPortDefereds[capability].promise);\n        }, []);\n\n        RSVP.all(allSandboxPortPromises).then(function (ports) {\n          Logger.log(\"container: All \" + ports.length + \" ports created.  Transferring them.\");\n          sandbox.adapter.connectPorts(sandbox, ports);\n        })['catch'](RSVP.rethrow);\n      },\n\n      start: function(options) {\n        this.adapter.startSandbox(this, options);\n      },\n\n      terminate: function() {\n        var sandbox = this,\n            channel,\n            environmentPort;\n\n        if( this.isTerminated ) { return; }\n        this.isTerminated = true;\n\n        this.adapter.terminateSandbox(this);\n\n        this.destroyChannels();\n\n        for( var index=0 ; index<sandbox.oasis.services.length ; index++) {\n          sandbox.oasis.services[index].destroy();\n          delete sandbox.oasis.services[index];\n        }\n        sandbox.oasis.services = [];\n      },\n\n      onerror: function(error) {\n        throw error;\n      },\n\n      name: function() {\n        return this.adapter.name(this);\n      },\n\n      // Oasis internal\n\n      _filterCapabilities: function(capabilities) {\n        return uniq.call(this.adapter.filterCapabilities(capabilities));\n      },\n\n      _waitForLoadDeferred: function () {\n        if (!this._loadDeferred) {\n          // the adapter will resolve this\n          this._loadDeferred = RSVP.defer();\n        }\n\n        return this._loadDeferred;\n      }\n    };\n\n\n    return OasisSandbox;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/sandbox_init\",\n  [],\n  function() {\n    \"use strict\";\n    function autoInitializeSandbox () {\n      if (typeof window !== 'undefined') {\n        if (/PhantomJS/.test(navigator.userAgent)) {\n          // We don't support phantomjs for several reasons, including\n          //  - window.constructor vs Window\n          //  - postMessage must not have ports (but recall in IE postMessage must\n          //    have ports)\n          //  - because of the above we need to polyfill, but we fail to do so\n          //    because we see MessageChannel in global object\n          //  - we erroneously try to decode the oasis load message; alternatively\n          //    we should just encode the init message\n          //  - all the things we haven't noticed yet\n          return;\n        }\n\n        if (window.parent && window.parent !== window) {\n          Oasis.adapters.iframe.connectSandbox(this);\n        } \n      } else {\n        Oasis.adapters.webworker.connectSandbox(this);\n      }\n    }\n\n\n    return autoInitializeSandbox;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/events\",\n  [],\n  function() {\n    \"use strict\";\n    var a_slice = Array.prototype.slice;\n\n    function Events() {\n      this.listenerArrays = {};\n    }\n\n    Events.prototype = {\n      on: function (eventName, listener) {\n        var listeners = this.listenerArrays[eventName] = this.listenerArrays[eventName] || [];\n\n        listeners.push(listener);\n      },\n\n      off: function (eventName, listener) {\n        var listeners = this.listenerArrays[eventName];\n        if (!listeners) { return; }\n\n        for (var i=0; i<listeners.length; ++i) {\n          if (listeners[i] === listener) {\n            listeners.splice(i, 1);\n            break;\n          }\n        }\n      },\n\n      clear: function(eventName) {\n        delete this.listenerArrays[eventName];\n      },\n\n      trigger: function(eventName) {\n        var listeners = this.listenerArrays[eventName];\n        if (!listeners) { return; }\n\n        var args = a_slice.call(arguments, 1);\n\n        for (var i=0; i<listeners.length; ++i) {\n          listeners[i].apply(null, args);\n        }\n      }\n    };\n\n\n    return Events;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/service\",\n  [\"oasis/shims\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var o_create = __dependency1__.o_create;\n\n    /**\n      This is a base class that services and consumers can subclass to easily\n      implement a number of events and requests at once.\n\n      Example:\n\n          var MetadataService = Oasis.Service.extend({\n            initialize: function() {\n              this.send('data', this.sandbox.data);\n            },\n\n            events: {\n              changed: function(data) {\n                this.sandbox.data = data;\n              }\n            },\n\n            requests: {\n              valueForProperty: function(name, promise) {\n                promise.resolve(this.sandbox.data[name]);\n              }\n            }\n          });\n\n      In the above example, the metadata service implements the Service\n      API using `initialize`, `events` and `requests`.\n\n      Both services (implemented in the containing environment) and\n      consumers (implemented in the sandbox) use the same API for\n      registering events and requests.\n\n      In the containing environment, a service is registered in the\n      `createSandbox` method. In the sandbox, a consumer is registered\n      using `Oasis.connect`.\n\n      ### `initialize`\n\n      Oasis calls the `initialize` method once the other side of the\n      connection has initialized the connection.\n\n      This method is useful to pass initial data back to the other side\n      of the connection. You can also set up events or requests manually,\n      but you will usually want to use the `events` and `requests` sections\n      for events and requests.\n\n      ### `events`\n\n      The `events` object is a list of event names and associated callbacks.\n      Oasis will automatically set up listeners for each named event, and\n      trigger the callback with the data provided by the other side of the\n      connection.\n\n      ### `requests`\n\n      The `requests` object is a list of request names and associated\n      callbacks. Oasis will automatically set up listeners for requests\n      made by the other side of the connection, and trigger the callback\n      with the request information as well as a promise that you should\n      use to fulfill the request.\n\n      Once you have the information requested, you should call\n      `promise.resolve` with the response data.\n\n      @constructor\n      @param {OasisPort} port\n      @param {OasisSandbox} sandbox in the containing environment, the\n        OasisSandbox that this service is connected to.\n    */\n    function Service (port, sandbox) {\n      var service = this, prop, callback;\n\n      this.sandbox = sandbox;\n      this.port = port;\n\n      function xform(callback) {\n        return function() {\n          return callback.apply(service, arguments);\n        };\n      }\n\n      for (prop in this.events) {\n        callback = this.events[prop];\n        port.on(prop, xform(callback));\n      }\n\n      for (prop in this.requests) {\n        callback = this.requests[prop];\n        port.onRequest(prop, xform(callback));\n      }\n    }\n\n    Service.prototype = {\n      /**\n        This hook is called when the connection is established. When\n        `initialize` is called, it is safe to register listeners and\n        send data to the other side.\n\n        The implementation of Oasis makes it impossible for messages\n        to get dropped on the floor due to timing issues.\n\n        @param {OasisPort} port the port to the other side of the connection\n        @param {String} name the name of the service\n      */\n      initialize: function() {},\n\n\n      /**\n        This hooks is called when an attempt is made to connect to a capability the\n        environment does not provide.\n      */\n      error: function() {},\n\n      /**\n        This hook is called when the connection is stopped. When\n        `destroy` is called, it is safe to unregister listeners.\n      */\n      destroy: function() {},\n\n      /**\n        This method can be used to send events to the other side of the\n        connection.\n\n        @param {String} eventName the name of the event to send to the\n          other side of the connection\n        @param {Structured} data an additional piece of data to include\n          as the data for the event.\n      */\n      send: function() {\n        return this.port.send.apply(this.port, arguments);\n      },\n\n      /**\n        This method can be used to request data from the other side of\n        the connection.\n\n        @param {String} requestName the name of the request to send to\n          the other side of the connection.\n        @return {Promise} a promise that will be resolved by the other\n          side of the connection. Use `.then` to wait for the resolution.\n      */\n      request: function() {\n        return this.port.request.apply(this.port, arguments);\n      }\n    };\n\n    Service.extend = function extend(object) {\n      var superConstructor = this;\n\n      function Service() {\n        if (Service.prototype.init) { Service.prototype.init.call(this); }\n        superConstructor.apply(this, arguments);\n      }\n\n      Service.extend = extend;\n\n      var ServiceProto = Service.prototype = o_create(this.prototype);\n\n      for (var prop in object) {\n        ServiceProto[prop] = object[prop];\n      }\n\n      return Service;\n    };\n\n\n    return Service;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/base_adapter\",\n  [\"oasis/util\",\"oasis/shims\",\"oasis/connect\",\"oasis/message_channel\",\"rsvp\",\"oasis/logger\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, RSVP, Logger) {\n    \"use strict\";\n    var mustImplement = __dependency1__.mustImplement;\n    var addEventListener = __dependency2__.addEventListener;\n    var removeEventListener = __dependency2__.removeEventListener;\n    var a_indexOf = __dependency2__.a_indexOf;\n    var a_filter = __dependency2__.a_filter;\n    var connectCapabilities = __dependency3__.connectCapabilities;\n    var PostMessageMessageChannel = __dependency4__.PostMessageMessageChannel;\n\n\n\n    function BaseAdapter() {\n      this._unsupportedCapabilities = [];\n    }\n\n    BaseAdapter.prototype = {\n      initializeSandbox: mustImplement('BaseAdapter', 'initializeSandbox'),\n      name: mustImplement('BaseAdapter', 'name'),\n\n      unsupportedCapabilities: function () {\n        return this._unsupportedCapabilities;\n      },\n\n      addUnsupportedCapability: function (capability) {\n        this._unsupportedCapabilities.push(capability);\n      },\n\n      filterCapabilities: function(capabilities) {\n        var unsupported = this._unsupportedCapabilities;\n        return a_filter.call(capabilities, function (capability) {\n          var index = a_indexOf.call(unsupported, capability);\n          return index === -1;\n        });\n      },\n\n      createChannel: function(oasis) {\n        var channel = new PostMessageMessageChannel(oasis);\n        channel.port1.start();\n        return channel;\n      },\n\n      environmentPort: function(sandbox, channel) {\n        return channel.port1;\n      },\n\n      sandboxPort: function(sandbox, channel) {\n        return channel.port2;\n      },\n\n      proxyPort: function(sandbox, port) {\n        return port;\n      },\n\n      connectSandbox: function (receiver, oasis) {\n        var adapter = this;\n\n        Logger.log(\"Sandbox listening for initialization message\");\n\n        function initializeOasisSandbox(event) {\n          if (!event.data.isOasisInitialization) { return; }\n\n          removeEventListener(receiver, 'message', initializeOasisSandbox);\n          adapter.initializeOasisSandbox(event, oasis);\n        }\n        addEventListener(receiver, 'message', initializeOasisSandbox);\n\n        adapter.oasisLoaded(oasis);\n      },\n\n      initializeOasisSandbox: function (event, oasis) {\n        var adapter = this;\n        oasis.configuration.eventCallback(function () {\n          Logger.log(\"sandbox: received initialization message.\");\n\n          oasis.connectCapabilities(event.data.capabilities, event.ports);\n\n          adapter.didConnect(oasis);\n        });\n      },\n\n      createInitializationMessage: function (sandbox) {\n        return {\n          isOasisInitialization: true,\n          capabilities: sandbox._capabilitiesToConnect,\n        };\n      },\n\n      oasisLoadedMessage: \"oasisSandboxLoaded\",\n      sandboxInitializedMessage:  \"oasisSandboxInitialized\"\n    };\n\n\n    return BaseAdapter;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/iframe_adapter\",\n  [\"oasis/util\",\"oasis/shims\",\"rsvp\",\"oasis/logger\",\"oasis/base_adapter\"],\n  function(__dependency1__, __dependency2__, RSVP, Logger, BaseAdapter) {\n    \"use strict\";\n    var assert = __dependency1__.assert;\n    var extend = __dependency1__.extend;\n    var a_forEach = __dependency2__.a_forEach;\n    var addEventListener = __dependency2__.addEventListener;\n    var removeEventListener = __dependency2__.removeEventListener;\n    var a_map = __dependency2__.a_map;\n    /*global Window, UUID */\n\n\n\n    function verifySandbox(oasis, sandboxUrl) {\n      var iframe = document.createElement('iframe'),\n          link;\n\n      if( (oasis.configuration.allowSameOrigin && iframe.sandbox !== undefined) ||\n          (iframe.sandbox === undefined) ) {\n        // The sandbox attribute isn't supported (IE8/9) or we want a child iframe\n        // to access resources from its own domain (youtube iframe),\n        // we need to make sure the sandbox is loaded from a separate domain\n        link = document.createElement('a');\n        link.href = sandboxUrl;\n\n        if( !link.host || (link.protocol === window.location.protocol && link.host === window.location.host) ) {\n          throw new Error(\"Security: iFrames from the same host cannot be sandboxed in older browsers and is disallowed.  \" +\n                          \"For HTML5 browsers supporting the `sandbox` attribute on iframes, you can add the `allow-same-origin` flag\" +\n                          \"only if you host the sandbox on a separate domain.\");\n        }\n      }\n    }\n\n    function verifyCurrentSandboxOrigin(sandbox, event) {\n      var linkOriginal, linkCurrent;\n\n      if (sandbox.firstLoad || sandbox.options.reconnect === \"any\") {\n        return true;\n      }\n\n      if (!sandbox.oasis.configuration.allowSameOrigin || event.origin === \"null\") {\n        fail();\n      } else {\n        linkOriginal = document.createElement('a');\n        linkCurrent = document.createElement('a');\n\n        linkOriginal.href = sandbox.options.url;\n        linkCurrent.href = event.origin;\n\n        if (linkCurrent.protocol === linkOriginal.protocol &&\n            linkCurrent.host === linkOriginal.host) {\n          return true;\n        }\n\n        fail();\n      }\n\n      function fail() {\n        sandbox.onerror(\n          new Error(\"Cannot reconnect null origins unless `reconnect` is set to \" +\n                    \"'any'.  `reconnect: 'verify' requires `allowSameOrigin: \" +\n                    \"true`\"));\n      }\n    }\n\n    function isUrl(s) {\n      var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n      return regexp.test(s);\n    }\n\n    var IframeAdapter = extend(BaseAdapter, {\n      //-------------------------------------------------------------------------\n      // Environment API\n\n      initializeSandbox: function(sandbox) {\n        var options = sandbox.options,\n            iframe = document.createElement('iframe'),\n            sandboxAttributes = ['allow-scripts'];\n\n        if( sandbox.oasis.configuration.allowSameOrigin ) {\n          sandboxAttributes.push('allow-same-origin');\n        }\n        if( options && options.sandbox && options.sandbox.popups ) {\n          sandboxAttributes.push('allow-popups');\n        }\n\n        iframe.name = sandbox.options.url + '?uuid=' + UUID.generate();\n        iframe.sandbox = sandboxAttributes.join(' ');\n        iframe.seamless = true;\n\n        // rendering-specific code\n        if (options.width) {\n          iframe.width = options.width;\n        } else if (options.height) {\n          iframe.height = options.height;\n        }\n\n        // Error handling inside the iFrame\n        iframe.errorHandler = function(event) {\n          if(!event.data.sandboxException) {return;}\n          try {\n            // verify this message came from the expected sandbox; try/catch\n            // because ie8 will disallow reading contentWindow in the case of\n            // another sandbox's message\n            if( event.source !== iframe.contentWindow ) {return;}\n          } catch(e) {\n            return;\n          }\n\n          sandbox.onerror( event.data.sandboxException );\n        };\n        addEventListener(window, 'message', iframe.errorHandler);\n\n        verifySandbox( sandbox.oasis, sandbox.options.url );\n        iframe.src = sandbox.options.url;\n\n        Logger.log('Initializing sandbox ' + iframe.name);\n\n        // Promise that sandbox has loaded and capabilities connected at least once.\n        // This does not mean that the sandbox will be loaded & connected in the\n        // face of reconnects (eg pages that navigate)\n        sandbox._waitForLoadDeferred().resolve(new RSVP.Promise( function(resolve, reject) {\n          iframe.initializationHandler = function (event) {\n            if( event.data !== sandbox.adapter.sandboxInitializedMessage ) {return;}\n            try {\n              // verify this message came from the expected sandbox; try/catch\n              // because ie8 will disallow reading contentWindow in the case of\n              // another sandbox's message\n              if( event.source !== iframe.contentWindow ) {return;}\n            } catch(e) {\n              return;\n            }\n            removeEventListener(window, 'message', iframe.initializationHandler);\n\n            sandbox.oasis.configuration.eventCallback(function () {\n              Logger.log(\"container: iframe sandbox has initialized (capabilities connected)\");\n              resolve(sandbox);\n            });\n          };\n          addEventListener(window, 'message', iframe.initializationHandler);\n        }));\n\n        sandbox.el = iframe;\n\n        iframe.oasisLoadHandler = function (event) {\n          if( event.data !== sandbox.adapter.oasisLoadedMessage ) {return;}\n          try {\n            // verify this message came from the expected sandbox; try/catch\n            // because ie8 will disallow reading contentWindow in the case of\n            // another sandbox's message\n            if( event.source !== iframe.contentWindow ) {return;}\n          } catch(e) {\n            return;\n          }\n\n          Logger.log(\"container: iframe sandbox has loaded Oasis\");\n\n\n          if (verifyCurrentSandboxOrigin(sandbox, event)) {\n            sandbox.createAndTransferCapabilities();\n          }\n\n          if (sandbox.options.reconnect === \"none\") {\n            removeEventListener(window, 'message', iframe.oasisLoadHandler);\n          }\n        };\n        addEventListener(window, 'message', iframe.oasisLoadHandler);\n      },\n\n      startSandbox: function(sandbox) {\n        var head = document.head || document.documentElement.getElementsByTagName('head')[0];\n        head.appendChild(sandbox.el);\n      },\n\n      terminateSandbox: function(sandbox) {\n        var el = sandbox.el;\n\n        sandbox.terminated = true;\n\n        if (el.loadHandler) {\n          // no load handler for HTML sandboxes\n          removeEventListener(el, 'load', el.loadHandler);\n        }\n        removeEventListener(window, 'message', el.initializationHandler);\n        removeEventListener(window, 'message', el.oasisLoadHandler);\n\n        if (el.parentNode) {\n          Logger.log(\"Terminating sandbox \", sandbox.el.name);\n          el.parentNode.removeChild(el);\n        }\n\n        sandbox.el = null;\n      },\n\n      connectPorts: function(sandbox, ports) {\n        var rawPorts = a_map.call(ports, function(port) { return port.port; }),\n            message = this.createInitializationMessage(sandbox);\n\n        if (sandbox.terminated) { return; }\n        Window.postMessage(sandbox.el.contentWindow, message, '*', rawPorts);\n      },\n\n      //-------------------------------------------------------------------------\n      // Sandbox API\n\n      connectSandbox: function(oasis) {\n        return BaseAdapter.prototype.connectSandbox.call(this, window, oasis);\n      },\n\n      oasisLoaded: function() {\n        window.parent.postMessage(this.oasisLoadedMessage, '*', []);\n      },\n\n      didConnect: function() {\n        window.parent.postMessage(this.sandboxInitializedMessage, '*', []);\n      },\n\n      name: function(sandbox) {\n        return sandbox.el.name;\n      }\n\n    });\n\n\n    return IframeAdapter;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/webworker_adapter\",\n  [\"oasis/util\",\"oasis/shims\",\"rsvp\",\"oasis/logger\",\"oasis/base_adapter\"],\n  function(__dependency1__, __dependency2__, RSVP, Logger, BaseAdapter) {\n    \"use strict\";\n    var assert = __dependency1__.assert;\n    var extend = __dependency1__.extend;\n    var a_forEach = __dependency2__.a_forEach;\n    var addEventListener = __dependency2__.addEventListener;\n    var removeEventListener = __dependency2__.removeEventListener;\n    /*global self, postMessage, importScripts, UUID */\n\n\n\n    var WebworkerAdapter = extend(BaseAdapter, {\n      type: 'js',\n\n      //-------------------------------------------------------------------------\n      // Environment API\n\n      initializeSandbox: function(sandbox) {\n        var worker = new Worker(sandbox.options.url);\n        worker.name = sandbox.options.url + '?uuid=' + UUID.generate();\n        sandbox.worker = worker;\n\n        // Error handling inside the worker\n        worker.errorHandler = function(event) {\n          if(!event.data.sandboxException) {return;}\n\n          sandbox.onerror( event.data.sandboxException );\n        };\n        addEventListener(worker, 'message', worker.errorHandler);\n\n        sandbox._waitForLoadDeferred().resolve(new RSVP.Promise( function(resolve, reject) {\n          worker.initializationHandler = function (event) {\n            sandbox.oasis.configuration.eventCallback(function () {\n              if( event.data !== sandbox.adapter.sandboxInitializedMessage ) {return;}\n              removeEventListener(worker, 'message', worker.initializationHandler);\n\n              Logger.log(\"worker sandbox initialized\");\n              resolve(sandbox);\n            });\n          };\n          addEventListener(worker, 'message', worker.initializationHandler);\n        }));\n\n        worker.loadHandler = function (event) {\n          sandbox.oasis.configuration.eventCallback(function () {\n            if( event.data !== sandbox.adapter.oasisLoadedMessage ) {return;}\n            removeEventListener(worker, 'message', worker.loadHandler);\n\n            Logger.log(\"worker sandbox initialized\");\n            sandbox.createAndTransferCapabilities();\n          });\n        };\n        addEventListener(worker, 'message', worker.loadHandler);\n      },\n\n      startSandbox: function(sandbox) { },\n\n      terminateSandbox: function(sandbox) {\n        var worker = sandbox.worker;\n\n        removeEventListener(worker, 'message', worker.loadHandler);\n        removeEventListener(worker, 'message', worker.initializationHandler);\n        sandbox.worker.terminate();\n      },\n\n      connectPorts: function(sandbox, ports) {\n        var rawPorts = ports.map(function(port) { return port.port; }),\n            message = this.createInitializationMessage(sandbox);\n\n        Worker.postMessage(sandbox.worker, message, rawPorts);\n      },\n\n      connectSandbox: function(oasis) {\n        return BaseAdapter.prototype.connectSandbox.call(this, self, oasis);\n      },\n\n      //-------------------------------------------------------------------------\n      // Sandbox API\n\n      name: function(sandbox) {\n        return sandbox.worker.name;\n      },\n\n      oasisLoaded: function() {\n        postMessage(this.oasisLoadedMessage, []);\n      },\n\n      didConnect: function() {\n        postMessage(this.sandboxInitializedMessage, []);\n      }\n    });\n\n\n    return WebworkerAdapter;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/*eslint-disable */\n/* jscs:disable */\ndefine(\"oasis/inline_adapter\",\n  [\"oasis/util\",\"oasis/config\",\"oasis/shims\",\"oasis/xhr\",\"rsvp\",\"oasis/logger\",\"oasis/base_adapter\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, RSVP, Logger, BaseAdapter) {\n    \"use strict\";\n    var assert = __dependency1__.assert;\n    var extend = __dependency1__.extend;\n    var noop = __dependency1__.noop;\n    var configuration = __dependency2__.configuration;\n    var a_forEach = __dependency3__.a_forEach;\n    var a_map = __dependency3__.a_map;\n    var xhr = __dependency4__.xhr;\n    /*global self, postMessage, importScripts */\n\n\n\n    var InlineAdapter = extend(BaseAdapter, {\n      //-------------------------------------------------------------------------\n      // Environment API\n\n      initializeSandbox: function(sandbox) {\n        sandbox.el = document.createElement('div');\n\n        var oasis = sandbox.sandboxedOasis = new Oasis();\n        sandbox.sandboxedOasis.sandbox = sandbox;\n        RSVP.async(function () {\n          sandbox.createAndTransferCapabilities();\n        });\n      },\n \n      startSandbox: function(sandbox) {\n        var body = document.body || document.documentElement.getElementsByTagName('body')[0];\n        body.appendChild(sandbox.el);\n      },\n\n      terminateSandbox: function(sandbox) {\n        var el = sandbox.el;\n\n        if (el.parentNode) {\n          Logger.log(\"Terminating sandbox \", sandbox.el.name);\n          el.parentNode.removeChild(el);\n        }\n\n        sandbox.el = null;\n      },\n\n      connectPorts: function(sandbox, ports) {\n        var rawPorts = a_map.call(ports, function(oasisPort){ return oasisPort.port; }),\n            message = this.createInitializationMessage(sandbox),\n            event = { data: message, ports: rawPorts };\n\n        // Normally `connectSandbox` is called in autoinitialization, but there\n        // isn't a real sandbox here.\n        this.connectSandbox(sandbox.sandboxedOasis, event);\n      },\n\n      fetchResource: function (url, oasis) {\n        var adapter = this;\n\n        return xhr(url, {\n          dataType: 'text'\n        }, oasis).then(function (code) {\n          return adapter.wrapResource(code);\n        })['catch'](RSVP.rethrow);\n      },\n\n      wrapResource: function (code) {\n        return new Function(\"oasis\", code);\n      },\n\n      //-------------------------------------------------------------------------\n      // Sandbox API\n\n      connectSandbox: function(oasis, pseudoEvent) {\n        return this.initializeOasisSandbox(pseudoEvent, oasis);\n      },\n\n      oasisLoaded: noop,\n\n      didConnect: function(oasis) {\n        var adapter = this;\n\n        return oasis.sandbox._waitForLoadDeferred().resolve(loadSandboxJS()['catch'](RSVP.rethrow));\n\n        function applySandboxJS(sandboxFn) {\n          Logger.log(\"sandbox: inline sandbox initialized\");\n          sandboxFn(oasis);\n          return oasis.sandbox;\n        }\n\n        function loadSandboxJS() {\n          return new RSVP.Promise(function (resolve, reject) {\n            resolve(adapter.fetchResource(oasis.sandbox.options.url, oasis).\n              then(applySandboxJS));\n          });\n        }\n      },\n    });\n\n\n    return InlineAdapter;\n  });\n/* jscs:enable */\n/*eslint-enable */\n;\n","/* jscs:disable */\ndefine('oasis',['require','exports','module','rsvp','oasis/util','oasis/xhr','oasis/connect','oasis/logger','oasis/version','oasis/config','oasis/sandbox','oasis/sandbox_init','oasis/events','oasis/service','oasis/iframe_adapter','oasis/webworker_adapter','oasis/inline_adapter'],function(require, exports, module)\n{\n\t\"use strict\";\n\t\n\trequire('rsvp');\n\t\n\tvar __dependency1__ = require('oasis/util');\n\tvar __dependency2__ = require('oasis/xhr');\n\tvar __dependency3__ = require('oasis/connect');\n\tvar RSVP = window.RSVP;//require('rsvp');\n\tvar logger = require('oasis/logger');\n\tvar Version = require('oasis/version');\n\tvar OasisConfiguration = require('oasis/config');\n\tvar Sandbox = require('oasis/sandbox');\n\tvar autoInitializeSandbox = require('oasis/sandbox_init');\n\tvar Events = require('oasis/events');\n\tvar Service = require('oasis/service');\n\tvar IframeAdapter = require('oasis/iframe_adapter');\n\tvar WebworkerAdapter = require('oasis/webworker_adapter');\n\tvar InlineAdapter = require('oasis/inline_adapter');\n\t\t\n    var assert = __dependency1__.assert;\n    var delegate = __dependency1__.delegate;\n    var xhr = __dependency2__.xhr;\n    var connect = __dependency3__.connect;\n    var connectCapabilities = __dependency3__.connectCapabilities;\n    var portFor = __dependency3__.portFor;\n\n\n\n    function Oasis() {\n      // Data structures used by Oasis when creating sandboxes\n      this.packages = {};\n      this.requestId = 0;\n      this.oasisId = 'oasis' + (+new Date());\n\n      this.consumers = {};\n      this.services = [];\n\n      // Data structures used when connecting to a parent sandbox\n      this.ports = {};\n      this.handlers = {};\n\n      this.receivedPorts = false;\n\n      this.configuration = new OasisConfiguration();\n      this.events = new Events();\n\n      this.didCreate();\n    }\n\n    Oasis.Version = Version;\n    Oasis.Service = Oasis.Consumer = Service;\n    Oasis.RSVP = RSVP;\n\n    Oasis.reset = function () {\n      Oasis.adapters = {\n        iframe: new IframeAdapter(),\n        webworker: new WebworkerAdapter(),\n        inline: new InlineAdapter()\n      };\n    };\n\n    Oasis.reset();\n\n    Oasis.prototype = {\n      logger: logger,\n      log: function () {\n        this.logger.log.apply(this.logger, arguments);\n      },\n\n      on: delegate('events', 'on'),\n      off: delegate('events', 'off'),\n      trigger: delegate('events', 'trigger'),\n\n      didCreate: function() {},\n\n      xhr: xhr,\n\n      /**\n        This is the entry point that allows the containing environment to create a\n        child sandbox.\n\n        Options:\n\n        * `capabilities`: an array of registered services\n        * `url`: a registered URL to a JavaScript file that will initialize the\n          sandbox in the sandboxed environment\n        * `adapter`: a reference to an adapter that will handle the lifecycle\n          of the sandbox. Right now, there are iframe and web worker adapters.\n\n        @param {Object} options\n      */\n      createSandbox: function (options) {\n        return new Sandbox(this, options);\n      },\n\n      /**\n        This registers a sandbox type inside of the containing environment so that\n        it can be referenced by URL in `createSandbox`.\n\n        Options:\n\n        * `capabilities`: An array of service names that will be supplied when calling\n          `createSandbox`\n        * `url`: The URL of the JavaScript file that contains the sandbox code\n\n        @param {Object} options\n      */\n      register: function (options) {\n        assert(options.capabilities, \"You are trying to register a package without any capabilities. Please provide a list of requested capabilities, or an empty array ([]).\");\n\n        this.packages[options.url] = options;\n      },\n\n      configure: function(name, value) { this.configuration[name] = value; },\n      autoInitializeSandbox: autoInitializeSandbox,\n\n      connect: connect,\n      connectCapabilities: connectCapabilities,\n      portFor: portFor\n    };\n\n    module.exports = Oasis;\n  });\n/* jscs:enable */\n;\n","// Auto-generated content during a grunt build\n//\n// ---> 'id' and 'version' are pulled from Gruntfile.js\n// ---> Please review grunt/replace.js for adding additional\n//      dynamic fields, or changing existing content\n//\ndefine('glympse-adapter/VersionInfo',['require','exports','module'],function(require, exports, module)\n{\n    'use strict';\n\n\tmodule.exports =\n\t{\n\t\tid: 'glympse-adapter',\n\t\tversion: '2.1.1',\n\t\tbuildDate: '2017-02-26T09:52:42Z'\n\t};\n});\n\n","// App entry point\ndefine('glympse-adapter/GlympseAdapterDefines',['require','exports','module'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar Defines =\n\t{\n\t\tPORT: 'glympse'\n\t\t, MAP: {\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints - host and client\n\t\t\t/////////////////////////////////////////\n\n\t\t\tREQUESTS: {\n\t\t\t\t  addInvites: 'addInvites'\n\t\t\t\t, addGroups: 'addGroups'\n\t\t\t\t, addMarkers: 'addMarkers'\n\t\t\t\t, addTwitterTopics: 'addTwitterTopics'\n\t\t\t\t, addTwitterUsers: 'addTwitterUsers'\n\t\t\t\t, refreshView: 'refreshView'\n\t\t\t\t, removeInvites: 'removeInvites'\n\t\t\t\t, setApiServices: 'setApiServices'\n\t\t\t\t, setPadding: 'setPadding'\n\t\t\t\t, setUserInfo: 'setUserInfo'\t// Send-only... break it out?\n\t\t\t\t, updateSetting: 'updateSetting'\n\t\t\t}\n\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints: client-only\n\t\t\t/////////////////////////////////////////\n\n\t\t\t, REQUESTS_LOCAL: {\n\t\t\t\t  getInvites: 'getInvites'\n\t\t\t\t, getMap: 'getMap'\n\t\t\t\t, getMapContainer: 'getMapContainer'\n\t\t\t\t, generateRoute: 'generateRoute'\n\t\t\t\t, ignoreDestinations: 'ignoreDestinations'\n\t\t\t}\n\t\t}\n\n\t\t, CARDS: {\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints - host and client\n\t\t\t/////////////////////////////////////////\n\n\t\t\tREQUESTS: {\n\t\t\t\trequestCards: 'requestCards'\n\t\t\t\t, request: 'request'\n\t\t\t\t, joinRequest: 'joinRequest'\n\t\t\t\t, joinRequestCancel: 'joinRequestCancel'\n\t\t\t\t, getActiveJoinRequests: 'getActiveJoinRequests'\n\t\t\t\t, removeMember: 'removeMember'\n\t\t\t\t, activity: 'activity'\n\t\t\t\t//  addInvites: 'addInvites'\n\t\t\t\t//, getInvites: 'getInvites'\n\t\t\t\t//, removeInvites: 'removeInvites'\n\t\t\t\t//, setServices: 'setServices'\n\t\t\t\t//, updateSetting: 'updateSetting'\n\t\t\t}\n\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints: client-only\n\t\t\t/////////////////////////////////////////\n\n\t\t\t, REQUESTS_LOCAL: {\n\t\t\t\tgetCards: 'getCards'\n\t\t\t}\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints: client-only\n\t\t\t/////////////////////////////////////////\n\n\t\t\t, REQUEST_TYPES: {\n\t\t\t\tLINK: 'link'\n\t\t\t\t, CLIPBOARD: 'clipboard'\n\t\t\t\t, SMS: 'sms'\n\t\t\t\t, EMAIL: 'email'\n\t\t\t\t, ACCOUNT: 'account'\n\t\t\t}\n\t\t}\n\n\t\t, CORE: {\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints - host and client\n\t\t\t/////////////////////////////////////////\n\n\t\t\tREQUESTS: {\n\t\t\t}\n\n\n\t\t\t/////////////////////////////////////////\n\t\t\t// API Endpoints: client-only\n\t\t\t/////////////////////////////////////////\n\n\t\t\t, REQUESTS_LOCAL: {\n\t\t\t\taccountCreate: 'accountCreate'\n\t\t\t\t, accountDelete: 'accountDelete'\n\t\t\t\t, generateAuthToken: 'generateAuthToken'\n\t\t\t\t, getUserInfo: 'getUserInfo'\n\t\t\t\t, setUserName: 'setUserName'\n\t\t\t\t, setUserAvatar: 'setUserAvatar'\n\t\t\t\t, hasAccount: 'hasAccount'\n\t\t\t\t, createRequest: 'createRequest'\n\t\t\t}\n\t\t}\n\n\n\t\t/////////////////////////////////////////\n\t\t// Notification messages\n\t\t/////////////////////////////////////////\n\n\t\t, MSG: {\n\t\t\t//Account Events\n\t\t\t  AccountCreateStatus: 'AccountCreateStatus'\n\t\t\t, AccountDeleteStatus: 'AccountDeleteStatus'\n\t\t    , AccountLoginStatus: 'AccountLoginStatus'\n\t\t\t, UserNameUpdateStatus: 'UserNameUpdateStatus'\n\t\t\t, UserAvatarUpdateStatus: 'UserAvatarUpdateStatus'\n\t\t\t, UserInfoStatus: 'UserInfoStatus'\n\t\t\t, CreateRequestStatus: 'CreateRequestStatus'\n\n\t\t    , AdapterInit: 'AdapterInit'\n\t\t\t, AdapterReady: 'AdapterReady'\n\n\t\t\t//Card events\n\t\t\t, CardInit: 'CardInit'\n\t\t\t, CardReady: 'CardReady'\n\t\t\t, CardsInitEnd: 'CardsInitEnd'\n\t\t\t, CardsInitStart: 'CardsInitStart'\n\t\t\t, CardUpdated: 'CardUpdated'\n\t\t\t, CardAdded: 'CardAdded'\n\t\t\t, CardRemoved: 'CardRemoved'\n\t\t\t, CardsRequestStatus: 'CardsRequestStatus'\n\t\t\t, CardsJoinRequestStatus: 'CardsJoinRequestStatus'\n\t\t\t, CardsJoinRequestCancelStatus: 'CardsJoinRequestCancelStatus'\n\t\t\t, CardsActiveJoinRequestsStatus: 'CardsActiveJoinRequestsStatus'\n\t\t\t, CardRemoveMemberStatus: 'CardRemoveMemberStatus'\n\t\t\t, CardsLocationRequestStatus: 'CardsLocationRequestStatus'\n\n\t\t\t, DataUpdate: 'DataUpdate'\n\t\t\t, InviteAdded: 'InviteAdded'\n\t\t\t, InviteClicked: 'InviteClicked'\n\t\t\t, InviteError: 'InviteError'\n\t\t\t, InviteInit: 'InviteInit'\n\t\t\t, InviteReady: 'InviteReady'\n\t\t\t, InviteRemoved: 'InviteRemoved'\n\t\t\t, Progress: 'Progress'\n\t\t\t, StateUpdate: 'StateUpdate'\n\t\t\t, ViewerInit: 'ViewerInit'\n\t\t\t, ViewerReady: 'ViewerReady'\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////\n\t\t// State updates -- probably will move/remove\n\t\t///////////////////////////////////////////////////\n\n\t\t, STATE: {\n\t\t\t// Known data stream properties\n\t\t\t  Avatar: 'avatar'\n\t\t\t, Destination: 'destination'\n\t\t\t, Eta: 'eta'\n\t\t\t, InviteEnd: 'end_time'\n\t\t\t, InviteCompleted: 'completed'\n\t\t\t, InviteStart: 'start_time'\n\t\t\t, Message: 'message'\n\t\t\t, Name: 'name'\n\t\t\t, Owner: 'owner'\n\t\t\t, Phase: 'phase'\n\n\t\t\t// Additional meta-data state\n\t\t\t, Arrived: 'Arrived'\t// needed?\n\t\t\t, Expired: 'Expired'\n\t\t\t, NoInvites: 'NoInvites'\n\t\t\t, App: 'app'\n\t\t}\n\t};\n\n\n\t// Global namespace registration\n\tif (!window.glympse)\n\t{\n\t\twindow.glympse = {};\n\t}\n\n\tif (!window.glympse.broadcastTypes)\n\t{\n\t\twindow.glympse.broadcastTypes = {\n\t\t\tDATA: 'DATA',\n\t\t\tETA: 'ETA',\n\t\t\tINVITE_STATUS: 'INVITE_STATUS'\n\t\t};\n\t}\n\n\tif (!window.glympse.GlympseAdapterDefines)\n\t{\n\t\twindow.glympse.GlympseAdapterDefines = Defines;\n\t}\n\n\n\tmodule.exports = Defines;\n});\n\n","define('glympse-adapter/adapter/ViewerMonitor',['require','exports','module','glympse-adapter/GlympseAdapterDefines','glympse-adapter/lib/utils'],function(require, exports, module)\n{\n    'use strict';\n\n\t// defines\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar m = Defines.MSG;\n\tvar s = Defines.STATE;\n\tvar r = Defines.MAP.REQUESTS;\n\n\tvar cEtaVal = 'eta';\n\tvar cEtaTime = 'eta_ts';\n\n\t// Exported class\n\tfunction MapController(controller, cfg)\n\t{\n\t\t// consts\n\t\tvar glyEvents = window.glympse.events;\n\t\tvar propMap = [ s.Avatar\n\t\t\t\t\t  , s.Destination\n\t\t\t\t\t  , s.InviteStart\n\t\t\t\t\t  , s.InviteEnd\n\t\t\t\t\t  , s.Eta\n\t\t\t\t\t  , s.Message\n\t\t\t\t\t  , s.Name\n\t\t\t\t\t  , s.Phase\n\t\t\t\t\t  , s.Expired\n\t\t\t\t\t  , s.App\n\t\t\t\t\t  ];\t// Known/tracked properties\n\n\t\t// state\n\t\tvar timerEnd;\n\t\tvar viewerApp;\n\t\tvar viewerElement;\n\n\t\tvar that = this;\n\t\tvar cmdQueue = [];\n\t\tvar props = { };\n\n\t\tvar dbg = lib.dbg('MapController', cfg.dbg);\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t//this.getViewer = function()\n\t\t//{\n\t\t//\treturn viewerApp;\n\t\t//};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.run = function()\n\t\t{\n\t\t\tif (!cfg.viewer)\n\t\t\t{\n\t\t\t\tdbg('No viewer set. Aborting...');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set up handlers\n\t\t\tviewerElement = cfg.viewer;\n\t\t\tviewerElement.addEventListener(glyEvents.INIT, viewerInit, false);\n\t\t\tviewerElement.addEventListener(glyEvents.READY, viewerReady, false);\n\t\t\tviewerElement.addEventListener(glyEvents.DATA, viewerData, false);\n\t\t\tviewerElement.addEventListener(glyEvents.PROPERTIES, viewerData, false);\n\t\t\tviewerElement.addEventListener(glyEvents.ETA, viewerEta, false);\n\t\t\tviewerElement.addEventListener(glyEvents.INVITE_ADDED, viewerInviteAdded, false);\n\t\t\tviewerElement.addEventListener(glyEvents.INVITE_REMOVED, viewerInviteRemoved, false);\n\t\t\tviewerElement.addEventListener(glyEvents.INVITE_CLICKED, viewerInviteClicked, false);\n\t\t};\n\n\t\tthis.shutdown = function()\n\t\t{\n\t\t\tviewerElement.removeEventListener(glyEvents.DATA, viewerData, false);\n\t\t\tviewerElement.removeEventListener(glyEvents.PROPERTIES, viewerData, false);\n\t\t\tviewerElement.removeEventListener(glyEvents.ETA, viewerEta, false);\n\t\t};\n\n\t\tthis.getCurrentProperties = function(idInvite)\n\t\t{\n\t\t\tidInvite = (idInvite && lib.simplifyInvite(idInvite));\n\n\t\t\t// Allow for simpler property-bag retrieval if only\n\t\t\t// tracking one invite\n\t\t\tif (!idInvite)\n\t\t\t{\n\t\t\t\tfor (idInvite in props)\n\t\t\t\t{\n\t\t\t\t\tif (idInvite)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (props.hasOwnProperty(idInvite))\n\t\t\t{\n\t\t\t\treturn props[idInvite];\n\t\t\t}\n\n\t\t\treturn 'Unknown invite \"' + idInvite + '\"';\n\t\t};\n\n\t\tthis.getCurrentValue = function(idProperty, idInvite)\n\t\t{\n\t\t\tvar prop = this.getCurrentProperties(idInvite);\n\n\t\t\tif (typeof prop === 'string')\n\t\t\t{\n\t\t\t\treturn prop;\n\t\t\t}\n\n\t\t\tif (idProperty && prop.hasOwnProperty(idProperty))\n\t\t\t{\n\t\t\t\treturn prop[idProperty];\n\t\t\t}\n\n\t\t\treturn 'Unknown property id \"' + idProperty + '\" for invite \"' + idInvite + '\"';\n\t\t};\n\n\t\tthis.cmd = function(cmd, args)\n\t\t{\n\t\t\t//dbg('cmd = ' + cmd + ', args', args);\n\n\t\t\tif (!viewerApp)\n\t\t\t{\n\t\t\t\tcmdQueue.push({ cmd: cmd, args: args });\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tswitch (cmd)\n\t\t\t{\n\t\t\t\tcase MapController.GetInviteProperties:\n\t\t\t\t{\n\t\t\t\t\treturn this.getCurrentProperties(args);\n\t\t\t\t}\n\n\t\t\t\tcase MapController.GetInviteProperty:\n\t\t\t\t{\n\t\t\t\t\t// args = { idProperty: name_of_property_to_retrieve\n\t\t\t\t\t//\t\t  , idInvite:   glympse_invite_id --> can be null if first invite is targetted\n\t\t\t\t\t//\t\t  }\n\t\t\t\t\treturn this.getCurrentValue(args.idProperty, args.idInvite);\n\t\t\t\t}\n\n\t\t\t\tcase r.setPadding:\n\t\t\t\t{\n\t\t\t\t\tif (!(args instanceof Array))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (typeof args === 'number')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Replicate old paddingLeft semantics for now\n\t\t\t\t\t\t\targs = [ null, null, null, args ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn 'Invalid paddingArray type!';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewerApp[cmd](args);\n\t\t};\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////////\n\t\t// EVENT HANDLERS\n\t\t///////////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction viewerInit(e)\n\t\t{\n\t\t\t//dbg('**** VIEWER INIT **** - viewerApp=' + e.detail.app);\n\t\t\tviewerElement.removeEventListener(glyEvents.INIT, viewerInit, false);\n\t\t\tcontroller.notify(m.ViewerInit, true);\n\t\t}\n\n\t\tfunction viewerReady(e)\n\t\t{\n\t\t\t//dbg('!!!!!!!! READY !!!!!!!!');\n\t\t\tviewerElement.removeEventListener(glyEvents.READY, viewerReady, false);\n\n\t\t\tviewerApp = e.detail.app;\n\t\t\tif (!viewerApp)\n\t\t\t{\n\t\t\t\tdbg('Error getting viewer. Aborting!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Process any queued commands issued before VIEWER_READY fired\n\t\t\tfor (var i = 0; i < cmdQueue.length; i++)\n\t\t\t{\n\t\t\t\tvar o = cmdQueue[i];\n\t\t\t\tthat.cmd(o.cmd, o.args);\n\t\t\t}\n\n\t\t\tcontroller.notify(m.ViewerReady, viewerApp);\n\n\t\t\t// Notify if no invites found\n\t\t\tvar invites = viewerApp.getInvites();\n\t\t\tif (!invites || invites.length === 0)\n\t\t\t{\n\t\t\t\tcontroller.infoUpdate(s.NoInvites, null, null, new Date().getTime(), true);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewerData(e)\n\t\t{\n\t\t\tvar detail = e.detail;\n\t\t\tvar idInvite = (detail.id && lib.simplifyInvite(detail.id));\n\t\t\tvar data = [];\n\t\t\tvar ddata = detail.data || [];\n\t\t\tvar owner = detail.owner;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ddata.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\tdata.push($.extend({}, ddata[i]));\n\t\t\t}\n\n\t\t\tvar unknowns = [];\t// Unknown properties that are passed along\n\n\t\t\tif (!props[idInvite])\n\t\t\t{\n\t\t\t\tprops[idInvite] = { };\n\t\t\t\t//console.log('New props for ' + idInvite);\n\t\t\t}\n\n\t\t\tvar prop = props[idInvite];\n\n\t\t\t//console.log('DATA: ' + JSON.stringify(detail, null, '  '));\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\tvar val = data[i];\n\t\t\t\tvar v = val.v;\n\t\t\t\tvar n = val.n;\n\t\t\t\tvar t = val.t;\n\t\t\t\tvar found = false;\n\n\t\t\t\tfor (var j = 0, jlen = propMap.length; j < jlen; j++)\n\t\t\t\t{\n\t\t\t\t\tvar id = propMap[j];\n\n\t\t\t\t\tif (n === id)\n\t\t\t\t\t{\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tif (prop[id] !== v)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tval.n = undefined;\n\t\t\t\t\t\t\tprop[id] = val;\n\t\t\t\t\t\t\t//dbg('id=' + id + ', v', v);\n\t\t\t\t\t\t\tcontroller.infoUpdate(id, idInvite, owner, t, v);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check for additional processing\n\t\t\t\tif (n === s.InviteEnd)\n\t\t\t\t{\n\t\t\t\t\tnotifyExpired(idInvite, owner);\n\t\t\t\t}\n\n\t\t\t\tif (!found)\n\t\t\t\t{\n\t\t\t\t\tunknowns.push(val);\n\t\t\t\t\tval = $.extend({}, val);\n\t\t\t\t\tval.n = undefined;\n\t\t\t\t\tprop[n] = val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknowns.length > 0)\n\t\t\t{\n\t\t\t\tdetail.data = unknowns;\n\t\t\t\tcontroller.notify(m.DataUpdate, detail);\n\t\t\t}\n\n\t\t\t//dbg('>>>> props[\"' + idInvite + '\"]', prop);\n\t\t}\n\n\t\tfunction viewerEta(e)\n\t\t{\n\t\t\tvar d = e.detail;\n\t\t\tvar t = new Date().getTime();\n\t\t\tvar idProp = s.Eta;\n\t\t\tvar id = lib.simplifyInvite(d.id);\n\t\t\tvar prop = props[id];\n\t\t\tvar val = prop[idProp];\n\n\t\t\tif (!val)\n\t\t\t{\n\t\t\t\tval = {};\n\t\t\t\tprop[idProp] = val;\n\t\t\t}\n\n\t\t\tval[cEtaVal] = d.data * 1000;\n\t\t\tval[cEtaTime] = t;\n\n\t\t\tcontroller.infoUpdate(idProp, id, d.owner, t, val);\n\t\t}\n\n\t\tfunction viewerInviteAdded(e)\n\t\t{\n\t\t\t//dbg('InviteAdded', e.detail);\n\t\t\te.detail.data = undefined;\n\t\t\tcontroller.notify(m.InviteAdded, e.detail);\n\t\t}\n\n\t\tfunction viewerInviteRemoved(e)\n\t\t{\n\t\t\t//dbg('InviteRemoved', e.detail);\n\t\t\te.detail.data = undefined;\n\t\t\tcontroller.notify(m.InviteRemoved, e.detail);\n\t\t}\n\n\t\tfunction viewerInviteClicked(e)\n\t\t{\n\t\t\t//dbg('InviteClicked', e.detail);\n\t\t\te.detail.data = undefined;\n\t\t\tcontroller.notify(m.InviteClicked, e.detail);\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////////\n\t\t// INTERNAL\n\t\t///////////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction notifyExpired(idInvite, owner)\n\t\t{\n\t\t\tif (timerEnd)\n\t\t\t{\n\t\t\t\tclearTimeout(timerEnd);\n\t\t\t\ttimerEnd = 0;\n\t\t\t}\n\n\t\t\tvar t = new Date().getTime();\n\t\t\tvar stateExpired = s.Expired.toLowerCase();\n\t\t\tvar prop = props[idInvite];\n\t\t\tvar endTime = prop[s.InviteEnd].v;\n\t\t\tvar propExpired = prop[stateExpired];\n\t\t\tvar expired = (t >= endTime);\n\n\t\t\tif (!propExpired)\n\t\t\t{\n\t\t\t\tpropExpired = { t: t, v: expired };\n\t\t\t\tprop[stateExpired] = propExpired;\n\t\t\t}\n\n\t\t\tpropExpired.v = expired;\n\n\t\t\t// One last check\n\t\t\tif (!expired)\n\t\t\t{\n\t\t\t\ttimerEnd = setTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tnotifyExpired(idInvite, owner);\n\t\t\t\t}\n\t\t\t\t, (endTime - t + 1000));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.infoUpdate(s.Expired, idInvite, owner, t, expired);\n\t\t}\n\t}\n\n\tMapController.GetInviteProperties = 'getInviteProperties';\n\tMapController.GetInviteProperty = 'getInviteProperty';\n\n\n\tmodule.exports = MapController;\n});\n\n","define('glympse-adapter/lib/rafUtils',['require','exports','module'],function(require, exports, module)\n{\n\tvar w = window;\n\tvar initted = false;\n\n\t//(function(w)\n\t//{\n\t/**\n\t * Emulate window.setInterval via RAF, if available. Polyfills to\n\t * regular window.setInterval if RAF is not available. Assumes RAF\n\t * has already been polyfilled as necessary.\n\t * @param   {function} fn    Callback with time interval is complete\n\t * @param   {number}   delay Delay, in milliseconds\n\t * @returns {object}   Timeout handle\n\t */\n\tfunction rafSetInterval(fn, delay, handle)\n\t{\n\t\tif (!initted)\n\t\t{\n\t\t\tinitted = true;\n\t\t\tvar syncRaf = (glympse && glympse.lib && glympse.lib.syncRAF);\n\t\t\tif (syncRaf)\n\t\t\t{\n\t\t\t\tsyncRaf();\n\t\t\t}\n\t\t}\n\n\t\tvar raf = w.requestAnimationFrame;\n\t\tif (!raf || !w.cancelAnimationFrame)\n\t\t{\n\t\t\treturn w.setInterval(fn, delay);\n\t\t}\n\n\t\tvar start = delay + new Date().getTime();\n\t\thandle = handle || {};\t// Update previous reference\n\n\t\tfunction run()\n\t\t{\n\t\t\tif (start <= new Date().getTime())\n\t\t\t{\n\t\t\t\tfn.call();\n\t\t\t\trafSetInterval(fn, delay, handle);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thandle.raf = raf(run);\n\t\t}\n\n\t\thandle.raf = raf(run);\n\t\treturn handle;\n\t}\n\n\t/**\n\t * Emulate window.clearInterval via RAF, if available. Polyfills to\n\t * default window.clearInterval if RAF is not available. Assumes RAF has\n\t * already been polyfilled as necessary.\n\t * @param {object} handle Handle returned from window.rafInterval\n\t */\n\t//w.clearRafInterval = function(handle)\n\tfunction rafClearInterval(handle)\n\t{\n\t\tif (handle && handle.raf)\n\t\t{\n\t\t\tw.cancelAnimationFrame(handle.raf);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tw.clearInterval(handle);\n\t\t}\n\t}\n\n\tmodule.exports = { setInterval: rafSetInterval,\n\t\t\t\t\t   clearInterval: rafClearInterval\n\t\t\t\t\t };\n});\n\n","///////////////////////////////////////////////////////////////////////////////\n// AJAX requests utilities\n///////////////////////////////////////////////////////////////////////////////\n\ndefine('glympse-adapter/lib/ajax',['require','exports','module','glympse-adapter/lib/utils'],function(require, exports, module)\n{\n\t'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\n\tvar MAX_ATTEMPTS = 3;\n\tvar DEFAULT_OPTIONS = {\n\t\tALL: {\n\t\t\tdataType: 'json'\n\t\t},\n\n\t\tPOST: {\n\t\t\tcontentType: 'application/json'\n\t\t}\n\t};\n\n\tfunction parseResponse(data) {\n\t\tvar result = null;\n\n\t\tif (data && data.response)\n\t\t{\n\t\t\tresult = {\n\t\t\t\tstatus: false,\n\t\t\t\tresponse: {}\n\t\t\t};\n\t\t\tif (data.result === 'ok')\n\t\t\t{\n\t\t\t\tresult.status = true;\n\t\t\t\tresult.response = data.response;\n\t\t\t\tresult.time = data.meta && data.meta.time;\n\t\t\t}\n\n\t\t\tif (data.result === 'failure')\n\t\t\t{\n\t\t\t\tvar meta = data.meta || {};\n\n\t\t\t\tresult.response = meta;\n\t\t\t\t// check if we need them, left for now for backward compatibility\n\t\t\t\tresult.error = meta.error;\n\t\t\t\tresult.errorDetail = meta.error_detail;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfunction processResponse(account)\n\t{\n\t\tvar that = this;\n\n\t\treturn function(data)\n\t\t{\n\t\t\t// arguments\n\t\t\t// data|jqXHR, textStatus, jqXHR|errorThrown\n\n\t\t\tthat.attempts--;\n\n\t\t\tvar result = parseResponse(data);\n\n\t\t\tif (result)\n\t\t\t{\n\t\t\t\t// in case of token error try to get new token & re-run action\n\t\t\t\tif (result.error === 'oauth_token')\n\t\t\t\t{\n\t\t\t\t\tif (account) {\n\t\t\t\t\t\taccount.generateToken(function(authResult) {\n\t\t\t\t\t\t\tif (authResult.status)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (that.retry)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthat.retry();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresult.authResult = authResult;\n\n\t\t\t\t\t\t\t\tthat.request.resolve(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// should never happen\n\t\t\t\t\t\tconsole.warn('[ajax] invalid token for not authorized request!');\n\t\t\t\t\t\tresult.invalidToken = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthat.request.resolve(result);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult = {\n\t\t\t\tstatus: false\n\t\t\t};\n\n\t\t\tif (that.retry && that.attempts > 0)\n\t\t\t{\n\t\t\t\tvar attempt = (MAX_ATTEMPTS - that.attempts);\n\t\t\t\tsetTimeout(\n\t\t\t\t\tfunction()\n\t\t\t\t\t{\n\t\t\t\t\t\tthat.retry();\n\t\t\t\t\t},\n\t\t\t\t\t// Incremental + random offset delay between retry in case of short availability outage\n\t\t\t\t\t(attempt * (500 + Math.round(1000 * Math.random())))\n\t\t\t\t);\n\n\t\t\t\tresult.info = { attempt: attempt, result: data };\n\n\t\t\t\tthat.request.notify(result);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.info = { status: 'max_attempts', lastResult: data };\n\n\t\t\tthat.request.resolve(result);\n\t\t};\n\t}\n\n\tvar api = {\n\t\t/**\n\t\t * @function ajax.makeRequest\n\t\t *\n\t\t * @param {object} jqOptions - options for jQuery ajax method\n\t\t * @param {object} [auth|account] - authorization data (required for auth requests):\n\t\t * \t\t\t\t\t\t\t\t\tcan be either auth object (documented below) or account instance\n\t\t *\n\t\t * @param {object} [auth.account] - account instance\n\t\t * @param {boolean} [auth.useBearer] - if should use bearer auth header instead of url param (default: true)\n\t\t * @param {boolean} [retryOnError] - if should re-try on temporary server errors (default: true)\n\t\t *\n\t\t * @returns {$.Deferred}\n\t\t */\n\t\tmakeRequest: function makeRequest(jqOptions, auth, retryOnError)\n\t\t{\n\t\t\tvar options = $.extend(\n\t\t\t\t{},\n\t\t\t\tDEFAULT_OPTIONS.ALL,\n\t\t\t\tjqOptions\n\t\t\t);\n\t\t\tvar account;\n\t\t\tif (auth)\n\t\t\t{\n\t\t\t\tvar useBearer = true;\n\t\t\t\tif (auth.account)\n\t\t\t\t{\n\t\t\t\t\taccount = auth.account;\n\t\t\t\t\tuseBearer = (auth.useBearer !== false);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\taccount = auth;\n\t\t\t\t}\n\t\t\t\tif (useBearer)\n\t\t\t\t{\n\t\t\t\t\toptions.beforeSend = function(request)\n\t\t\t\t\t{\n\t\t\t\t\t\trequest.setRequestHeader('Authorization', 'Bearer ' + account.getToken());\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toptions.url += ((options.url.indexOf('?') < 0) ? '?' : '&') + 'oauth_token=' + account.getToken();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar context = {\n\t\t\t\trequest: $.Deferred(),\n\t\t\t\tattempts: ((retryOnError === false) ? 1 : MAX_ATTEMPTS),\n\t\t\t\tretry: function()\n\t\t\t\t{\n\t\t\t\t\t// console.debug('[ajax] retry', options);\n\t\t\t\t\t$.ajax(options).always(processResponse.call(context, account));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$.ajax(options).always(processResponse.call(context, account));\n\n\t\t\treturn context.request;\n\t\t},\n\n\t\t/**\n\t\t * @function ajax.get\n\t\t */\n\t\tget: function reqGet(url, data, auth, jqOptions, retryOnError)\n\t\t{\n\t\t\tvar options = $.extend(\n\t\t\t\t{\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: data\n\t\t\t\t},\n\t\t\t\tjqOptions\n\t\t\t);\n\t\t\treturn api.makeRequest(options, auth, retryOnError);\n\t\t},\n\n\t\t/**\n\t\t * @function ajax.post\n\t\t */\n\t\tpost: function reqPost(url, data, auth, jqOptions, retryOnError)\n\t\t{\n\t\t\tvar options = $.extend(\n\t\t\t\t{\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'POST'\n\t\t\t\t},\n\t\t\t\tDEFAULT_OPTIONS.POST,\n\t\t\t\tjqOptions\n\t\t\t);\n\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tif (options.contentType === 'application/json')\n\t\t\t\t{\n\t\t\t\t\tdata = JSON.stringify(data);\n\t\t\t\t}\n\t\t\t\toptions.data = data;\n\t\t\t}\n\n\t\t\treturn api.makeRequest(options, auth, retryOnError);\n\t\t},\n\n\t\t/**\n\t\t * @function ajax.delete\n\t\t */\n\t\tdelete: function reqDelete(url, auth, jqOptions, retryOnError)\n\t\t{\n\t\t\tvar options = $.extend(\n\t\t\t\t{\n\t\t\t\t\turl: url,\n\t\t\t\t\ttype: 'DELETE'\n\t\t\t\t},\n\t\t\t\tDEFAULT_OPTIONS.POST,\n\t\t\t\tjqOptions\n\t\t\t);\n\t\t\treturn api.makeRequest(options, auth, retryOnError);\n\t\t},\n\n\t\t/**\n\t\t * @function ajax.batch\n\t\t */\n\t\tbatch: function reqBatch(batchEndpoint, batchRequests, auth, jqOptions, retryOnError)\n\t\t{\n\t\t\treturn api.post(batchEndpoint, batchRequests, auth, jqOptions, retryOnError)\n\t\t\t\t.then(function(batchResponse) {\n\t\t\t\t\tvar responses = [], i, len, response;\n\t\t\t\t\tif (batchResponse.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar results = batchResponse.response.items || [];\n\t\t\t\t\t\tfor (i = 0, len = results.length; i < len; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresponse = parseResponse(results[i].body);\n\t\t\t\t\t\t\tresponse.time = batchResponse.time;\n\n\t\t\t\t\t\t\tresponses.push({\n\t\t\t\t\t\t\t\tname: results[i].name,\n\t\t\t\t\t\t\t\tresult: response\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (i = 0, len = batchRequests.length; i < len; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar req = batchRequests[i];\n\t\t\t\t\t\t\tresponses.push({\n\t\t\t\t\t\t\t\tname: req.name,\n\t\t\t\t\t\t\t\tresult: batchResponse\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn responses;\n\t\t\t\t});\n\t\t}\n\n\t};\n\n\tmodule.exports = api;\n\n});\n\n","///////////////////////////////////////////////////////////////////////////////\n// Image processing utilities\n///////////////////////////////////////////////////////////////////////////////\n\ndefine('glympse-adapter/lib/image',['require','exports','module'],function(require, exports, module)\n{\n\tfunction getImageType(arrayBuffer)\n\t{\n\t\tvar type = '';\n\t\tvar dv = new DataView(arrayBuffer, 0, 5);\n\t\tvar nume1 = dv.getUint8(0, true);\n\t\tvar nume2 = dv.getUint8(1, true);\n\t\tvar hex = nume1.toString(16) + nume2.toString(16);\n\n\t\tswitch (hex)\n\t\t{\n\t\t\tcase '8950':\n\t\t\t{\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '4749':\n\t\t\t{\n\t\t\t\ttype = 'image/gif';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '424d':\n\t\t\t{\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ffd8':\n\t\t\t{\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\ttype = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn type;\n\t}\n\n\tvar imageProcessing = {\n\t\timageScale: function(imgData, config, callback)\n\t\t{\n\t\t\t//create a canvas\n\t\t\tthis.imageInfo(imgData, gettingImageInfoCallback);\n\n\t\t\tfunction gettingImageInfoCallback(image)\n\t\t\t{\n\t\t\t\tvar width = image.width;\n\t\t\t\tvar height = image.height;\n\n\t\t\t\tvar startX = 0, startY = 0,\n\t\t\t\t\tscaleX, scaleY,\n\t\t\t\t\tresultImageWidth, resultImageHeight;\n\t\t\t\tvar persistRatio = config.maintainAspectRatio;\n\n\t\t\t\tvar scaleSize = [width, height];\n\n\t\t\t\tif (scaleSize[0] >= scaleSize[1])\n\t\t\t\t{\n\t\t\t\t\tif (scaleSize[0] > config.maxSize[0])\n\t\t\t\t\t{\n\t\t\t\t\t\tscaleSize[0] = config.maxSize[0];\n\t\t\t\t\t\tscaleSize[1] = height * config.maxSize[0] / width;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scaleSize[0] < config.minSize[0])\n\t\t\t\t\t{\n\t\t\t\t\t\tscaleSize[0] = config.minSize[0];\n\t\t\t\t\t\tscaleSize[1] = height * config.minSize[0] / width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (scaleSize[1] > config.maxSize[1])\n\t\t\t\t\t{\n\t\t\t\t\t\tscaleSize[0] = width * config.maxSize[1] / height;\n\t\t\t\t\t\tscaleSize[1] = config.maxSize[1];\n\t\t\t\t\t}\n\t\t\t\t\tif (scaleSize[1] < config.minSize[1])\n\t\t\t\t\t{\n\t\t\t\t\t\tscaleSize[0] = width * config.minSize[1] / height;\n\t\t\t\t\t\tscaleSize[1] = config.minSize[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//we need to get square image\n\t\t\t\tif (scaleSize[0] !== scaleSize[1])\n\t\t\t\t{\n\t\t\t\t\tscaleSize[0] = Math.max(scaleSize[0], scaleSize[1]);\n\t\t\t\t\tscaleSize[1] = Math.max(scaleSize[0], scaleSize[1]);\n\t\t\t\t}\n\n\t\t\t\tvar canvas = document.createElement('canvas');\n\n\t\t\t\tcanvas.id = 'glympse-adapter-image-processing';\n\n\t\t\t\tcanvas.width = scaleSize[0];\n\t\t\t\tcanvas.height = scaleSize[1];\n\n\t\t\t\t//uncomment it for debugging\n\t\t\t\t//canvas.style = 'position:fixed; top:0; left:0';\n\n\t\t\t\tdocument.body.appendChild(canvas);\n\n\t\t\t\tvar context = canvas.getContext('2d');\n\t\t\t\t//fill alpha with convertAlpha color\n\t\t\t\tcontext.fillStyle = config.convertAlpha || '#FFFFFF';\n\t\t\t\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t\t\tscaleX = width / scaleSize[0];\n\t\t\t\tscaleY = height / scaleSize[1];\n\n\t\t\t\tif (persistRatio)\n\t\t\t\t{\n\t\t\t\t\tscaleX = Math.max(scaleX, scaleY);\n\t\t\t\t\tscaleY = Math.max(scaleX, scaleY);\n\t\t\t\t}\n\n\t\t\t\tresultImageWidth = width / scaleX;\n\t\t\t\tresultImageHeight = height / scaleY;\n\t\t\t\tstartX = (canvas.width - resultImageWidth) / 2;\n\t\t\t\tstartY = (canvas.height - resultImageHeight) / 2;\n\n\t\t\t\t//fill spaces during scale\n\t\t\t\tcontext.fillStyle = config.sidebandFill || '#FFFFFF';\n\t\t\t\tcontext.fillRect(0, 0, startX, canvas.height);\n\t\t\t\tcontext.fillRect(startX + resultImageWidth, 0, canvas.width, canvas.height);\n\t\t\t\tcontext.fillRect(0, 0, canvas.width, startY);\n\t\t\t\tcontext.fillRect(0, startY + resultImageHeight, canvas.width, canvas.height);\n\n\t\t\t\tcontext.drawImage(image.img, startX, startY, resultImageWidth, resultImageHeight);\n\n\t\t\t\tvar dataURI = canvas.toDataURL('image/jpeg');\n\n\t\t\t\tvar byteString = atob(dataURI.split(',')[1]);\n\n\t\t\t\t// write the bytes of the string to an ArrayBuffer\n\t\t\t\tvar ab = new ArrayBuffer(byteString.length);\n\t\t\t\tvar ia = new Uint8Array(ab);\n\t\t\t\tfor (var i = 0; i < byteString.length; i++)\n\t\t\t\t{\n\t\t\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t\t\t}\n\n\t\t\t\tcallback(ab);\n\t\t\t\tcanvas.remove();\n\t\t\t}\n\t\t},\n\t\timageInfo: function(imgData, callback)\n\t\t{\n\t\t\tvar blob = new Blob([imgData], { type: 'image/jpeg' });\n\n\t\t\tvar urlCreator = window.URL || window.webkitURL;\n\t\t\tvar imageUrl = urlCreator.createObjectURL(blob);\n\n\t\t\tvar img = new Image();\n\t\t\timg.src = imageUrl;\n\n\t\t\timg.onload = function()\n\t\t\t{\n\t\t\t\tcallback({\n\t\t\t\t\twidth: $(img).width(),\n\t\t\t\t\theight: $(img).height(),\n\t\t\t\t\ttype: getImageType(imgData),\n\t\t\t\t\timg: img\n\t\t\t\t});\n\t\t\t\timg.remove();\n\t\t\t};\n\n\t\t\timg.onerror = function()\n\t\t\t{\n\t\t\t\t//cannot load image from array buffer\n\t\t\t\timg.remove();\n\t\t\t};\n\n\t\t\tdocument.body.appendChild(img);\n\t\t},\n\n\t\tloadDataArrayByUrl: function(url, callback)\n\t\t{\n\t\t\tvar that = this;\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.responseType = 'arraybuffer';\n\t\t\txhr.setRequestHeader('x-force-header', 'true');\n\n\t\t\txhr.onload = function()\n\t\t\t{\n\t\t\t\tvar arrayBuffer = xhr.response;\n\t\t\t\tif (arrayBuffer) {\n\t\t\t\t\tcallback(arrayBuffer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.onerror = function(error)\n\t\t\t{\n\t\t\t\tvar result = {\n\t\t\t\t\tstatus: false,\n\t\t\t\t\terrorDetail: 'Could not load image by url',\n\t\t\t\t\tresponse: error\n\t\t\t\t};\n\t\t\t\tcallback(null, result);\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t}\n\t};\n\n\tmodule.exports = imageProcessing;\n});\n\n","define('glympse-adapter/adapter/models/Account',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/lib/ajax','glympse-adapter/GlympseAdapterDefines','glympse-adapter/lib/image'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar ajax = require('glympse-adapter/lib/ajax');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar imageProcessing = require('glympse-adapter/lib/image');\n\n\tvar m = Defines.MSG;\n\tvar REQUEST_TYPES = Defines.CARDS.REQUEST_TYPES;\n\n\tvar cAcctTokenName = 't0';\n\tvar cAccountInfo = 'accountInfo';\n\tvar cApiKey = 'api_key';\n\tvar cPassword = 'p0';\n\tvar cUserName = 'n0';\n\tvar cSvcPassword = 'password';\n\tvar cSvcUserName = 'username';\n\tvar cEnvProduction = 'EnvProd';\n\tvar cEnvSandbox = 'EnvSandbox';\n\n\tvar anonymousUserName = 'viewer';\n\tvar anonymousPassword = 'password';\n\n\t// Exported class\n\tfunction Account(controller, cfg)\n\t{\n\t\t// consts\n\t\tvar dbg = lib.dbg('Account', cfg.dbg);\n\n\t\tvar svr = cfg.svcGlympse;\n\t\tvar sandbox = cfg.sandbox;\n\t\tvar idEnvironment = (sandbox) ? Account[cEnvSandbox] : Account[cEnvProduction];\n\n\t\tvar account = {};\n\n\t\tvar apiKey = cfg.apiKey;\n\n\t\tvar urlCreate = (svr + 'account/create');\n\t\tvar urlLogin = (svr + 'account/login');\n\n\t\t// state\n\t\tvar isAnon = cfg.isAnon;\n\t\tvar token;\n\n\t\tvar settings;\n\t\tvar currentEnvKeys;\n\t\tvar currentKeySettings;\n\n\t\tvar that = this;\n\n\t\tvar gettingTokenProcess = null;\n\n\t\taccount[cApiKey] = apiKey;\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.getToken = function()\n\t\t{\n\t\t\treturn token;\n\t\t};\n\n\t\tthis.getId = function()\n\t\t{\n\t\t\treturn account[cSvcUserName];\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.init = function()\n\t\t{\n\t\t\tgetSettings();\n\n\t\t\t// If not anonymous, add saved username/password to token request\n\t\t\tif (!isAnon)\n\t\t\t{\n\t\t\t\tvar u = currentKeySettings[cUserName];\n\t\t\t\tvar p = currentKeySettings[cPassword];\n\n\t\t\t\tif (!u || !p)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.AccountLoginStatus, {\n\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\terror: 'no_account',\n\t\t\t\t\t\terrorDetail: 'No account exists for the current apiKey.'\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\taccount[cSvcUserName] = u;\n\t\t\t\taccount[cSvcPassword] = p;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taccount[cSvcUserName] = anonymousUserName;\n\t\t\t\taccount[cSvcPassword] = anonymousPassword;\n\t\t\t}\n\n\t\t\t// check for token after checking for user/password as they are required for getting new token (after expiration or smth)\n\t\t\ttoken = currentKeySettings[cAcctTokenName];\n\t\t\tif (token)\n\t\t\t{\n\t\t\t\t// validate token before sending init event\n\t\t\t\tif (!isAnon)\n\t\t\t\t{\n\t\t\t\t\tgetUserInfo(null, true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontroller.notify(m.AccountLoginStatus, {\n\t\t\t\t\t\tstatus: true,\n\t\t\t\t\t\ttoken: token,\n\t\t\t\t\t\tanonymous: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tgetNewToken();\n\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.generateToken = function(callback)\n\t\t{\n\t\t\ttoken = null;\n\t\t\tgetNewToken(callback);\n\t\t};\n\n\t\tthis.create = function()\n\t\t{\n\t\t\tif (!isAnon)\n\t\t\t{\n\t\t\t\tcreateAccount();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdbg('Creating account failed, no API key available');\n\t\t\t}\n\t\t};\n\n\t\tthis.setName = function(newName)\n\t\t{\n\t\t\tvar apiUrl = (svr + 'users/self/update');\n\n\t\t\tajax.get(apiUrl, { name: newName }, that)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.UserNameUpdateStatus, result);\n\t\t\t\t});\n\t\t};\n\n\t\tthis.setAvatar = function(urlOrAvatarDataArray)\n\t\t{\n\t\t\tvar that = this;\n\t\t\tvar avatarCfg = cfg.avatar || {};\n\n\t\t\tif (typeof urlOrAvatarDataArray === 'string')\n\t\t\t{\n\t\t\t\timageProcessing.loadDataArrayByUrl(urlOrAvatarDataArray, loadImageCallback);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar imageScaleConfig = {\n\t\t\t\tminSize: [\n\t\t\t\t\tavatarCfg.minSize || 120,\n\t\t\t\t\tavatarCfg.minSize || 120\n\t\t\t\t],\n\t\t\t\tmaxSize: [\n\t\t\t\t\tavatarCfg.maxSize || 512,\n\t\t\t\t\tavatarCfg.maxSize || 512\n\t\t\t\t],\n\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\tsidebandFill: '#fff',\n\t\t\t\tconvertAlpha: '#fff'\n\t\t\t};\n\n\t\t\timageProcessing.imageScale(urlOrAvatarDataArray, imageScaleConfig, imageScaleCallback);\n\n\t\t\tfunction loadImageCallback(dataArray, error)\n\t\t\t{\n\t\t\t\tif (dataArray)\n\t\t\t\t{\n\t\t\t\t\tthat.setAvatar(dataArray);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.UserAvatarUpdateStatus, error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction imageScaleCallback(dataArray)\n\t\t\t{\n\t\t\t\tvar apiUrl = (svr + 'users/self/upload_avatar');\n\n\t\t\t\tajax.post(apiUrl, new Uint8Array(dataArray), that, {\n\t\t\t\t\tcontentType: 'image/jpeg',\n\t\t\t\t\tprocessData: false\n\t\t\t\t})\n\t\t\t\t\t.then(function(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.notify(m.UserAvatarUpdateStatus, result);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.getUserInfo = getUserInfo;\n\n\t\tthis.hasAccount = function()\n\t\t{\n\t\t\tgetSettings();\n\n\t\t\treturn !!(!isAnon && currentKeySettings[cUserName] && currentKeySettings[cPassword]);\n\t\t};\n\n\t\t/**\n\t\t * Allow logged in user to generate a sharing request.\n\t\t * @param {Object} config endpoint options\n\t\t * request_params format:\n\t\t * {\n         *  type: string,     // Type of request -- email|sms|link|account|app ---> only accepts/uses \"link\" for now\n         *  subtype: string,  // [OPTIONAL] Subtype of \"app\" types (50 char max) --> unused for now\n         *  address: string,  // [OPTIONAL] Address of recipient for some types of requests (256 char max) --> unused for now\n         *  name: string,     // [OPTIONAL] A friendly display name to be associated with the requestee. (150 char max)\n         *  text: string,     // [OPTIONAL] Message to send --> unused for now\n         *  send: string,     // [OPTIONAL] Values server|client --> unused for now\n         *  locale: string,   // [OPTIONAL] Locale for localized resources --> unused for now\n         *  brand: string,    // [OPTIONAL] Defines any sub-brand customization for the invite --> unused for now\n         * }\n\t\t */\n\t\tthis.createRequest = function(config)\n\t\t{\n\t\t\tif (!config || !config.type || config.type !== REQUEST_TYPES.LINK)\n\t\t\t{\n\t\t\t\tvar error = '\"type\" must be provided (NOTE: only Defines.CARDS.REQUEST_TYPES.LINK type is supported for now)';\n\n\t\t\t\tdbg(error, config, 3);\n\n\t\t\t\tcontroller.notify(m.CreateRequestStatus, {\n\t\t\t\t\tstatus: false,\n\t\t\t\t\tresponse: { error: error }\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar url = svr + 'users/self/create_request?' + $.param(config);\n\n\t\t\tajax.post(url, null, that)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CreateRequestStatus, result);\n\t\t\t\t});\n\t\t};\n\n\t\tthis.delete = function()\n\t\t{\n\t\t\t//delete all storages for this account\n\t\t\tdeleteSettings();\n\n\t\t\tcontroller.notify(m.AccountDeleteStatus, { status: true });\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction saveSettings()\n\t\t{\n\t\t\tcurrentEnvKeys[apiKey] = currentKeySettings;\n\t\t\tsettings[idEnvironment] = currentEnvKeys;\n\t\t\tlib.setCfgVal(cAccountInfo, settings);\n\t\t}\n\n\t\tfunction getSettings()\n\t\t{\n\t\t\tsettings = lib.getCfgVal(cAccountInfo) || {};\n\t\t\tcurrentEnvKeys = settings[idEnvironment] || {};\n\t\t\tcurrentKeySettings = currentEnvKeys[apiKey] || {};\n\t\t}\n\n\t\tfunction deleteSettings()\n\t\t{\n\t\t\tgetSettings();\n\t\t\tcurrentKeySettings = {};\n\t\t\tsaveSettings();\n\t\t}\n\n\t\tfunction getNewToken(callback)\n\t\t{\n\t\t\t// do not allow multiple log-ins at the same time\n\t\t\tif (!gettingTokenProcess)\n\t\t\t{\n\t\t\t\tgettingTokenProcess = ajax.get(urlLogin, account)\n\t\t\t\t\t.then(function(result)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result.status)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttoken = result.response.access_token;\n\t\t\t\t\t\t\tcurrentKeySettings[cAcctTokenName] = token;\n\t\t\t\t\t\t\tsaveSettings();\n\n\t\t\t\t\t\t\t//dbg('>> new token: ' + token);\n\n\t\t\t\t\t\t\tresult.id = account[cSvcUserName];\n\t\t\t\t\t\t\tresult.token = token;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.notify(m.AccountLoginStatus, result);\n\n\t\t\t\t\t\tgettingTokenProcess = null;\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tgettingTokenProcess.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcallback(result);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction getUserInfo(userId, checkToken)\n\t\t{\n\t\t\tvar apiUrl = svr + 'users/' + (userId || 'self');\n\n\t\t\tajax.get(apiUrl, null, that)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\t// can be useful for properly filtering events on consumer side\n\t\t\t\t\t\tresult.response.userId = userId;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (checkToken)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.notify(m.AccountLoginStatus, {\n\t\t\t\t\t\t\tstatus: true,\n\t\t\t\t\t\t\ttoken: token,\n\t\t\t\t\t\t\tid: currentKeySettings[cUserName]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.notify(m.UserInfoStatus, result);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tfunction createAccount()\n\t\t{\n\t\t\tvar opts = {};\n\n\t\t\topts[cApiKey] = account[cApiKey];\n\n\t\t\tajax.get(urlCreate, opts)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar resp = result.response;\n\n\t\t\t\t\t\tvar id = resp.id;\n\t\t\t\t\t\tvar pw = resp.password;\n\n\t\t\t\t\t\taccount[cSvcUserName] = id;\n\t\t\t\t\t\taccount[cSvcPassword] = pw;\n\n\t\t\t\t\t\tcurrentKeySettings[cUserName] = id;\n\t\t\t\t\t\tcurrentKeySettings[cPassword] = pw;\n\n\t\t\t\t\t\tsaveSettings();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.notify(m.AccountCreateStatus, result);\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// Account defines\n\n\t// Environment\n\tAccount[cEnvProduction] = 'prod';\n\tAccount[cEnvSandbox] = 'sbox';\n\n\n\tmodule.exports = Account;\n});\n\n","define('glympse-adapter/adapter/models/MemberInvite',['require','exports','module','glympse-adapter/lib/utils'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\n\n\t// Exported class\n\tfunction MemberInvite(data, cfg)\n\t{\n\t\t// state\n\n\t\t// consts\n\t\tvar dbg = lib.dbg('MemberInvite', cfg.dbg);\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [ 'locale'\n\t\t\t\t\t, 'type'\n\t\t\t\t\t, 'send'\n\t\t\t\t\t, 'invite_code'\n\t\t\t\t\t, 'address'\n\t\t\t\t\t];\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\tdata = val;\n\t\t\tlib.mapProps(this, props, data);\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.setData(data);\n\t}\n\n\t// MemberInvite defines\n\n\n\tmodule.exports = MemberInvite;\n});\n\n","define('glympse-adapter/adapter/models/MemberPermissions',['require','exports','module','glympse-adapter/lib/utils'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\n\n\t// Exported class\n\tfunction MemberPermissions(data, cfg)\n\t{\n\t\t// state\n\n\t\t// consts\n\t\tvar dbg = lib.dbg('MemberTicket', cfg.dbg);\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [\n\t\t\t\t\t];\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\tdata = val;\n\t\t\tlib.mapProps(this, props, data);\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.setData(data);\n\t}\n\n\t// MemberPermissions defines\n\n\n\tmodule.exports = MemberPermissions;\n});\n\n","define('glympse-adapter/adapter/models/MemberTicket',['require','exports','module','glympse-adapter/lib/utils'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\n\n\t// Exported class\n\tfunction MemberTicket(data, cfg)\n\t{\n\t\t// state\n\n\t\t// consts\n\t\tvar dbg = lib.dbg('MemberTicket', cfg.dbg);\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [ 'invite_code'\n\t\t\t\t\t, 'ticket_id'\n\t\t\t\t\t, 'created_time'\n\t\t\t\t\t];\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\tdata = val;\n\t\t\tlib.mapProps(this, props, data);\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.setData(data);\n\t}\n\n\t// MemberTicket defines\n\n\n\tmodule.exports = MemberTicket;\n});\n\n","define('glympse-adapter/adapter/models/Member',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/adapter/models/MemberInvite','glympse-adapter/adapter/models/MemberPermissions','glympse-adapter/adapter/models/MemberTicket'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar MemberInvite = require('glympse-adapter/adapter/models/MemberInvite');\n\tvar MemberPermissions = require('glympse-adapter/adapter/models/MemberPermissions');\n\tvar MemberTicket = require('glympse-adapter/adapter/models/MemberTicket');\n\n\n\t// Exported class\n\tfunction Member(data, cfg)\n\t{\n\t\t// state\n\t\tvar invite;\n\t\tvar permissions;\n\t\tvar ticket;\n\n\t\t// consts\n\t\tvar dbg = lib.dbg('Member', cfg.dbg);\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [ 'status'\n\t\t\t\t\t, 'card_id'\n\t\t\t\t\t, 'alias'\n\t\t\t\t\t, 'last_modified'\n\t\t\t\t\t, 'created_time'\n\t\t\t\t\t, 'id'\n\t\t\t\t\t, 'user_id'\n\t\t\t\t\t, 'inviter'\n\t\t\t\t\t];\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.getInvite = function()\n\t\t{\n\t\t\treturn invite;\n\t\t};\n\n\t\tthis.getPermissions = function()\n\t\t{\n\t\t\treturn permissions;\n\t\t};\n\n\t\tthis.getTicket = function()\n\t\t{\n\t\t\treturn ticket;\n\t\t};\n\n\t\tthis.getMetaData = function()\n\t\t{\n\t\t\treturn data.metadata;\n\t\t};\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\t$.extend(data, val);\n\n\t\t\tlib.mapProps(this, props, data);\n\n\t\t\t//invite = (data.invite) ? new MemberInvite(data.invite, cfg) : {};\n\t\t\t//ticket = (data.ticket) ? new MemberTicket(data.ticket, cfg) : {};\n\t\t\t//permissions = (data.permissions) ? new MemberPermissions(data.permissions, cfg) : {};\n\t\t\tif (data.invite)\n\t\t\t{\n\t\t\t\tinvite = new MemberInvite(data.invite, cfg);\n\t\t\t}\n\n\t\t\tif (data.ticket)\n\t\t\t{\n\t\t\t\tticket = new MemberTicket(data.ticket, cfg);\n\t\t\t}\n\n\t\t\tif (data.permissions)\n\t\t\t{\n\t\t\t\tpermissions = new MemberPermissions(data.permissions, cfg);\n\t\t\t}\n\t\t};\n\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.setData(data);\n\t}\n\n\t// Member defines\n\n\n\tmodule.exports = Member;\n});\n\n","define('glympse-adapter/adapter/models/Card',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/lib/ajax','glympse-adapter/adapter/models/Member','glympse-adapter/GlympseAdapterDefines'],function(require, exports, module)\n{\n\t'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar ajax = require('glympse-adapter/lib/ajax');\n\tvar Member = require('glympse-adapter/adapter/models/Member');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar m = Defines.MSG;\n\n\n\t// Exported class\n\tfunction Card(controller, idCard, account, cfg)\n\t{\n\t\tvar svr = cfg.svcGlympse;\n\n\t\t// state\n\t\tvar data;\n\t\tvar loaded = false;\n\t\t//members collection\n\t\tvar members = [];\n\t\tvar membersIndex = {};\n\t\t//inviteCodes collection\n\t\tvar inviteCodes = [];\n\t\tvar inviteCodesIndex = {};\n\t\t//card join invites collection\n\t\tvar joinInvites = [];\n\t\tvar joinInvitesIndex = {};\n\n\t\tvar that = this;\n\t\tvar lastUpdated;\n\n\t\t// constants\n\t\tvar dbg = lib.dbg('Card', cfg.dbg);\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [\n\t\t\t'name'\n\t\t\t, 'type_id'\n\t\t\t, 'last_modified'\n\t\t\t, 'created_time'\n\t\t\t, 'id'\n\t\t\t, 'metadata_etag'\n\t\t\t, 'inviter'\n\t\t\t, 'invitee'\n\t\t\t, 'details'\n\t\t];\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.getMembers = function()\n\t\t{\n\t\t\treturn members;\n\t\t};\n\n\t\tthis.getMemberById = function(id) {\n\t\t\treturn getMemberById(id);\n\t\t};\n\n\t\tthis.getMetaData = function()\n\t\t{\n\t\t\treturn data.metadata;\n\t\t};\n\n\t\tthis.isLoaded = function()\n\t\t{\n\t\t\treturn loaded;\n\t\t};\n\n\t\tthis.getIdCard = function()\n\t\t{\n\t\t\treturn idCard;\n\t\t};\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\tloaded = true;\n\n\t\t\tdata = val;\n\t\t\tlib.mapProps(this, props, data);\n\n\t\t\tvar mems = data.members || [];\n\t\t\tvar mem, member;\n\n\t\t\tfor (var i = 0, len = mems.length; i < len; i++)\n\t\t\t{\n\t\t\t\tmem = mems[i];\n\t\t\t\tmember = addMember(mem);\n\n\t\t\t\tcontroller.notify(m.CardUpdated, {\n\t\t\t\t\tcard: that,\n\t\t\t\t\taction: 'member_added',\n\t\t\t\t\tmember: member\n\t\t\t\t});\n\n\t\t\t\tvar addedInviteCode = checkMemberInviteCode(member);\n\n\t\t\t\tif (addedInviteCode)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardUpdated, {\n\t\t\t\t\t\tcard: that,\n\t\t\t\t\t\taction: 'invite_code_found',\n\t\t\t\t\t\tinvite: addedInviteCode\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdbg('Card \"' + this.getName() + '\" ready with ' + members.length + ' members');\n\t\t};\n\n\t\tthis.setDataFromStream = function(streamArray, time) {\n\t\t\tvar cardId = this.getIdCard();\n\t\t\tvar newMembers = [],\n\t\t\t\tnewJoinCardInvites = [],\n\t\t\t\tupdateResult,\n\t\t\t\taction,\n\t\t\t\tmember,\n\t\t\t\ti, len;\n\n\t\t\tvar mem, msg, members;\n\t\t\tvar cleanActions = {};\n\t\t\tvar cleanStream = [];\n\n\t\t\t// Loop through the updates, culling out entries where only the\n\t\t\t// latest update matters (i.e. ticket invites shared).\n\t\t\t// Hash on action, then members under the action\n\t\t\tfor (i = 0, len = streamArray.length; i < len; i++)\n\t\t\t{\n\t\t\t\taction = streamArray[i];\n\t\t\t\tvar actionType = action.type;\n\n\t\t\t\t// Pass anything that isn't a share for now\n\t\t\t\tif (actionType !== 'member_started_sharing')\n\t\t\t\t{\n\t\t\t\t\tcleanStream.push(action);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar ref = cleanActions[actionType];\n\t\t\t\tmem = action.data.member_id || action.member_id;\n\n\t\t\t\tif (!ref)\n\t\t\t\t{\n\t\t\t\t\tmembers = {};\n\t\t\t\t\tmembers[mem] = action;\n\t\t\t\t\tcleanActions[action.type] = members;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmsg = ref[mem];\n\t\t\t\t\tif (!msg)\n\t\t\t\t\t{\n\t\t\t\t\t\tref[mem] = action;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (msg.last_modified < action.last_modified)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tref[mem] = action;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Re-add the final pruned items\n\t\t\tfor (i in cleanActions)\n\t\t\t{\n\t\t\t\tmembers = cleanActions[i];\n\t\t\t\tfor (mem in members)\n\t\t\t\t{\n\t\t\t\t\tcleanStream.push(members[mem]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Finally, process the cleaned up actions\n\t\t\tfor (i = 0, len = cleanStream.length; i < len; i++)\n\t\t\t{\n\t\t\t\taction = cleanStream[i];\n\t\t\t\tupdateResult = {\n\t\t\t\t\tcard: this,\n\t\t\t\t\taction: action.type,\n\t\t\t\t\tt: time\n\t\t\t\t};\n\n\t\t\t\tswitch (action.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'member_added':\n\t\t\t\t\t\tnewMembers.push(action.data.member_id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'member_removed':\n\t\t\t\t\t\tmember = removeMemberById(action.data ? action.data.member_id : action.member_id);\n\t\t\t\t\t\tupdateResult.member = member;\n\t\t\t\t\t\tupdateResult.userId = action.data ? action.data.user_id : action.user_id;\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'invite_added':\n\t\t\t\t\t\tnewJoinCardInvites.push(action.data.invite_id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'invite_removed':\n\t\t\t\t\t\tupdateResult.invite = removeJoinInviteById(action.data.invite_id);\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'member_started_sharing':\n\t\t\t\t\t\tmember = getMemberById(action.member_id);\n\t\t\t\t\t\tif (!member)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmember = addMember($.extend({ id: action.member_id }, action.data));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//remove previous invite code if member was sharing lately\n\t\t\t\t\t\t\tremoveMemberInviteCode(member);\n\t\t\t\t\t\t\tmember.setData(action.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateResult.invite = checkMemberInviteCode(member);\n\t\t\t\t\t\tupdateResult.userId = action.user_id;\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'member_stopped_sharing':\n\t\t\t\t\t\tmember = getMemberById(action.member_id);\n\t\t\t\t\t\tupdateResult.invite = getMemberInviteCode(member);\n\t\t\t\t\t\tupdateResult.userId = action.user_id;\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'card_modified':\n\t\t\t\t\t\t//mark to update on next poll\n\t\t\t\t\t\tthis.dirty = true;\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tupdateResult.data = action;\n\t\t\t\t\t\tcontroller.notify(m.CardUpdated, updateResult);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar batchRequests = [];\n\n\t\t\tfor (i = 0, len = newMembers.length; i < len; i++)\n\t\t\t{\n\t\t\t\tbatchRequests.push({\n\t\t\t\t\tname: 'members',\n\t\t\t\t\turl: 'cards/' + cardId + '/members/' + newMembers[i],\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (i = 0, len = newJoinCardInvites.length; i < len; i++)\n\t\t\t{\n\t\t\t\tbatchRequests.push({\n\t\t\t\t\tname: 'invites',\n\t\t\t\t\turl: 'cards/' + cardId + '/invites/' + newJoinCardInvites[i],\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Batch request\n\t\t\tif (batchRequests.length) {\n\t\t\t\tajax.batch(svr + 'batch', batchRequests, account)\n\t\t\t\t\t.then(function(responses) {\n\t\t\t\t\t\tvar response;\n\t\t\t\t\t\tfor (i = 0, len = responses.length; i < len; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresponse = responses[i];\n\t\t\t\t\t\t\tswitch (response.name) {\n\t\t\t\t\t\t\t\tcase 'invites':\n\t\t\t\t\t\t\t\t\tprocessInviteResult(response.result);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'members':\n\t\t\t\t\t\t\t\t\tprocessMemberResult(response.result);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction processMemberResult(result)\n\t\t\t{\n\t\t\t\tvar newMember;\n\t\t\t\tif (result.status)\n\t\t\t\t{\n\t\t\t\t\tnewMember = getMemberById(result.response.id);\n\t\t\t\t\tif (newMember)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewMember.setData(result.response);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnewMember = addMember(result.response);\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.notify(m.CardUpdated, {\n\t\t\t\t\t\tcard: that,\n\t\t\t\t\t\taction: 'member_added',\n\t\t\t\t\t\tmember: newMember\n\t\t\t\t\t});\n\t\t\t\t\tcheckMemberInviteCode(newMember);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardUpdated, result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction processInviteResult(result)\n\t\t\t{\n\t\t\t\tvar newInvite;\n\t\t\t\tif (result.status)\n\t\t\t\t{\n\t\t\t\t\tnewInvite = addJoinInvite(result.response);\n\t\t\t\t\tupdateResult.invite = newInvite;\n\t\t\t\t\tcontroller.notify(m.CardUpdated, {\n\t\t\t\t\t\tcard: that,\n\t\t\t\t\t\taction: 'invite_added',\n\t\t\t\t\t\tinvite: newInvite\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardUpdated, result);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.getInvites = function()\n\t\t{\n\t\t\treturn inviteCodes;\n\t\t};\n\n\t\tthis.setLastUpdatingTime = function(time) {\n\t\t\tlastUpdated = time;\n\t\t};\n\n\t\tthis.getLastUpdatingTime = function() {\n\t\t\treturn lastUpdated;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction addMember(memberData) {\n\t\t\tvar member = new Member(memberData, cfg);\n\t\t\tmembersIndex[memberData.id] = members.length;\n\t\t\tmembers.push(member);\n\n\t\t\treturn member;\n\t\t}\n\n\t\tfunction getMemberById(id) {\n\t\t\tvar memberIndex = membersIndex[id];\n\t\t\treturn memberIndex >= 0 ? members[memberIndex] : null;\n\t\t}\n\n\t\tfunction removeMemberById(id) {\n\t\t\tvar memberIndex = membersIndex[id],\n\t\t\t\tremovedMember;\n\n\t\t\tif (typeof memberIndex === 'undefined')\n\t\t\t{\n\t\t\t\tdbg('!!! no member to delete', id, 3);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tdelete membersIndex[id];\n\t\t\tremovedMember = members.splice(memberIndex, 1)[0];\n\n\t\t\t// update index\n\t\t\tfor (var i = memberIndex, len = members.length; i < len; i++)\n\t\t\t{\n\t\t\t\tmembersIndex[members[i].getId()] = i;\n\t\t\t}\n\n\t\t\treturn removedMember || null;\n\t\t}\n\n\t\tfunction checkMemberInviteCode(member) {\n\t\t\tvar inviteCode = getMemberInviteCode(member);\n\n\t\t\tif (inviteCode && typeof inviteCodesIndex[inviteCode] === 'undefined')\n\t\t\t{\n\t\t\t\treturn addInviteCode(inviteCode);\n\t\t\t}\n\n\t\t\treturn inviteCode;\n\t\t}\n\n\t\tfunction getMemberInviteCode(member) {\n\t\t\tif (!member)\n\t\t\t{\n\t\t\t\tdbg('!!! can\\'t get invite: no member provided', member, 3);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tvar ticket = member.getTicket();\n\t\t\treturn ticket && ticket.getInviteCode();\n\t\t}\n\n\t\tfunction removeMemberInviteCode(member) {\n\t\t\tvar inviteCode = getMemberInviteCode(member);\n\n\t\t\tif (inviteCode && inviteCodesIndex[inviteCode])\n\t\t\t{\n\t\t\t\treturn removeInviteCode(inviteCode);\n\t\t\t}\n\t\t}\n\n\t\tfunction addInviteCode(inviteCode)\n\t\t{\n\t\t\t// Ensure an invite is specified only once for each card\n\t\t\tif (inviteCodesIndex[inviteCode])\n\t\t\t{\n\t\t\t\treturn inviteCode;\n\t\t\t}\n\n\t\t\tinviteCodesIndex[inviteCode] = inviteCodes.length;\n\t\t\tinviteCodes.push(inviteCode);\n\n\t\t\treturn inviteCode;\n\t\t}\n\n\t\tfunction removeInviteCode(inviteCode) {\n\t\t\tvar inviteIndex = inviteCodesIndex[inviteCode],\n\t\t\t\tremovedInviteCode;\n\n\t\t\tif (typeof inviteIndex === 'undefined')\n\t\t\t{\n\t\t\t\tdbg('!!! no invite to delete', inviteCode, 3);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tdelete inviteCodesIndex[inviteCode];\n\t\t\tremovedInviteCode = inviteCodes.splice(inviteIndex, 1)[0];\n\n\t\t\t// update index\n\t\t\tfor (var i = inviteIndex, len = inviteCodes.length; i < len; i++)\n\t\t\t{\n\t\t\t\tinviteCodesIndex[inviteCodes[i]] = i;\n\t\t\t}\n\n\t\t\treturn removedInviteCode || null;\n\t\t}\n\n\t\tfunction addJoinInvite(inviteData) {\n\t\t\tvar invite = inviteData;\n\n\t\t\tjoinInvitesIndex[inviteData.id] = joinInvites.length;\n\t\t\tjoinInvites.push(invite);\n\n\t\t\treturn invite;\n\t\t}\n\n\t\tfunction removeJoinInviteById(inviteId) {\n\t\t\tvar inviteIndex = joinInvitesIndex[inviteId],\n\t\t\t\tremovedInvite;\n\n\t\t\tif (typeof inviteIndex === 'undefined')\n\t\t\t{\n\t\t\t\tdbg('!!! no join invite to delete', inviteId, 3);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tdelete joinInvitesIndex[inviteId];\n\t\t\tremovedInvite = joinInvites.splice(inviteIndex, 1)[0];\n\n\t\t\t// update index\n\t\t\tfor (var i = inviteIndex, len = joinInvites.length; i < len; i++)\n\t\t\t{\n\t\t\t\tjoinInvitesIndex[joinInvites[i]] = i;\n\t\t\t}\n\n\t\t\treturn removedInvite || null;\n\t\t}\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t}\n\n\t// Card defines\n\n\n\tmodule.exports = Card;\n});\n\n","define('glympse-adapter/adapter/CardsController',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/lib/rafUtils','glympse-adapter/lib/ajax','glympse-adapter/GlympseAdapterDefines','glympse-adapter/adapter/models/Account','glympse-adapter/adapter/models/Card'],function(require, exports, module)\n{\n\t'use strict';\n\n\t// defines\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar raf = require('glympse-adapter/lib/rafUtils');\n\tvar ajax = require('glympse-adapter/lib/ajax');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\n\tvar m = Defines.MSG;\n\tvar r = Defines.CARDS.REQUESTS;\n\tvar rl = Defines.CARDS.REQUESTS_LOCAL;\n\tvar REQUEST_TYPES = Defines.CARDS.REQUEST_TYPES;\n\n\t// Cards-specific\n\tvar Account = require('glympse-adapter/adapter/models/Account');\n\tvar Card = require('glympse-adapter/adapter/models/Card');\n\n\t// Exported class\n\tfunction CardsController(controller, cfg)\n\t{\n\t\t// consts\n\t\tvar dbg = lib.dbg('CardsController', cfg.dbg);\n\t\tvar svr = cfg.svcGlympse;\n\t\tvar pollInterval = cfg.pollCards || 60000;\n\t\tvar pollingInterval;\n\t\tvar cardsMode = cfg.hasOwnProperty('cardsMode') ? cfg.cardsMode : !!cfg.card;\n\n\t\t// state\n\t\tvar that = this;\n\t\tvar cardInvites;\n\t\tvar cards;\n\t\tvar cardsIndex;\n\t\tvar cardsReady = 0;\n\t\tvar initialized = false;\n\t\tvar account = cfg.account;\n\t\tvar cacheCardUpdatedEvts = false;\n\t\tvar cachedCardUpdatedEvts = [];\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.init = function(cardsInvitesToLoad)\n\t\t{\n\t\t\tcards = [];\n\t\t\tcardsIndex = {};\n\t\t\tcardInvites = cardsInvitesToLoad || [];\n\n\t\t\tcardsReady = (cardInvites) ? cardInvites.length : 0;\n\t\t\tinitialized = true;\n\n\t\t\tcontroller.notify(m.CardsInitStart, cardInvites);\n\n\t\t\tif (account)\n\t\t\t{\n\t\t\t\taccountInitComplete();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.notify = function(msg, args)\n\t\t{\n\t\t\tswitch (msg)\n\t\t\t{\n\t\t\t\tcase m.AccountLoginStatus:\n\t\t\t\t{\n\t\t\t\t\taccount = args.account;\n\t\t\t\t\taccountInitComplete(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.AccountDeleteStatus:\n\t\t\t\t{\n\t\t\t\t\taccountDeleteComplete();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardInit:\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardReady:\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(msg, args);\n\n\t\t\t\t\tvar card = cardsIndex[args];\n\t\t\t\t\tif (cards.indexOf(card) === -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcards.push(card);\n\t\t\t\t\t\tcontroller.notify(m.CardAdded, card);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--cardsReady === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.notify(m.CardsInitEnd, cards);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardUpdated:\n\t\t\t\t{\n                    if (cacheCardUpdatedEvts) {\n\t\t\t\t\t\tcachedCardUpdatedEvts.push(args);\n                        return;\n                    }\n\n\t\t\t\t\tcontroller.notify(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tdbg('Unknown msg: \"' + msg + '\"', args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tthis.cmd = function(cmd, args)\n\t\t{\n\t\t\tswitch (cmd)\n\t\t\t{\n\t\t\t\tcase r.requestCards:\n\t\t\t\t\treturn requestCards();\n\n\t\t\t\tcase rl.getCards:\n\t\t\t\t\treturn getCards();\n\n\t\t\t\tcase r.request:\n\t\t\t\t\treturn request(args);\n\n\t\t\t\tcase r.removeMember:\n\t\t\t\t\treturn removeMember(args);\n\n\t\t\t\tcase r.joinRequest:\n\t\t\t\t\treturn joinRequest(args);\n\n\t\t\t\tcase r.joinRequestCancel:\n\t\t\t\t\treturn joinRequestCancel(args);\n\n\t\t\t\tcase r.getActiveJoinRequests:\n\t\t\t\t\treturn getActiveJoinRequests();\n\n\t\t\t\tcase r.activity:\n\t\t\t\t\treturn getCardActivity(args);\n\n\t\t\t\tdefault:\n\t\t\t\t\tdbg('method not found', cmd);\n\t\t\t}\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction accountInitComplete(args)\n\t\t{\n\t\t\tvar sig = '[accountInitComplete] - ';\n\n\t\t\tif (!account)\n\t\t\t{\n\t\t\t\tdbg(sig + 'authToken unavailable', args);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!initialized)\n\t\t\t{\n\t\t\t\tdbg(sig + 'not initialized', args);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//dbg('Auth token: ' + account.getToken() + ' -- ' + (info && info.token));\n\t\t\tdbg(sig + '[' + ((cfg.isAnon) ? 'ANON' : 'ACCT') + '] Authenticated. Loading ' + cardInvites.length + ' cards...');\n\n\t\t\t// Now load card(s)\n\t\t\tloadCards(cardInvites);\n\n\t\t\tif (!cardInvites.length)\n\t\t\t{\n\t\t\t\tcontroller.notify(m.CardsInitEnd, []);\n\t\t\t}\n\n\t\t\tif (cardsMode && cfg.isAnon) {\n                getInviteById(cardInvites[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (pollingInterval) {\n\t\t\t\t\traf.clearInterval(pollingInterval);\n\t\t\t\t}\n\t\t\t\trequestCards();\n\t\t\t\tpollingInterval = raf.setInterval(requestCards, pollInterval);\n\t\t\t}\n\t\t}\n\n\t\tfunction accountDeleteComplete(){\n\t\t\taccount = null;\n\t\t\tif (pollingInterval)\n\t\t\t{\n\t\t\t\traf.clearInterval(pollingInterval);\n\t\t\t\tpollingInterval = null;\n\t\t\t}\n\t\t}\n\n\t\tfunction loadCard(card, fullRequest)\n\t\t{\n\t\t\treturn {\n\t\t\t\tcard: card,\n\t\t\t\trequest: fullRequest ? getCard(card) : updateCard(card)\n\t\t\t};\n\t\t}\n\n\t\tfunction loadCards(cardInvites)\n\t\t{\n\t\t\tif (!cardInvites || !cardInvites.length)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar batchRequests = [],\n\t\t\t\tloadingCards = [],\n\t\t\t\tloadingCard,\n\t\t\t\tisNew,\n\t\t\t\tcard,\n\t\t\t\tcardInvite;\n\n\t\t\tcardsReady = cardInvites.length;\n\t\t\tfor (var i = 0, len = cardInvites.length; i < len; i++)\n\t\t\t{\n\t\t\t\tcardInvite = cardInvites[i];\n\t\t\t\tcard = cardsIndex[cardInvite];\n\t\t\t\tisNew = false;\n\t\t\t\tif (!card)\n\t\t\t\t{\n\t\t\t\t\tcard = new Card(that, cardInvite, account, cfg);\n\t\t\t\t\tcardsIndex[cardInvite] = card;\n\t\t\t\t\tisNew = true;\n\t\t\t\t}\n\n\t\t\t\tloadingCard = loadCard(card, isNew);\n\n\t\t\t\tbatchRequests.push(loadingCard.request);\n\t\t\t\tloadingCards.push(loadingCard.card);\n\n\t\t\t\tif (card.dirty)\n\t\t\t\t{\n\t\t\t\t\t//need to send additional full request to update card properties\n\t\t\t\t\tloadingCard = loadCard(card, true);\n\t\t\t\t\tbatchRequests.push(loadingCard.request);\n\t\t\t\t\tloadingCards.push(loadingCard.card);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tajax.batch(svr + 'batch', batchRequests, account)\n\t\t\t\t.then(function(responses)\n\t\t\t\t{\n\t\t\t\t\tvar response, i, len, card;\n\t\t\t\t\tfor (i = 0, len = responses.length; i < len; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tresponse = responses[i];\n\t\t\t\t\t\tcard = loadingCards[i];\n\t\t\t\t\t\tswitch (response.name)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'getCard':\n\t\t\t\t\t\t\t\tprocessGetCard(response.result, card);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'updateCard':\n\t\t\t\t\t\t\t\tprocessUpdateCard(response.result, card);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\n\t\t//////////////////////\n\t\t// Cards API\n\t\t//////////////////////\n\n\t\t/**\n\t\t * Requests cards for the current user.\n\t\t */\n        function requestCards()\n\t\t{\n\t\t\tajax.get(svr + 'cards', null, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar i, card, len, cardId, allCardIds = [];\n\t\t\t\t\t\t// add new cards\n\t\t\t\t\t\tfor (i = 0, len = result.response.length; i < len; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcard = result.response[i];\n\t\t\t\t\t\t\tallCardIds.push(card.id);\n\t\t\t\t\t\t\tif (cardInvites.indexOf(card.id) === -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInvites.push(card.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// cleanup deleted cards (use while to allow deleting in the loop)\n\t\t\t\t\t\ti = cardInvites.length;\n\t\t\t\t\t\twhile (i--)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcardId = cardInvites[i];\n\t\t\t\t\t\t\tif (allCardIds.indexOf(cardId) === -1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcardInvites.splice(i, 1);\n\t\t\t\t\t\t\t\tcard = cardsIndex[cardId];\n\t\t\t\t\t\t\t\tcards.splice(cards.indexOf(card), 1);\n\t\t\t\t\t\t\t\tdelete cardsIndex[cardId];\n\t\t\t\t\t\t\t\tcontroller.notify(m.CardRemoved, card);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// refresh existing cards\n\t\t\t\t\t\tloadCards(cardInvites);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.notify(m.CardsRequestStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getInviteById(cardId) {\n\t\t\tajax.get(svr + 'cards/invites/' + cardId, null, account)\n\t\t\t\t.then(function(result) {\n\t\t\t\t\tif (result.status) {\n\t\t\t\t\t\tvar card = new Card(that, cardId, account, cfg);\n\t\t\t\t\t\tcardsIndex[cardId] = card;\n\t\t\t\t\t\tprocessGetCard(result, card);\n\t\t\t\t\t\tresult.response = [result.response];\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.notify(m.CardsRequestStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Returns currently loaded cards\n\t\t */\n\t\tfunction getCards()\n\t\t{\n\t\t\treturn cards;\n\t\t}\n\n\t\tfunction getCard(card)\n\t\t{\n\t\t\tvar idCard = card.getIdCard();\n\n\t\t\tcontroller.notify(m.CardInit, idCard);\n\n\t\t\tvar cardUrl = 'cards/' + idCard;\n\n\t\t\treturn {\n\t\t\t\tname: 'getCard',\n\t\t\t\turl: cardUrl + '?' +  $.param({members: !card.dirty}),\n\t\t\t\tmethod: 'GET'\n\t\t\t};\n\t\t}\n\n\t\tfunction updateCard(card, from, to) {\n\t\t\tvar idCard = card.getIdCard();\n\n\t\t\tvar cardUrl = 'cards/' + idCard + '/activity';\n\n\t\t\tvar getParams = { from_ts: card.getLastUpdatingTime() };\n\n\t\t\tif (from)\n\t\t\t{\n\t\t\t\tgetParams.from_ts = from;\n\t\t\t}\n\n\t\t\tif (to)\n\t\t\t{\n\t\t\t\tgetParams.to_ts = to;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tname: 'updateCard',\n\t\t\t\turl: cardUrl + '?' + $.param(getParams),\n\t\t\t\tmethod: 'GET'\n\t\t\t};\n\t\t}\n\n\t\tfunction processGetCard(result, card){\n\t\t\tvar idCard = card.getIdCard();\n\n\t\t\tif (result.status)\n\t\t\t{\n\t\t\t\t//dbg('Got card data', resp);\n\n\t\t\t\tcacheCardUpdatedEvts = true;\n\t\t\t\tcard.setData(result.response);\n\t\t\t\tif (!card.dirty)\n\t\t\t\t{\n\t\t\t\t\tcard.setLastUpdatingTime(result.time);\n\t\t\t\t\tthat.notify(m.CardReady, idCard);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcard.dirty = false;\n\t\t\t\t}\n\n\t\t\t\tif (cacheCardUpdatedEvts) {\n                    flushCardUpdatedEvtCache();\n                }\n\t\t\t}\n\t\t\telse if (result.response.error === 'failed_to_decode')\n\t\t\t{\n\t\t\t\t// Invite is invalid or has been revoked, in\n\t\t\t\t// either case, we cannot continue loading this\n\t\t\t\t// card, so bail immediately\n\t\t\t\tthat.notify(m.CardReady, idCard);\n\t\t\t}\n\t\t}\n\n\t\tfunction flushCardUpdatedEvtCache() {\n            cacheCardUpdatedEvts = false;\n\t\t\tfor (var i = 0, len = cachedCardUpdatedEvts.length; i < len; i++){\n\t\t\t\tthat.notify(m.CardUpdated, cachedCardUpdatedEvts[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction processUpdateCard(result, card){\n\t\t\tif (result.status)\n\t\t\t{\n\t\t\t\t//dbg('Got card data', resp);\n\t\t\t\tif (result.response.length) {\n\t\t\t\t\tcard.setDataFromStream(result.response, result.time);\n\t\t\t\t}\n\t\t\t\tcard.setLastUpdatingTime(result.time);\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * Request a card member / all card members to share its / their locations\n\t\t *\n\t\t * @param {Object} config Configuration\n\t\t * @param {string} config.inviteCode Invite code generated by the app via adapter.core.createRequest($request_params)\n\t\t * @param {string} config.cardId Card id to remove a member\n\t\t * @param {string} config.memberList List of member ids. If no ids is given, all card members will receive this request.\n\t\t */\n\t\tfunction request(config)\n\t\t{\n\t\t\tif (!config || !config.cardId || !config.inviteCode)\n\t\t\t{\n\t\t\t\tvar error = 'cardId & inviteCode config params must be passed';\n\n\t\t\t\tdbg(error, config, 3);\n\n\t\t\t\tcontroller.notify(m.CardsLocationRequestStatus, {\n\t\t\t\t\tstatus: false,\n\t\t\t\t\tresponse: { error: error }\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar url = svr + 'cards/' + config.cardId + '/request';\n\n\t\t\tvar data = {\n\t\t\t\tinvite_code: config.inviteCode,\n\t\t\t\tinvitees: {}\n\t\t\t};\n\n\t\t\tif (config.memberList && config.memberList.length)\n\t\t\t{\n\t\t\t\tvar members = [];\n\t\t\t\tfor (var i = 0, len = config.memberList.length; i < len; i++)\n\t\t\t\t{\n\t\t\t\t\tmembers.push({ member_id: config.memberList[i] });\n\t\t\t\t}\n\t\t\t\tdata.invitees.type = 'list';\n\t\t\t\tdata.invitees.list = members;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdata.invitees.type = 'all';\n\t\t\t}\n\n\t\t\tajax.post(url, data, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardsLocationRequestStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Request to join a card\n\t\t *\n\t\t * @param {Object} requestConfig:\n\t\t * {\n\t\t *   type: \"${request_type}\",\n\t\t *   name: ${requestee_name},\n\t\t *   address: ${requestee_address},\n\t\t *   send: \"${send_type}\",\n\t\t *   locale: \"${locale}\",\n\t\t *   region: \"${region}\"\n\t\t * }\n\t\t */\n\t\tfunction joinRequest(requestConfig)\n\t\t{\n\t\t\tvar url = svr + 'cards/requests';\n\n\t\t\tif (!requestConfig.type ||\n\t\t\t\t(!requestConfig.address && requestConfig.type !== REQUEST_TYPES.CLIPBOARD && requestConfig.type !== REQUEST_TYPES.LINK))\n\t\t\t{\n\t\t\t\tvar error = 'Need to provide type (Defines.CARDS.REQUEST_TYPES: LINK, CLIPBOARD, SMS, EMAIL, ACCOUNT) ' +\n\t\t\t\t\t'and address (except LINK and CLIPBOARD types) to join a card';\n\n\t\t\t\tdbg(error, requestConfig, 3);\n\n\t\t\t\tcontroller.notify(m.CardsJoinRequestStatus, {\n\t\t\t\t\tstatus: false,\n\t\t\t\t\tresponse: { error: error }\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trequestConfig.send = requestConfig.send || 'server';\n\n\t\t\tajax.post(url, requestConfig, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardsJoinRequestStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction joinRequestCancel(requestId)\n\t\t{\n\t\t\tvar url = svr + 'cards/requests/' + requestId;\n\n\t\t\tajax.delete(url, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.response.id = requestId;\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.notify(m.CardsJoinRequestCancelStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getActiveJoinRequests()\n\t\t{\n\t\t\tvar url = svr + 'cards/requests';\n\n\t\t\tajax.get(url, null, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(m.CardsActiveJoinRequestsStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Removes a member from a given card\n\t\t *\n\t\t * @param {Object} config Configuration\n\t\t * @param {string} config.cardId Card id to remove a member\n\t\t * @param {string} config.memberId Member id of the member to remove. If no memberId is given, the current user is removed.\n\t\t */\n\t\tfunction removeMember(config)\n\t\t{\n\t\t\tif (!config || !config.cardId)\n\t\t\t{\n\t\t\t\tdbg('CardId param is mandatory!', config, 3);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar memberId = config.memberId;\n\t\t\tvar card;\n\t\t\tif (!memberId)\n\t\t\t{\n\t\t\t\tcard = cardsIndex[config.cardId];\n\t\t\t\tif (!card)\n\t\t\t\t{\n\t\t\t\t\tdbg('card not found for CardId=', config.cardId, 3);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar members = card.getMembers();\n\t\t\t\tfor (var i = 0, len = members.length, member; i < len; i++)\n\t\t\t\t{\n\t\t\t\t\tmember = members[i];\n\t\t\t\t\tif (member.getUserId() === account.getId())\n\t\t\t\t\t{\n\t\t\t\t\t\tmemberId = member.getId();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!memberId)\n\t\t\t\t{\n\t\t\t\t\tdbg('current member not found for card=', card.toJSON(), 3);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tajax.delete((svr + 'cards/' + config.cardId + '/members/' + memberId), account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.response.cardId = config.cardId;\n\t\t\t\t\t\tresult.response.memberId = memberId;\n\n\t\t\t\t\t\trequestCards();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.notify(m.CardRemoveMemberStatus, result);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getCardActivity(config) {\n\t\t\tif (!config || !config.cardId)\n\t\t\t{\n\t\t\t\tdbg('CardId param is mandatory!', config, 3);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cardId = config.cardId,\n\t\t\t\tcard = cardsIndex[cardId],\n\t\t\t\tfromTS = config.fromTS,\n\t\t\t\ttoTS = config.toTS;\n\n\t\t\tif (card)\n\t\t\t{\n\t\t\t\tupdateCard(card, fromTS, toTS);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tmodule.exports = CardsController;\n});\n\n","define('glympse-adapter/adapter/CoreController',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/GlympseAdapterDefines','glympse-adapter/adapter/models/Account'],function(require, exports, module)\n{\n\t'use strict';\n\n\t// defines\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\n\tvar m = Defines.MSG;\n\tvar rl = Defines.CORE.REQUESTS_LOCAL;\n\n\tvar Account = require('glympse-adapter/adapter/models/Account');\n\n\t// Exported class\n\tfunction CoreController(controller, cfg)\n\t{\n\t\t// consts\n\t\tvar dbg = lib.dbg('CoreController', cfg.dbg);\n\n\t\t// state\n\t\tvar account = new Account(this, cfg);\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.init = function()\n\t\t{\n\t\t\taccount.init();\n\t\t};\n\n\t\tthis.notify = function(msg, args)\n\t\t{\n\t\t\tswitch (msg)\n\t\t\t{\n\t\t\t\tcase m.AccountLoginStatus:\n\t\t\t\tcase m.AccountDeleteStatus:\n\t\t\t\tcase m.AccountCreateStatus:\n\t\t\t\tcase m.UserNameUpdateStatus:\n\t\t\t\tcase m.UserAvatarUpdateStatus:\n\t\t\t\tcase m.UserInfoStatus:\n\t\t\t\tcase m.CreateRequestStatus:\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tdbg('Unknown msg: \"' + msg + '\"', args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tthis.cmd = function(method, args)\n\t\t{\n\t\t\tswitch (method)\n\t\t\t{\n\t\t\t\tcase rl.accountCreate:\n\t\t\t\t{\n\t\t\t\t\taccount.create();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.generateAuthToken:\n\t\t\t\t{\n\t\t\t\t\taccount.generateToken();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.setUserName:\n\t\t\t\t{\n\t\t\t\t\taccount.setName(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.setUserAvatar:\n\t\t\t\t{\n\t\t\t\t\taccount.setAvatar(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.getUserInfo:\n\t\t\t\t{\n\t\t\t\t\taccount.getUserInfo(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.hasAccount:\n\t\t\t\t{\n\t\t\t\t\treturn account.hasAccount();\n\t\t\t\t}\n\n\t\t\t\tcase rl.createRequest:\n\t\t\t\t{\n\t\t\t\t\taccount.createRequest(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase rl.accountDelete:\n\t\t\t\t{\n\t\t\t\t\taccount.delete();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.getAccount = function()\n\t\t{\n\t\t\treturn account;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t}\n\n\tmodule.exports = CoreController;\n});\n\n","define('glympse-adapter/adapter/models/GlympseInvite',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/lib/ajax','glympse-adapter/GlympseAdapterDefines'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar ajax = require('glympse-adapter/lib/ajax');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar m = Defines.MSG;\n\tvar cModuleId = 'GlympseInvite';\n\n\n\t// Exported class\n\tfunction GlympseInvite(controller, idInvite, account, cfg)\n\t{\n\t\t// consts\n\t\tvar dbg = lib.dbg(cModuleId, cfg.dbg);\n\t\tvar svr = cfg.svcGlympse;\n\t\tvar inviteUrl = (svr + 'invites/' + idInvite);\n\t\tvar cMaxAttempts = 3;\n\n\t\t// state\n\t\tvar next = 0;\n\t\tvar data;\n\t\tvar error;\n\t\tvar loaded = false;\n\t\tvar that = this;\n\t\tvar inviteParams = { 'no_count': true, 'next': next };\n\n\t\t// TODO: Just map data props directly??\n\t\t//\t---> Only want immediate non-Objects/Arrays\n\t\tvar props = [ 'first'\n\t\t\t\t\t, 'last'\n\t\t\t\t\t, 'next'\n\t\t\t\t\t, 'properties'\n\t\t\t\t\t, 'type'\n\t\t\t\t\t];\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// NOTE: some properties created via lib.mapProps\n\n\t\tthis.isLoaded = function()\n\t\t{\n\t\t\treturn loaded;\n\t\t};\n\n\t\tthis.getIdInvite = function()\n\t\t{\n\t\t\treturn idInvite;\n\t\t};\n\n\t\tthis.getError = function()\n\t\t{\n\t\t\treturn error;\n\t\t};\n\n\t\tthis.getData = function()\n\t\t{\n\t\t\treturn data;\n\t\t};\n\n\t\t// NOTE: make available in case of invalid invite\n\t\tthis.getReference = function()\n\t\t{\n\t\t\treturn data && data.reference;\n\t\t};\n\n\t\tthis.setData = function(val)\n\t\t{\n\t\t\tdata = val;\n\t\t\tdata.location = null;\t// Don't cache location!\n\t\t\tlib.mapProps(this, props, data);\n\n\t\t\t//dbg('Invite \"' + this.getIdInvite() + '\" loaded (reference: \"' + this.getReference() + '\")');\n\t\t};\n\n\t\tthis.setAccount = function(val)\n\t\t{\n\t\t\taccount = val;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.load = function()\n\t\t{\n\t\t\tif (!idInvite || !account)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Kick off invite load\n\t\t\terror = null;\n\n\t\t\tloadInvite();\n\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.toString = function()\n\t\t{\n\t\t\treturn '[' + cModuleId + ']: ' + JSON.stringify(data);\n\t\t};\n\n\t\tthis.toJSON = function()\n\t\t{\n\t\t\treturn data || error;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction loadInvite()\n\t\t{\n\t\t\tcontroller.notify(m.InviteInit, idInvite);\n\n\t\t\tajax.get(inviteUrl, inviteParams, account)\n\t\t\t\t.then(function(result)\n\t\t\t\t{\n\t\t\t\t\tif (result.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tloaded = true;\n\t\t\t\t\t\tthat.setData(result.response);\n\t\t\t\t\t}\n\t\t\t\t\t// max attempts\n\t\t\t\t\telse if (result.info)\n\t\t\t\t\t{\n\t\t\t\t\t\t// left as it was before for now\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\terror: 'load_failure',\n\t\t\t\t\t\t\terror_detail: 'Failed ' + cMaxAttempts + ' attempts'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\terror = result.response;\n\t\t\t\t\t\terror.id = lib.normalizeInvite(idInvite);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.notify(m.InviteReady, that);\n\t\t\t\t});\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t}\n\n\t// GlympseInvite defines\n\n\n\tmodule.exports = GlympseInvite;\n});\n\n","define('glympse-adapter/adapter/GlympseLoader',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/GlympseAdapterDefines','glympse-adapter/adapter/models/Account','glympse-adapter/adapter/models/GlympseInvite'],function(require, exports, module)\n{\n    'use strict';\n\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar m = Defines.MSG;\n\n\t// Glympse-specific\n\tvar Account = require('glympse-adapter/adapter/models/Account');\n\tvar GlympseInvite = require('glympse-adapter/adapter/models/GlympseInvite');\n\n\n\t// Exported class\n\tfunction GlympseLoader(controller, cfg)\n\t{\n\t\t// consts\n\t\tvar dbg = lib.dbg('GlympseLoader', cfg.dbg);\n\n\t\t// state\n\t\tvar that = this;\n\t\tvar account = cfg.account;\n\t\tvar idInvite;\n\t\tvar invite;\n\t\tvar initialized = false;\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.init = function(inviteToLoad)\n\t\t{\n\t\t\tidInvite = inviteToLoad;\n\t\t\tinitialized = true;\n\n\t\t\tif (account)\n\t\t\t{\n\t\t\t\taccountInitComplete(account);\n\t\t\t}\n\t\t};\n\n\n\t\tthis.notify = function(msg, args)\n\t\t{\n\t\t\tswitch (msg)\n\t\t\t{\n\t\t\t\tcase m.AccountLoginStatus:\n\t\t\t\t{\n\t\t\t\t\taccount = args.account;\n\t\t\t\t\taccountInitComplete(args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.AccountDeleteStatus:\n\t\t\t\t{\n\t\t\t\t\taccount = null;\n\t\t\t\t\tif (invite)\n\t\t\t\t\t{\n\t\t\t\t\t\tinvite.setAccount(account);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.InviteInit:\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.InviteReady:\n\t\t\t\t{\n\t\t\t\t\tcontroller.notify(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tdbg('Unknown msg: \"' + msg + '\"', args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// UTILITY\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction accountInitComplete(info)\n\t\t{\n\t\t\tvar sig = '[accountInitComplete] - ';\n\n\t\t\tif (!initialized)\n\t\t\t{\n\t\t\t\tdbg(sig + 'not initialized', info);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!account)\n\t\t\t{\n\t\t\t\tdbg(sig + 'authToken unavailable', info);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//dbg('Auth token: ' + account.getToken() + ' -- ' + (info && info.token));\n\t\t\tdbg(sig + '[' + ((cfg.isAnon) ? 'ANON' : 'ACCT') + '] Token active. Loading Glympse invite \"' + idInvite + '\"');\n\n\t\t\tif (invite)\n\t\t\t{\n\t\t\t\tinvite.setAccount(account);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinvite = new GlympseInvite(that, idInvite, account, cfg);\n\t\t\t}\n\n\t\t\tif (!invite.isLoaded())\n\t\t\t{\n\t\t\t\tinvite.load();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tmodule.exports = GlympseLoader;\n});\n\n","// App entry point\ndefine('glympse-adapter/adapter/Client',['require','exports','module','glympse-adapter/lib/utils','oasis','glympse-adapter/GlympseAdapterDefines','glympse-adapter/adapter/ViewerMonitor','glympse-adapter/adapter/CardsController','glympse-adapter/adapter/CoreController','glympse-adapter/adapter/GlympseLoader','glympse-adapter/adapter/models/Account'],function(require, exports, module)\n{\n\t'use strict';\n\n\t// imports\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar Oasis = require('oasis');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar ViewerMonitor = require('glympse-adapter/adapter/ViewerMonitor');\n\tvar CardsController = require('glympse-adapter/adapter/CardsController');\n\tvar CoreController = require('glympse-adapter/adapter/CoreController');\n\tvar GlympseLoader = require('glympse-adapter/adapter/GlympseLoader');\n\tvar Account = require('glympse-adapter/adapter/models/Account');\n\n\tvar s = Defines.STATE;\n\tvar m = Defines.MSG;\n\tvar mStateUpdate = m.StateUpdate;\t// Used alot\n\n\n\tfunction Client(controller, oasisLocal, app, cfg, elementViewer)\n\t{\n\t\tvar cfgApp = (cfg && cfg.app) || {};\n\t\tvar cfgAdapter = (cfg && cfg.adapter) || {};\n\t\tvar cfgViewer = (cfg && cfg.viewer) || {};\n\n\t\tvar dbg = lib.dbg('Client', cfgApp.dbg);\n\n\t\t// state\n\t\tvar that = this;\n\t\tvar cardsController;\n\t\tvar cfgMonitor = {dbg: cfgApp.dbg, viewer: elementViewer};\n\t\tvar invitesCard;\n\t\tvar invitesGlympse;\n\t\tvar invitesReferences = {};\n\t\tvar glympseLoader;\n\t\tvar mapCardTicketInvites = {};\n\t\tvar cardsInitialized = false;\n\t\tvar viewerMonitor;\n\t\tvar coreController;\n\t\t// var authToken;\n\t\tvar account;\n\n\t\tvar progressCurrent = 0;\n\t\tvar progressTotal = 0;\n\n\t\tvar connectedOasis = false;\n\t\tvar connectQueue = [];\n\t\tvar port;\n\t\tvar cardsMode = cfgAdapter.cardsMode;\n\n\t\tvar initialized = false;\n\t\tvar apiKey = cfgAdapter.apiKey || 'nXQ44D38OdVzEC34';\t// sand/prod: application/79 --> prod org 20715 or 24778\n\n\n\t\tcfgAdapter.apiKey = apiKey;\n\t\tcfgAdapter.dbg = cfgApp.dbg || cfgAdapter.dbg;\n\t\tcfgAdapter.svcGlympse = (cfgAdapter.svcGlympse || ('//api.' + ((cfgAdapter.sandbox) ? 'sandbox.' : '') + 'glympse.com/v2/'));\n\n\t\t// Sync up viewer settings\n\t\tcfgViewer.apiKey = apiKey;\n\t\tcfgViewer.services = cfgAdapter.svcGlympse;\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// Disabled for now.. all through front-door.\n\t\t// Add to MAP.REQUESTS_LOCAL for additional client-only interfaces\n\t\t//this.getViewer = function()\n\t\t//{\n\t\t//\treturn viewerMonitor.getViewer();\n\t\t//};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * Set up the client portion of the adapter\n\t\t * @param settings Object to advertise to any connecting adapter running in host-mode. This object is updated with all of the available interfaces/end-points.\n\t\t */\n\t\tthis.init = function(settings)\n\t\t{\n\t\t\tvar card = cfgAdapter.card;\n\t\t\tvar t = cfgAdapter.t;\n\n\t\t\tvar cfgClient = {consumers: {}};\n\t\t\tvar events = {};\n\t\t\tvar requests = {};\n\n\t\t\tvar cleanInvites = lib.cleanInvites;\n\n\t\t\tinvitesCard = (card) ? cleanInvites([card]) : [];\n\t\t\tinvitesGlympse = cleanInvites(splitMulti(t));\n\n\t\t\tevents.setUserInfo = setUserInfo;\t// Dummy/test\n\n\t\t\t$.extend(settings, {invitesCard: invitesCard, invitesGlympse: invitesGlympse});\n\n\n\t\t\tcoreController = new CoreController(this, cfgAdapter);\n\t\t\tcardsController = new CardsController(this, cfgAdapter);\n\t\t\tviewerMonitor = new ViewerMonitor(this, cfgMonitor);\n\n\t\t\t// API namespaced endpoints\n\t\t\tvar svcs = [\n\t\t\t\t{id: 'MAP', targ: viewerMonitor},\n\t\t\t\t{id: 'CARDS', targ: cardsController},\n\t\t\t\t{id: 'CORE', targ: coreController}\n\t\t\t];\n\n\t\t\tvar intInterfaces = {map: {}, cards: {}, core: {}};\n\n\t\t\t// Local overrides\n\t\t\t// FIXME: This shouldn't go here\n\t\t\tintInterfaces.map[ViewerMonitor.GetInviteProperties] = getInviteProperties;\n\t\t\tintInterfaces.map[ViewerMonitor.GetInviteProperty] = getInviteProperty;\n\n\t\t\t// Defines.SVC_ID.REQUESTS specifies the various API endpoints\n\t\t\t// to expose to both client and host consumers:\n\t\t\t// Client APIs --> adapter_instance.SVC_ID.*()\n\t\t\t// Host calls --> interfaces.SVC_ID.*\n\t\t\tfor (var i = 0, len = svcs.length; i < len; i++)\n\t\t\t{\n\t\t\t\tvar id, aid = svcs[i];\n\t\t\t\tvar idApi = aid.id.toLowerCase();\n\t\t\t\tvar listApis = [];\n\n\t\t\t\trequests[idApi] = generateRequestAction(aid.targ);\n\n\t\t\t\t// Generate public APIs from static internal interfaces\n\t\t\t\tvar targ = intInterfaces[idApi];\n\t\t\t\tfor (id in targ)\n\t\t\t\t{\n\t\t\t\t\tlistApis.push(id); // Advertised host availability\n\t\t\t\t\tcontroller[idApi][id] = targ[id]; // Local client access\n\t\t\t\t}\n\n\t\t\t\t// Generic \"action\" APIs to pass along to hosted object\n\t\t\t\ttarg = Defines[aid.id].REQUESTS;\n\t\t\t\tfor (id in targ)\n\t\t\t\t{\n\t\t\t\t\tlistApis.push(id); // Advertised host availability\n\t\t\t\t\tcontroller[idApi][id] = generateTargAction(aid.targ, id);\t// Local client access\n\t\t\t\t}\n\n\t\t\t\t// Add local-only requests, err, locally\n\t\t\t\ttarg = Defines[aid.id].REQUESTS_LOCAL;\n\t\t\t\tfor (id in targ)\n\t\t\t\t{\n\t\t\t\t\tcontroller[idApi][id] = generateTargAction(aid.targ, id);\t// Local client access (only)\n\t\t\t\t}\n\n\t\t\t\tsettings[idApi] = listApis;\n\t\t\t}\n\n\t\t\t// Add user-defined interfaces, if specified\n\t\t\tvar customInterfaces = cfgAdapter.interfaces;\n\t\t\tif (customInterfaces)\n\t\t\t{\n\t\t\t\trequests.ext = function(data)\n\t\t\t\t{\n\t\t\t\t\treturn customInterfaces[data.id](data.args);\n\t\t\t\t};\n\n\t\t\t\tvar extInterfaces = [];\n\t\t\t\tfor (id in customInterfaces)\n\t\t\t\t{\n\t\t\t\t\textInterfaces.push(id);\n\t\t\t\t\tcontroller.ext[id] = customInterfaces[id];\n\t\t\t\t}\n\n\t\t\t\tsettings.ext = extInterfaces;\n\t\t\t}\n\n\t\t\tconnectQueue.push({id: 'Connected', val: settings});\n\n\t\t\tcfgClient.consumers[Defines.PORT] = Oasis.Consumer.extend(\n\t\t\t\t{\n\t\t\t\t\tinitialize: oasisInitialize,\n\t\t\t\t\tevents: events,\t\t// send data/notification --> necessary?\n\t\t\t\t\trequests: requests\t// request data\n\t\t\t\t});\n\n\t\t\toasisLocal.connect(cfgClient);\n\n\t\t\t// Notify of invite loading status\n\t\t\tvar initSettings = {\n\t\t\t\tisCard: (card != null || cardsMode)\n\t\t\t\t, t: invitesGlympse\n\t\t\t\t, pg: splitMulti(cfgAdapter.pg)\n\t\t\t\t, twt: splitMulti(cfgAdapter.twt)\n\t\t\t\t, g: splitMulti(cfgAdapter.g)\n\t\t\t};\n\n\t\t\tprogressCurrent = 0;\n\t\t\tprogressTotal = (invitesCard.length > 0) ? (5 + 1 * 2) :\n\t\t\t\t((invitesGlympse.length > 0) ? 3 : 0);\n\n\t\t\tsendEvent(m.AdapterInit, initSettings);\n\t\t\tupdateProgress();\n\n\t\t\t// Start up CoreController first to get current/new auth token\n\t\t\tdbg('Init core..');\n\t\t\tcoreController.init();\n\t\t};\n\n\t\tthis.loadViewer = function(cfgNew, newMapElement)\n\t\t{\n\t\t\tloadMap(cfgNew, newMapElement);\n\t\t};\n\n\t\tthis.infoUpdate = function(id, invite, owner, t, val)\n\t\t{\n\t\t\tinvite = lib.normalizeInvite(invite);\n\n\t\t\tvar targetCards = mapCardTicketInvites[invite] || [];\n\t\t\tvar info, i;\n\t\t\t// send event for each card (same user can share same inviteCode to different cards)\n\t\t\tfor (i = targetCards.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\tinfo = {\n\t\t\t\t\tid: id\n\t\t\t\t\t, invite: invite\n\t\t\t\t\t, owner: owner\n\t\t\t\t\t, card: targetCards[i]\n\t\t\t\t\t, t: t\n\t\t\t\t\t, val: val\n\t\t\t\t};\n\n\t\t\t\tnotifyApp(mStateUpdate, info, false);\n\t\t\t\tsendOasisMessage(mStateUpdate, info);\n\t\t\t}\n\t\t};\n\n\t\tthis.notify = function(msg, args)\n\t\t{\n\t\t\tvar i, idx, idCard, targetCards;\n\n\t\t\tswitch (msg)\n\t\t\t{\n\t\t\t\tcase m.CardInit:\n\t\t\t\tcase m.CardReady:\n\t\t\t\tcase m.CardsInitStart:\n\t\t\t\tcase m.InviteInit:\n\t\t\t\tcase m.ViewerInit:\n\t\t\t\t{\n\t\t\t\t\tupdateProgress();\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.ViewerReady:\n\t\t\t\t{\n\t\t\t\t\t// Break ViewReady out to hand off viewer app reference for local\n\t\t\t\t\t// consumers only. Hosted consumers will only get a notification.\n\t\t\t\t\tupdateProgress();\n\t\t\t\t\tsendOasisMessage(msg, true);\n\t\t\t\t\tnotifyApp(msg, args, true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardsInitEnd:\n\t\t\t\t{\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardUpdated:\n\t\t\t\t\t// dbg('card updated', args);\n\n\t\t\t\t\tswitch (args.action)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'invite_code_found':\n\t\t\t\t\t\tcase 'member_started_sharing':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar ticketInvite = args.invite;\n\t\t\t\t\t\t\tif (!mapCardTicketInvites[ticketInvite])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmapCardTicketInvites[ticketInvite] = [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Track ticket invite for this card. Need to handlecases where\n\t\t\t\t\t\t\t// the same invite is used by a member in multiple cards (like bots)\n\t\t\t\t\t\t\tidCard = args.card.getId();\n\t\t\t\t\t\t\tif (mapCardTicketInvites[ticketInvite].indexOf(idCard) < 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmapCardTicketInvites[ticketInvite].push(idCard);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 'member_stopped_sharing':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//Need to send s.InviteEnd and s.InviteCompleted events\n\t\t\t\t\t\t\tthis.infoUpdate(s.InviteEnd, args.invite, args.userId, args.t, args.t);\n\t\t\t\t\t\t\tthis.infoUpdate(s.InviteCompleted, args.invite, args.userId, args.t, true);\n\n\t\t\t\t\t\t\tvar inviteCards = mapCardTicketInvites[args.invite];\n\t\t\t\t\t\t\tif (inviteCards)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tidx = inviteCards.indexOf(args.card.getId());\n\t\t\t\t\t\t\t\tif (idx >= 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinviteCards.splice(idx, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase m.InviteError:\n\t\t\t\t{\n\t\t\t\t\t//dbg('Invite loading error', args);\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.InviteClicked:\n\t\t\t\t{\n\t\t\t\t\t//dbg('Invite clicked', args);\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.InviteReady:\n\t\t\t\t{\n\t\t\t\t\tif (!args.isLoaded())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inviteError = args.getError();\n\t\t\t\t\t\tdbg('Invite error state', inviteError);\n\n\t\t\t\t\t\tsendEvent(m.InviteError, args);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t//dbg('InviteReady: ' + args.getIdInvite() + ' -- isLoaded=' + args.isLoaded());\n\t\t\t\t\tsendEvent(msg, args);\n\n\t\t\t\t\tidCard = args.getReference();\n\t\t\t\t\t//dbg('Has reference: \"' + idCard + '\"');\n\t\t\t\t\tif (idCard)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (invitesCard.indexOf(idCard) < 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Track back in case of expired card invite\n\t\t\t\t\t\t\tinvitesReferences[idCard] = args.getIdInvite();\n\n\t\t\t\t\t\t\tprogressTotal += (5 + 1 * 2) - 2;\n\t\t\t\t\t\t\tinvitesCard.push(idCard);\n\t\t\t\t\t\t\t//sendEvent(m.AdapterInit, { isCard: true });\n\t\t\t\t\t\t\tupdateProgress();\n\t\t\t\t\t\t\t//cardsController.init(invitesCard);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Use the original invite list\n\t\t\t\t\t\tprogressTotal += (3 - 1);\n\t\t\t\t\t\tupdateProgress();\n\t\t\t\t\t\tcfgViewer.t = args.getIdInvite();\t// FIXME: Breaks for multiple initial invites\n\n\t\t\t\t\t\tloadMap(cfgViewer);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardAdded:\n\t\t\t\t{\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\t//dbg(msg, args);//(msg === m.DataUpdate) ? args : undefined);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.CardRemoved:\n\t\t\t\t{\n\t\t\t\t\tidCard = args.getId();\n\n\t\t\t\t\t// Remove this card from all tracked ticket invites\n\t\t\t\t\tfor (var id in mapCardTicketInvites)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inv = mapCardTicketInvites[id];\n\t\t\t\t\t\tif (!inv)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tidx = inv.indexOf(idCard);\n\t\t\t\t\t\tif (idx >= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinv.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\t//dbg(msg, args);//(msg === m.DataUpdate) ? args : undefined);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.DataUpdate:\n\t\t\t\tcase m.InviteAdded:\n\t\t\t\tcase m.InviteRemoved:\n\t\t\t\t{\n\t\t\t\t\ttargetCards = mapCardTicketInvites[args.id] || [];\n\n\t\t\t\t\t// send event for each card (same user can share same inviteCode to different cards)\n\t\t\t\t\tfor (i = targetCards.length - 1; i >= 0; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tsendEvent(msg, $.extend({card: targetCards[i]}, args));\n\t\t\t\t\t}\n\t\t\t\t\t//dbg(msg, args);//(msg === m.DataUpdate) ? args : undefined);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.AccountLoginStatus:\n\t\t\t\t{\n\t\t\t\t\tif (args.status)\n\t\t\t\t\t{\n\t\t\t\t\t\t// authToken = args.token;\n\t\t\t\t\t\t// cfgAdapter.accountId = cfgViewer.accountId = args.id;\n\t\t\t\t\t\t// cfgAdapter.authToken = cfgViewer.authToken = authToken;\n\t\t\t\t\t\t//dbg('m.AccountInit', args);\n\n\t\t\t\t\t\taccount = coreController.getAccount();\n\t\t\t\t\t\tcfgAdapter.account = account;\n\t\t\t\t\t\tcfgViewer.authToken = account.getToken();\n\n\t\t\t\t\t\targs.account = account;\n\n\t\t\t\t\t\tif (glympseLoader)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tglympseLoader.notify(msg, args);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cardsController)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcardsController.notify(msg, args);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// do not pass \"account\" to consumers\n\t\t\t\t\t\tdelete args.account;\n\t\t\t\t\t}\n\n\t\t\t\t\tsendEvent(msg, args);\n\n\t\t\t\t\tif (!initialized && args.status)\n\t\t\t\t\t{\n\t\t\t\t\t\tinitialized = true;\n\t\t\t\t\t\tloadInvites();\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase m.AccountDeleteStatus:\n\n\t\t\t\t\tif (glympseLoader)\n\t\t\t\t\t{\n\t\t\t\t\t\tglympseLoader.notify(msg, args);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cardsController)\n\t\t\t\t\t{\n\t\t\t\t\t\tcardsController.notify(msg, args);\n\t\t\t\t\t}\n\n\t\t\t\t\tsendEvent(msg, args);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase m.AccountCreateStatus:\n\t\t\t\tcase m.CreateRequestStatus:\n\t\t\t\tcase m.UserNameUpdateStatus:\n\t\t\t\tcase m.UserAvatarUpdateStatus:\n\t\t\t\tcase m.UserInfoStatus:\n\t\t\t\tcase m.CardsJoinRequestStatus:\n\t\t\t\tcase m.CardsJoinRequestCancelStatus:\n\t\t\t\tcase m.CardsActiveJoinRequestsStatus:\n\t\t\t\tcase m.CardRemoveMemberStatus:\n\t\t\t\tcase m.CardsLocationRequestStatus:\n\t\t\t\tcase m.CardsRequestStatus:\n\t\t\t\t{\n\t\t\t\t\tsendEvent(msg, args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tdbg('notify(): unknown msg: \"' + msg + '\"', args);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// EVENT HANDLERS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction loadInvites()\n\t\t{\n\t\t\t// Various invite types handled by the map\n\t\t\tvar t = cfgAdapter.t;\t\t// Core invite\n\t\t\tvar pg = cfgAdapter.pg;\t\t// Core group (public)\n\t\t\tvar twt = cfgAdapter.twt;\t// Twitter user (@) query\n\t\t\tvar g = cfgAdapter.g;\t\t// Twitter topic (#) query\n\n\t\t\t// Card vs Glympse Invite loading\n\t\t\tif (invitesCard.length > 0 || cardsMode)\n\t\t\t{\n\t\t\t\tcardsController.init(invitesCard);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Special handling to determine if a core invite has a card reference\n\t\t\t// GlympseLoader will perform the lookup to determine if indeed there\n\t\t\t// is a card invite to load instead of the presented core invite.\n\t\t\t// FIXME: Assumes only one invite code!\n\t\t//\tif (lib.simplifyInvite(t).indexOf('demobot') < 0)\n\t\t//\t{\n\t\t//\t\tglympseLoader = new GlympseLoader(that, cfgAdapter);\n\t\t//\t\tglympseLoader.init(t);\n\t\t//\t\treturn;\n\t\t//\t}\n\n\t\t\t// Straight invite types to load\n\t\t\tif (t || pg || g || twt)\n\t\t\t{\n\t\t\t\tcfgViewer.t = t;\n\t\t\t\tcfgViewer.pg = pg;\n\t\t\t\tcfgViewer.twt = twt;\n\t\t\t\tcfgViewer.g = g;\n\n\t\t\t\tloadMap(cfgViewer);\n\t\t\t}\n\t\t}\n\n\t\tfunction loadMap(cfgNew, newMapElement)\n\t\t{\n\t\t\tdbg('loadMap!');\n\t\t\t// Signal the cards/invites to load\n\t\t\tsendEvent(m.AdapterReady, {cards: invitesCard, glympses: invitesGlympse});\n\n\t\t\t//console.log('cfg.viewer=' + cfgMonitor.viewer);\n\t\t\t$.extend(cfgViewer, cfgNew);\n\n\t\t\tif (newMapElement)\n\t\t\t{\n\t\t\t\tcfgMonitor.viewer = newMapElement;\n\t\t\t}\n\n\t\t\tif (cfgMonitor.viewer)\n\t\t\t{\n\t\t\t\t//FixMe: viewer can't be initialized w/o invite, so pass incorrect one for now\n\t\t\t\tcfgViewer.t = cfgViewer.t || 'incorrect';\n\n\t\t\t\tviewerMonitor.run();\n\t\t\t\t$(cfgMonitor.viewer).glympser(cfgViewer);\n\t\t\t}\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// INTERNAL\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction splitMulti(val)\n\t\t{\n\t\t\treturn (val && val.split(';'));\n\t\t}\n\n\t\tfunction joinMulti(val)\n\t\t{\n\t\t\treturn (val && val.split(';'));\n\t\t}\n\n\t\tfunction generateTargAction(targ, id)\n\t\t{\n\t\t\treturn function(data)\n\t\t\t{\n\t\t\t\treturn targ.cmd(id, data);\n\t\t\t};\n\t\t}\n\n\t\tfunction generateRequestAction(targ)\n\t\t{\n\t\t\treturn function(data)\n\t\t\t{\n\t\t\t\treturn (targ.cmd(data.id, data.args) || true);\n\t\t\t};\n\t\t}\n\n\t\tfunction updateProgress()\n\t\t{\n\t\t\tsendEvent(m.Progress,\n\t\t\t\t{\n\t\t\t\t\tcurr: Math.min(++progressCurrent, progressTotal)\n\t\t\t\t\t, total: progressTotal\n\t\t\t\t});\n\t\t}\n\n\t\tfunction notifyApp(msg, args, evtMsg)\n\t\t{\n\t\t\tif ((!evtMsg && cfgAdapter.hideUpdates) || (evtMsg && cfgAdapter.hideEvents))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapp.notify(msg, args);\n\t\t}\n\n\t\tfunction sendEvent(msg, args)\n\t\t{\n\t\t\tsendOasisMessage(msg, args);\n\t\t\tnotifyApp(msg, args, true);\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CLIENT-MODE OASIS HANDLERS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t// Once the port is initialized, send along the \"Connect\" command to the host\n\t\tfunction oasisInitialize(newPort, name)\n\t\t{\n\t\t\tdbg('**** Consumer Init **** q=' + connectQueue.length);\n\n\t\t\tport = newPort;\n\t\t\tconnectedOasis = true;\n\n\t\t\tfor (var i = 0, len = connectQueue.length; i < len; i++)\n\t\t\t{\n\t\t\t\tvar q = connectQueue[i];\n\t\t\t\t//dbg('Sending: ' + q.id);\n\t\t\t\tthis.send(q.id, q.val);\n\t\t\t}\n\n\t\t\tconnectQueue = [];\n\n\t\t\tvar extInit = cfgAdapter.initialize;\n\t\t\tif (extInit)\n\t\t\t{\n\t\t\t\textInit(name);\n\t\t\t}\n\t\t}\n\n\t\tfunction sendOasisMessage(id, val)\n\t\t{\n\t\t\tif (connectedOasis)\n\t\t\t{\n\t\t\t\t//dbg('send \"' + id + '\" ', val);\n\t\t\t\tport.send(id, (val && val.toJSON && val.toJSON()) || val);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconnectQueue.push({id: id, val: val});\n\t\t\t}\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// HOST REQUEST HANDLERS (MAP)\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction getInviteProperties(idInvite)\n\t\t{\n\t\t\tif (!viewerMonitor)\n\t\t\t{\n\t\t\t\treturn 'NOT_INITIALIZED';\n\t\t\t}\n\n\t\t\treturn viewerMonitor.getCurrentProperties(idInvite);\n\t\t}\n\n\t\t// cfgInvite = { idProperty: name_of_property_to_retrieve\n\t\t//\t\t\t   , idInvite:   glympse_invite_id --> can be null if first invite is targetted\n\t\t//\t\t\t   }\n\t\tfunction getInviteProperty(cfgInvite)\n\t\t{\n\t\t\tif (!viewerMonitor)\n\t\t\t{\n\t\t\t\treturn 'NOT_INITIALIZED';\n\t\t\t}\n\n\t\t\treturn viewerMonitor.getCurrentValue(cfgInvite.idProperty, cfgInvite.idInvite);\n\t\t}\n\n\t\t/*\t\tfunction requestPing(str)\n\t\t {\n\t\t return new Oasis.RSVP.Promise(function(resolve, reject)\n\t\t {\n\t\t var delay = 100;\n\t\t setTimeout(function()\n\t\t {\n\t\t resolve('PONG - ' + str + ' (delayed ' + delay + 'ms)');\n\t\t }, delay);\n\t\t });\n\t\t }*/\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// HOST EVENT HANDLERS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction setUserInfo(data)\n\t\t{\n\t\t\tdbg('setUserInfo', data);\n\t\t}\n\t}\n\n\n\tmodule.exports = Client;\n});\n\n","// App entry point\ndefine('glympse-adapter/adapter/Host',['require','exports','module','glympse-adapter/lib/utils','glympse-adapter/GlympseAdapterDefines','oasis'],function(require, exports, module)\n{\n    'use strict';\n\n\t// imports\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar Defines = require('glympse-adapter/GlympseAdapterDefines');\n\tvar Oasis = require('oasis');\n\n\n\tfunction Host(controller, oasisLocal, cfg)\n\t{\n\t\tvar cfgApp = (cfg && cfg.app) || {};\n\t\tvar cfgAdapter = (cfg && cfg.adapter) || {};\n\n\t\tvar dbg = lib.dbg('Host', cfgApp.dbg);\n\n\t\t// state\n\t\tvar port;\n\t\tvar sandbox;\n\n\t\tvar callbackInitialized;\t// Channel created\n\t\tvar callbackConnected;\t\t// Channel established\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.init = function(settings)\n\t\t{\n\t\t\tcallbackInitialized = settings.initialize;\n\t\t\tcallbackConnected = settings.connect;\n\n\t\t\tvar events = settings.events || {};\n\t\t\tevents.Connected = connect;\n\n\t\t\tvar idPort = Defines.PORT;\n\t\t\tvar cfgSandbox = { url: settings.url,\n\t\t\t\t\t\t\t   type: 'html',\n\t\t\t\t\t\t\t   capabilities: [ idPort ],\n\t\t\t\t\t\t\t   services: { }\n\t\t\t\t\t\t\t };\n\n\t\t\tcfgSandbox.services[idPort] = Oasis.Service.extend(\n\t\t\t\t{\n\t\t\t\t\tinitialize: initialize,\n\t\t\t\t\tevents: events,\n\t\t\t\t\trequests:\n\t\t\t\t\t{\n\t\t\t\t\t\tgetInfo: requestGetInfo\n\t\t\t\t\t\t//, ping: requestPing\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tsandbox = oasisLocal.createSandbox(cfgSandbox);\n\n\t\t\treturn sandbox.el;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// INTERNAL\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction initialize(newPort, name)\n\t\t{\n\t\t\tport = newPort;\n\n\t\t\t//dbg('GlympseHost initialized --- \"' + name + '\"');\n\t\t\tif (callbackInitialized)\n\t\t\t{\n\t\t\t\tcallbackInitialized(name);\n\t\t\t}\n\t\t}\n\n\t\tfunction connect(data)\n\t\t{\n\t\t\t//dbg('GlympseHost connect --- data', data);\n\t\t\t//port = sandbox.capabilities[Defines.PORT];\n\n\t\t\tdbg('clientConnected: \"' + data.id + '\" v(' + data.version + ')');\n\t\t\tvar interfaceTypes = [ 'map', 'card', 'ext' ];\n\n\t\t\t// Generate API endpoints on main GA instance based on\n\t\t\t// the advertised interfaces from the client\n\t\t\tfor (var i = 0, len = interfaceTypes.length; i < len; i++)\n\t\t\t{\n\t\t\t\tvar intType = interfaceTypes[i];\n\t\t\t\tvar interfaces = (data && data[intType]);\n\n\n\t\t\t\tif (interfaces)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0, jlen = interfaces.length; j < jlen; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar id = interfaces[j];\n\t\t\t\t\t\tcontroller[intType][id] = generateCustomInterface(intType, id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (callbackConnected)\n\t\t\t{\n\t\t\t\tcallbackConnected(data);\n\t\t\t}\n\t\t}\n\n\t\tfunction requestGetInfo(infoType)\n\t\t{\n\t\t\tdbg('[request.getInfo]', infoType);\n\t\t\tswitch (infoType)\n\t\t\t{\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\treturn { error: 'Unknown infoType \"' + infoType + '\"' };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction generateCustomInterface(intType, id)\n\t\t{\n\t\t\tvar request = { id: id, args: null };\n\n\t\t\treturn function(args)\n\t\t\t{\n\t\t\t\trequest.args = args;\n\t\t\t\treturn port.request(intType, request);\n\t\t\t};\n\t\t}\n\n/*\t\tfunction requestPing(str)\n\t\t{\n\t\t\treturn new Oasis.RSVP.Promise(function(resolve, reject)\n\t\t\t{\n\t\t\t\tvar delay = 100;\n\t\t\t\tsetTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tresolve('PONG - ' + str + ' (delayed ' + delay + 'ms)');\n\t\t\t\t}, delay);\n\t\t\t});\n\t\t}*/\n\t}\n\n\n\tmodule.exports = Host;\n});\n\n","// App entry point\ndefine('GlympseAdapter',['require','exports','module','UUID','kamino','MessageChannel','glympse-adapter/lib/utils','oasis','glympse-adapter/VersionInfo','glympse-adapter/adapter/Client','glympse-adapter/adapter/Host'],function(require, exports, module)\n{\n\t'use strict';\n\n\t// Polyfills - external\n\trequire('UUID');\n\trequire('kamino');\n\trequire('MessageChannel');\n\n\t// imports\n\tvar lib = require('glympse-adapter/lib/utils');\n\tvar Oasis = require('oasis');\n\tvar VersionInfo = require('glympse-adapter/VersionInfo');\n\tvar Client = require('glympse-adapter/adapter/Client');\n\tvar Host = require('glympse-adapter/adapter/Host');\n\n\n\t// Faked AMD module setup -- necessary??\n\tif (!window.Oasis)\n\t{\n\t\twindow.Oasis = Oasis;\t\t\t// Needed for some Oasis modules\n\t}\n\n\n\tfunction GlympseAdapter(controller, cfg)\n\t{\n\t\tvar cfgApp = (cfg && cfg.app) || {};\n\t\tvar cfgAdapter = (cfg && cfg.adapter) || {};\n\t\tvar dbg = lib.dbg('GlympseAdapter', cfgApp.dbg);\n\n\t\tvar client;\t\t\t// client mode\n\t\tvar host;\t\t\t// host mode\n\t\tvar hostElement;\t// host mode\n\t\tvar oasisLocal;\n\t\tvar that = this;\n\n\t\tvar glympserLoader = null;\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// API endpoint namespace (updated at runtime)\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.map = {};\n\t\tthis.cards = {};\n\t\tthis.ext = {};\n\t\tthis.core = {};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PROPERTIES\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t//this.getViewer = function()\n\t\t//{\n\t\t//\treturn (client && client.getViewer());\n\t\t//};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// PUBLICS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tthis.loadViewer = function(cfgNew, mapHtmlElement)\n\t\t{\n\t\t\tif (!glympserLoader)\n\t\t\t{\n\t\t\t\tdbg('adapter must be initialized in client mode first', null, 3);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tglympserLoader.done(function()\n\t\t\t{\n\t\t\t\tclient.loadViewer(cfgNew, mapHtmlElement);\n\t\t\t});\n\t\t};\n\n\t\tthis.host = function(cfgHost)\n\t\t{\n\t\t\tif (host || client)\n\t\t\t{\n\t\t\t\treturn hostElement;\n\t\t\t}\n\n\t\t\thost = new Host(this, oasisLocal, cfg);\n\t\t\thostElement = host.init(cfgHost);\n\n\t\t\treturn hostElement;\n\t\t};\n\n\t\tthis.client = function(mapHtmlElement)\n\t\t{\n\t\t\tif (host || client)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tglympserLoader = loadGlympser();\n\n\t\t\tglympserLoader.done(function()\n\t\t\t{\n\t\t\t\tclient = new Client(that\n\t\t\t\t\t, oasisLocal\n\t\t\t\t\t, controller\n\t\t\t\t\t, cfg\n\t\t\t\t\t, (mapHtmlElement && mapHtmlElement[0])\n\t\t\t\t);\n\n\t\t\t\tclient.init({\n\t\t\t\t\tid: VersionInfo.id\n\t\t\t\t\t, version: VersionInfo.version\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// INTERNAL\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\tfunction loadGlympser()\n\t\t{\n\t\t\tvar loader = $.Deferred();\n\t\t\tif ($.fn.glympser)\n\t\t\t{\n\t\t\t\tdbg('glympser loader is already included in the page - use existing.');\n\t\t\t\tloader.resolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar loaderUrl = cfgAdapter.loaderPath ||\n\t\t\t\t\t\t\t\t[ '//'\n\t\t\t\t\t\t\t\t, ((cfgAdapter.loaderEnvironment === 'sandbox' || cfgAdapter.sandbox) ? 's-' : '')\n\t\t\t\t\t\t\t\t, 'viewer.content.glympse.com/components/glympse-viewer/'\n\t\t\t\t\t\t\t\t, (cfgAdapter.loaderVersion || 'latest')\n\t\t\t\t\t\t\t\t, '/jquery.glympser.min.js'\n\t\t\t\t\t\t\t\t].join('');\n\n\t\t\t\tdbg('loading glympser loader from', loaderUrl);\n\t\t\t\t$.ajax({ dataType: 'script', cache: true, url: loaderUrl })\n\t\t\t\t\t.done(function()\n\t\t\t\t\t{\n\t\t\t\t\t\tdbg('.. loaded glympser loader!');\n\t\t\t\t\t\tloader.resolve();\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function()\n\t\t\t\t\t{\n\t\t\t\t\t\tdbg('Failed to load Loader script:', arguments, 3);\n\t\t\t\t\t\tloader.reject();\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn loader;\n\t\t}\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t// CTOR\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\toasisLocal = new Oasis();\t\t\t// Found in minified source\n\t\toasisLocal.autoInitializeSandbox();\t// Found in minified source\n\t\toasisLocal.configure('allowSameOrigin', true);\n\t}\n\n\n\t// Global namespace registration\n\tif (!window.glympse)\n\t{\n\t\twindow.glympse = {};\n\t}\n\n\tif (!window.glympse.GlympseAdapter)\n\t{\n\t\twindow.glympse.GlympseAdapter = GlympseAdapter;\n\t}\n\n\tmodule.exports = GlympseAdapter;\n});\n\n","\nrequire([\"GlympseAdapter\"]);\n"]}